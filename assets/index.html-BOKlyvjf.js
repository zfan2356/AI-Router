import{_ as r,c as i,b as l,a as p,d as s,e as n,w as a,r as o,o as d}from"./app-0p9pLXBN.js";const u={};function m(f,e){const t=o("RouteLink");return d(),i("div",null,[e[10]||(e[10]=l("p",null,"一个有关Pre Train的专题合集，目前的TODO LIST:",-1)),e[11]||(e[11]=l("h2",{id:"一-技术杂谈",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#一-技术杂谈"},[l("span",null,"一. 技术杂谈")])],-1)),l("ul",null,[l("li",null,[l("p",null,[s(t,{to:"/notes/system/ai-router-v2/docs/notes/system/pre-train/model_parallel.html"},{default:a(()=>e[0]||(e[0]=[n("LLM Parallel Strategy")])),_:1}),e[1]||(e[1]=n(": 什么是数据并行/张量并行/流水线并行，以及3D混合并行"))])]),l("li",null,[l("p",null,[s(t,{to:"/notes/system/ai-router-v2/docs/notes/system/pre-train/pp_communication.html"},{default:a(()=>e[2]||(e[2]=[n("Pipline Parallel")])),_:1}),e[3]||(e[3]=n("：总结pp的通信和调度算法，从零手搓一个pp调度库，集合1F1B调度以及DualPipe"))])]),e[4]||(e[4]=l("li",null,[l("p",null,[l("a",{href:""},"ZeRO"),n(":")])],-1))]),e[12]||(e[12]=l("h2",{id:"二-源码剖析",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#二-源码剖析"},[l("span",null,"二. 源码剖析")])],-1)),l("ul",null,[l("li",null,[e[7]||(e[7]=l("p",null,"DeepSpeed",-1)),l("ul",null,[l("li",null,[s(t,{to:"/notes/system/ai-router-v2/docs/notes/system/pre-train/deepspeed/deepspeed01.html"},{default:a(()=>e[5]||(e[5]=[n("launcher+Initialize")])),_:1})]),e[6]||(e[6]=l("li",null,[l("a",{href:""},"engine")],-1))])]),e[8]||(e[8]=l("li",null,[l("p",null,"Megatron")],-1)),e[9]||(e[9]=l("li",null,[l("p",null,"DeepSpeed+Megatron")],-1))]),e[13]||(e[13]=p('<p>个人感觉比较合理的学习顺序是先学一些技术，然后去著名的开源项目之中印证自己所学，看一下具体的code是怎么写的。pre train的精髓之一就是各种parallel策略，首先需要知道何为3D并行，何为ZeRO，然后再去看项目。</p><h1 id="rl" tabindex="-1"><a class="header-anchor" href="#rl"><span>RL</span></a></h1><p>TODO</p><h1 id="inference" tabindex="-1"><a class="header-anchor" href="#inference"><span>Inference</span></a></h1><p>TODO</p><h1 id="quant" tabindex="-1"><a class="header-anchor" href="#quant"><span>Quant</span></a></h1><p>TODO</p>',7))])}const x=r(u,[["render",m]]),O=JSON.parse('{"path":"/system/","title":"system","lang":"zh-CN","frontmatter":{"title":"system","createTime":"2025/04/11 22:28:04","permalink":"/system/"},"headers":[],"readingTime":{"minutes":0.7,"words":209},"git":{"updatedTime":1749997292000},"filePathRelative":"notes/system/README.md","bulletin":false}');export{x as comp,O as data};
