{
  "version": 3,
  "sources": ["../../../../node_modules/katex/dist/katex.js", "../../../../node_modules/@vscode/markdown-it-katex/dist/index.js", "../../../../node_modules/markmap-html-parser/dist/index.mjs", "../../../../node_modules/markdown-it/lib/common/utils.mjs", "../../../../node_modules/mdurl/index.mjs", "../../../../node_modules/mdurl/lib/decode.mjs", "../../../../node_modules/mdurl/lib/encode.mjs", "../../../../node_modules/mdurl/lib/format.mjs", "../../../../node_modules/mdurl/lib/parse.mjs", "../../../../node_modules/uc.micro/index.mjs", "../../../../node_modules/uc.micro/properties/Any/regex.mjs", "../../../../node_modules/uc.micro/categories/Cc/regex.mjs", "../../../../node_modules/uc.micro/categories/Cf/regex.mjs", "../../../../node_modules/uc.micro/categories/P/regex.mjs", "../../../../node_modules/uc.micro/categories/S/regex.mjs", "../../../../node_modules/uc.micro/categories/Z/regex.mjs", "../../../../node_modules/entities/lib/esm/generated/generated/decode-data-html.ts", "../../../../node_modules/entities/lib/esm/generated/generated/decode-data-xml.ts", "../../../../node_modules/entities/lib/esm/decode_codepoint.ts", "../../../../node_modules/entities/lib/esm/decode.ts", "../../../../node_modules/entities/lib/esm/generated/generated/encode-html.ts", "../../../../node_modules/entities/lib/esm/escape.ts", "../../../../node_modules/entities/lib/esm/index.ts", "../../../../node_modules/markdown-it/lib/helpers/index.mjs", "../../../../node_modules/markdown-it/lib/helpers/parse_link_label.mjs", "../../../../node_modules/markdown-it/lib/helpers/parse_link_destination.mjs", "../../../../node_modules/markdown-it/lib/helpers/parse_link_title.mjs", "../../../../node_modules/markdown-it/lib/renderer.mjs", "../../../../node_modules/markdown-it/lib/ruler.mjs", "../../../../node_modules/markdown-it/lib/token.mjs", "../../../../node_modules/markdown-it/lib/rules_core/state_core.mjs", "../../../../node_modules/markdown-it/lib/rules_core/normalize.mjs", "../../../../node_modules/markdown-it/lib/rules_core/block.mjs", "../../../../node_modules/markdown-it/lib/rules_core/inline.mjs", "../../../../node_modules/markdown-it/lib/rules_core/linkify.mjs", "../../../../node_modules/markdown-it/lib/rules_core/replacements.mjs", "../../../../node_modules/markdown-it/lib/rules_core/smartquotes.mjs", "../../../../node_modules/markdown-it/lib/rules_core/text_join.mjs", "../../../../node_modules/markdown-it/lib/parser_core.mjs", "../../../../node_modules/markdown-it/lib/rules_block/state_block.mjs", "../../../../node_modules/markdown-it/lib/rules_block/table.mjs", "../../../../node_modules/markdown-it/lib/rules_block/code.mjs", "../../../../node_modules/markdown-it/lib/rules_block/fence.mjs", "../../../../node_modules/markdown-it/lib/rules_block/blockquote.mjs", "../../../../node_modules/markdown-it/lib/rules_block/hr.mjs", "../../../../node_modules/markdown-it/lib/rules_block/list.mjs", "../../../../node_modules/markdown-it/lib/rules_block/reference.mjs", "../../../../node_modules/markdown-it/lib/common/html_blocks.mjs", "../../../../node_modules/markdown-it/lib/common/html_re.mjs", "../../../../node_modules/markdown-it/lib/rules_block/html_block.mjs", "../../../../node_modules/markdown-it/lib/rules_block/heading.mjs", "../../../../node_modules/markdown-it/lib/rules_block/lheading.mjs", "../../../../node_modules/markdown-it/lib/rules_block/paragraph.mjs", "../../../../node_modules/markdown-it/lib/parser_block.mjs", "../../../../node_modules/markdown-it/lib/rules_inline/state_inline.mjs", "../../../../node_modules/markdown-it/lib/rules_inline/text.mjs", "../../../../node_modules/markdown-it/lib/rules_inline/linkify.mjs", "../../../../node_modules/markdown-it/lib/rules_inline/newline.mjs", "../../../../node_modules/markdown-it/lib/rules_inline/escape.mjs", "../../../../node_modules/markdown-it/lib/rules_inline/backticks.mjs", "../../../../node_modules/markdown-it/lib/rules_inline/strikethrough.mjs", "../../../../node_modules/markdown-it/lib/rules_inline/emphasis.mjs", "../../../../node_modules/markdown-it/lib/rules_inline/link.mjs", "../../../../node_modules/markdown-it/lib/rules_inline/image.mjs", "../../../../node_modules/markdown-it/lib/rules_inline/autolink.mjs", "../../../../node_modules/markdown-it/lib/rules_inline/html_inline.mjs", "../../../../node_modules/markdown-it/lib/rules_inline/entity.mjs", "../../../../node_modules/markdown-it/lib/rules_inline/balance_pairs.mjs", "../../../../node_modules/markdown-it/lib/rules_inline/fragments_join.mjs", "../../../../node_modules/markdown-it/lib/parser_inline.mjs", "../../../../node_modules/linkify-it/lib/re.mjs", "../../../../node_modules/linkify-it/index.mjs", "../../../../node_modules/punycode.js/punycode.es6.js", "../../../../node_modules/markdown-it/lib/presets/default.mjs", "../../../../node_modules/markdown-it/lib/presets/zero.mjs", "../../../../node_modules/markdown-it/lib/presets/commonmark.mjs", "../../../../node_modules/markdown-it/lib/index.mjs", "../../../../node_modules/markdown-it-ins/index.mjs", "../../../../node_modules/markdown-it-mark/index.mjs", "../../../../node_modules/markdown-it-sub/index.mjs", "../../../../node_modules/markdown-it-sup/index.mjs", "../../../../node_modules/yaml/browser/dist/nodes/identity.js", "../../../../node_modules/yaml/browser/dist/visit.js", "../../../../node_modules/yaml/browser/dist/doc/directives.js", "../../../../node_modules/yaml/browser/dist/doc/anchors.js", "../../../../node_modules/yaml/browser/dist/doc/applyReviver.js", "../../../../node_modules/yaml/browser/dist/nodes/toJS.js", "../../../../node_modules/yaml/browser/dist/nodes/Node.js", "../../../../node_modules/yaml/browser/dist/nodes/Alias.js", "../../../../node_modules/yaml/browser/dist/nodes/Scalar.js", "../../../../node_modules/yaml/browser/dist/doc/createNode.js", "../../../../node_modules/yaml/browser/dist/nodes/Collection.js", "../../../../node_modules/yaml/browser/dist/stringify/stringifyComment.js", "../../../../node_modules/yaml/browser/dist/stringify/foldFlowLines.js", "../../../../node_modules/yaml/browser/dist/stringify/stringifyString.js", "../../../../node_modules/yaml/browser/dist/stringify/stringify.js", "../../../../node_modules/yaml/browser/dist/stringify/stringifyPair.js", "../../../../node_modules/yaml/browser/dist/log.js", "../../../../node_modules/yaml/browser/dist/schema/yaml-1.1/merge.js", "../../../../node_modules/yaml/browser/dist/nodes/addPairToJSMap.js", "../../../../node_modules/yaml/browser/dist/nodes/Pair.js", "../../../../node_modules/yaml/browser/dist/stringify/stringifyCollection.js", "../../../../node_modules/yaml/browser/dist/nodes/YAMLMap.js", "../../../../node_modules/yaml/browser/dist/schema/common/map.js", "../../../../node_modules/yaml/browser/dist/nodes/YAMLSeq.js", "../../../../node_modules/yaml/browser/dist/schema/common/seq.js", "../../../../node_modules/yaml/browser/dist/schema/common/string.js", "../../../../node_modules/yaml/browser/dist/schema/common/null.js", "../../../../node_modules/yaml/browser/dist/schema/core/bool.js", "../../../../node_modules/yaml/browser/dist/stringify/stringifyNumber.js", "../../../../node_modules/yaml/browser/dist/schema/core/float.js", "../../../../node_modules/yaml/browser/dist/schema/core/int.js", "../../../../node_modules/yaml/browser/dist/schema/core/schema.js", "../../../../node_modules/yaml/browser/dist/schema/json/schema.js", "../../../../node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js", "../../../../node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js", "../../../../node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js", "../../../../node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js", "../../../../node_modules/yaml/browser/dist/schema/yaml-1.1/float.js", "../../../../node_modules/yaml/browser/dist/schema/yaml-1.1/int.js", "../../../../node_modules/yaml/browser/dist/schema/yaml-1.1/set.js", "../../../../node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js", "../../../../node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js", "../../../../node_modules/yaml/browser/dist/schema/tags.js", "../../../../node_modules/yaml/browser/dist/schema/Schema.js", "../../../../node_modules/yaml/browser/dist/stringify/stringifyDocument.js", "../../../../node_modules/yaml/browser/dist/doc/Document.js", "../../../../node_modules/yaml/browser/dist/errors.js", "../../../../node_modules/yaml/browser/dist/compose/resolve-props.js", "../../../../node_modules/yaml/browser/dist/compose/util-contains-newline.js", "../../../../node_modules/yaml/browser/dist/compose/util-flow-indent-check.js", "../../../../node_modules/yaml/browser/dist/compose/util-map-includes.js", "../../../../node_modules/yaml/browser/dist/compose/resolve-block-map.js", "../../../../node_modules/yaml/browser/dist/compose/resolve-block-seq.js", "../../../../node_modules/yaml/browser/dist/compose/resolve-end.js", "../../../../node_modules/yaml/browser/dist/compose/resolve-flow-collection.js", "../../../../node_modules/yaml/browser/dist/compose/compose-collection.js", "../../../../node_modules/yaml/browser/dist/compose/resolve-block-scalar.js", "../../../../node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js", "../../../../node_modules/yaml/browser/dist/compose/compose-scalar.js", "../../../../node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js", "../../../../node_modules/yaml/browser/dist/compose/compose-node.js", "../../../../node_modules/yaml/browser/dist/compose/compose-doc.js", "../../../../node_modules/yaml/browser/dist/compose/composer.js", "../../../../node_modules/yaml/browser/dist/parse/cst-visit.js", "../../../../node_modules/yaml/browser/dist/parse/cst.js", "../../../../node_modules/yaml/browser/dist/parse/lexer.js", "../../../../node_modules/yaml/browser/dist/parse/line-counter.js", "../../../../node_modules/yaml/browser/dist/parse/parser.js", "../../../../node_modules/yaml/browser/dist/public-api.js", "../../../../node_modules/markmap-lib/dist/browser/index.mjs"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"katex\"] = factory();\n\telse\n\t\troot[\"katex\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \t// The require scope\n/******/ \tvar __webpack_require__ = {};\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ katex_webpack; }\n});\n\n;// CONCATENATED MODULE: ./src/ParseError.js\n\n\n/**\n * This is the ParseError class, which is the main error thrown by KaTeX\n * functions when something has gone wrong. This is used to distinguish internal\n * errors from errors in the expression that the user provided.\n *\n * If possible, a caller should provide a Token or ParseNode with information\n * about where in the source string the problem occurred.\n */\nclass ParseError {\n  // Error start position based on passed-in Token or ParseNode.\n  // Length of affected text based on passed-in Token or ParseNode.\n  // The underlying error message without any context added.\n  constructor(message, // The error message\n  token // An object providing position information\n  ) {\n    this.name = void 0;\n    this.position = void 0;\n    this.length = void 0;\n    this.rawMessage = void 0;\n    let error = \"KaTeX parse error: \" + message;\n    let start;\n    let end;\n    const loc = token && token.loc;\n\n    if (loc && loc.start <= loc.end) {\n      // If we have the input and a position, make the error a bit fancier\n      // Get the input\n      const input = loc.lexer.input; // Prepend some information\n\n      start = loc.start;\n      end = loc.end;\n\n      if (start === input.length) {\n        error += \" at end of input: \";\n      } else {\n        error += \" at position \" + (start + 1) + \": \";\n      } // Underline token in question using combining underscores\n\n\n      const underlined = input.slice(start, end).replace(/[^]/g, \"$&\\u0332\"); // Extract some context from the input and add it to the error\n\n      let left;\n\n      if (start > 15) {\n        left = \"…\" + input.slice(start - 15, start);\n      } else {\n        left = input.slice(0, start);\n      }\n\n      let right;\n\n      if (end + 15 < input.length) {\n        right = input.slice(end, end + 15) + \"…\";\n      } else {\n        right = input.slice(end);\n      }\n\n      error += left + underlined + right;\n    } // Some hackery to make ParseError a prototype of Error\n    // See http://stackoverflow.com/a/8460753\n    // $FlowFixMe\n\n\n    const self = new Error(error);\n    self.name = \"ParseError\"; // $FlowFixMe\n\n    self.__proto__ = ParseError.prototype;\n    self.position = start;\n\n    if (start != null && end != null) {\n      self.length = end - start;\n    }\n\n    self.rawMessage = message;\n    return self;\n  }\n\n} // $FlowFixMe More hackery\n\n\nParseError.prototype.__proto__ = Error.prototype;\n/* harmony default export */ var src_ParseError = (ParseError);\n;// CONCATENATED MODULE: ./src/utils.js\n/**\n * This file contains a list of utility functions which are useful in other\n * files.\n */\n\n/**\n * Return whether an element is contained in a list\n */\nconst contains = function (list, elem) {\n  return list.indexOf(elem) !== -1;\n};\n/**\n * Provide a default value if a setting is undefined\n * NOTE: Couldn't use `T` as the output type due to facebook/flow#5022.\n */\n\n\nconst deflt = function (setting, defaultIfUndefined) {\n  return setting === undefined ? defaultIfUndefined : setting;\n}; // hyphenate and escape adapted from Facebook's React under Apache 2 license\n\n\nconst uppercase = /([A-Z])/g;\n\nconst hyphenate = function (str) {\n  return str.replace(uppercase, \"-$1\").toLowerCase();\n};\n\nconst ESCAPE_LOOKUP = {\n  \"&\": \"&amp;\",\n  \">\": \"&gt;\",\n  \"<\": \"&lt;\",\n  \"\\\"\": \"&quot;\",\n  \"'\": \"&#x27;\"\n};\nconst ESCAPE_REGEX = /[&><\"']/g;\n/**\n * Escapes text to prevent scripting attacks.\n */\n\nfunction utils_escape(text) {\n  return String(text).replace(ESCAPE_REGEX, match => ESCAPE_LOOKUP[match]);\n}\n/**\n * Sometimes we want to pull out the innermost element of a group. In most\n * cases, this will just be the group itself, but when ordgroups and colors have\n * a single element, we want to pull that out.\n */\n\n\nconst getBaseElem = function (group) {\n  if (group.type === \"ordgroup\") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === \"color\") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === \"font\") {\n    return getBaseElem(group.body);\n  } else {\n    return group;\n  }\n};\n/**\n * TeXbook algorithms often reference \"character boxes\", which are simply groups\n * with a single character in them. To decide if something is a character box,\n * we find its innermost group, and see if it is a single character.\n */\n\n\nconst isCharacterBox = function (group) {\n  const baseElem = getBaseElem(group); // These are all they types of groups which hold single characters\n\n  return baseElem.type === \"mathord\" || baseElem.type === \"textord\" || baseElem.type === \"atom\";\n};\n\nconst assert = function (value) {\n  if (!value) {\n    throw new Error('Expected non-null, but got ' + String(value));\n  }\n\n  return value;\n};\n/**\n * Return the protocol of a URL, or \"_relative\" if the URL does not specify a\n * protocol (and thus is relative), or `null` if URL has invalid protocol\n * (so should be outright rejected).\n */\n\nconst protocolFromUrl = function (url) {\n  // Check for possible leading protocol.\n  // https://url.spec.whatwg.org/#url-parsing strips leading whitespace\n  // (U+20) or C0 control (U+00-U+1F) characters.\n  // eslint-disable-next-line no-control-regex\n  const protocol = /^[\\x00-\\x20]*([^\\\\/#?]*?)(:|&#0*58|&#x0*3a|&colon)/i.exec(url);\n\n  if (!protocol) {\n    return \"_relative\";\n  } // Reject weird colons\n\n\n  if (protocol[2] !== \":\") {\n    return null;\n  } // Reject invalid characters in scheme according to\n  // https://datatracker.ietf.org/doc/html/rfc3986#section-3.1\n\n\n  if (!/^[a-zA-Z][a-zA-Z0-9+\\-.]*$/.test(protocol[1])) {\n    return null;\n  } // Lowercase the protocol\n\n\n  return protocol[1].toLowerCase();\n};\n/* harmony default export */ var utils = ({\n  contains,\n  deflt,\n  escape: utils_escape,\n  hyphenate,\n  getBaseElem,\n  isCharacterBox,\n  protocolFromUrl\n});\n;// CONCATENATED MODULE: ./src/Settings.js\n/* eslint no-console:0 */\n\n/**\n * This is a module for storing settings passed into KaTeX. It correctly handles\n * default settings.\n */\n\n\n\n// TODO: automatically generate documentation\n// TODO: check all properties on Settings exist\n// TODO: check the type of a property on Settings matches\nconst SETTINGS_SCHEMA = {\n  displayMode: {\n    type: \"boolean\",\n    description: \"Render math in display mode, which puts the math in \" + \"display style (so \\\\int and \\\\sum are large, for example), and \" + \"centers the math on the page on its own line.\",\n    cli: \"-d, --display-mode\"\n  },\n  output: {\n    type: {\n      enum: [\"htmlAndMathml\", \"html\", \"mathml\"]\n    },\n    description: \"Determines the markup language of the output.\",\n    cli: \"-F, --format <type>\"\n  },\n  leqno: {\n    type: \"boolean\",\n    description: \"Render display math in leqno style (left-justified tags).\"\n  },\n  fleqn: {\n    type: \"boolean\",\n    description: \"Render display math flush left.\"\n  },\n  throwOnError: {\n    type: \"boolean\",\n    default: true,\n    cli: \"-t, --no-throw-on-error\",\n    cliDescription: \"Render errors (in the color given by --error-color) ins\" + \"tead of throwing a ParseError exception when encountering an error.\"\n  },\n  errorColor: {\n    type: \"string\",\n    default: \"#cc0000\",\n    cli: \"-c, --error-color <color>\",\n    cliDescription: \"A color string given in the format 'rgb' or 'rrggbb' \" + \"(no #). This option determines the color of errors rendered by the \" + \"-t option.\",\n    cliProcessor: color => \"#\" + color\n  },\n  macros: {\n    type: \"object\",\n    cli: \"-m, --macro <def>\",\n    cliDescription: \"Define custom macro of the form '\\\\foo:expansion' (use \" + \"multiple -m arguments for multiple macros).\",\n    cliDefault: [],\n    cliProcessor: (def, defs) => {\n      defs.push(def);\n      return defs;\n    }\n  },\n  minRuleThickness: {\n    type: \"number\",\n    description: \"Specifies a minimum thickness, in ems, for fraction lines,\" + \" `\\\\sqrt` top lines, `{array}` vertical lines, `\\\\hline`, \" + \"`\\\\hdashline`, `\\\\underline`, `\\\\overline`, and the borders of \" + \"`\\\\fbox`, `\\\\boxed`, and `\\\\fcolorbox`.\",\n    processor: t => Math.max(0, t),\n    cli: \"--min-rule-thickness <size>\",\n    cliProcessor: parseFloat\n  },\n  colorIsTextColor: {\n    type: \"boolean\",\n    description: \"Makes \\\\color behave like LaTeX's 2-argument \\\\textcolor, \" + \"instead of LaTeX's one-argument \\\\color mode change.\",\n    cli: \"-b, --color-is-text-color\"\n  },\n  strict: {\n    type: [{\n      enum: [\"warn\", \"ignore\", \"error\"]\n    }, \"boolean\", \"function\"],\n    description: \"Turn on strict / LaTeX faithfulness mode, which throws an \" + \"error if the input uses features that are not supported by LaTeX.\",\n    cli: \"-S, --strict\",\n    cliDefault: false\n  },\n  trust: {\n    type: [\"boolean\", \"function\"],\n    description: \"Trust the input, enabling all HTML features such as \\\\url.\",\n    cli: \"-T, --trust\"\n  },\n  maxSize: {\n    type: \"number\",\n    default: Infinity,\n    description: \"If non-zero, all user-specified sizes, e.g. in \" + \"\\\\rule{500em}{500em}, will be capped to maxSize ems. Otherwise, \" + \"elements and spaces can be arbitrarily large\",\n    processor: s => Math.max(0, s),\n    cli: \"-s, --max-size <n>\",\n    cliProcessor: parseInt\n  },\n  maxExpand: {\n    type: \"number\",\n    default: 1000,\n    description: \"Limit the number of macro expansions to the specified \" + \"number, to prevent e.g. infinite macro loops. If set to Infinity, \" + \"the macro expander will try to fully expand as in LaTeX.\",\n    processor: n => Math.max(0, n),\n    cli: \"-e, --max-expand <n>\",\n    cliProcessor: n => n === \"Infinity\" ? Infinity : parseInt(n)\n  },\n  globalGroup: {\n    type: \"boolean\",\n    cli: false\n  }\n};\n\nfunction getDefaultValue(schema) {\n  if (schema.default) {\n    return schema.default;\n  }\n\n  const type = schema.type;\n  const defaultType = Array.isArray(type) ? type[0] : type;\n\n  if (typeof defaultType !== 'string') {\n    return defaultType.enum[0];\n  }\n\n  switch (defaultType) {\n    case 'boolean':\n      return false;\n\n    case 'string':\n      return '';\n\n    case 'number':\n      return 0;\n\n    case 'object':\n      return {};\n  }\n}\n/**\n * The main Settings object\n *\n * The current options stored are:\n *  - displayMode: Whether the expression should be typeset as inline math\n *                 (false, the default), meaning that the math starts in\n *                 \\textstyle and is placed in an inline-block); or as display\n *                 math (true), meaning that the math starts in \\displaystyle\n *                 and is placed in a block with vertical margin.\n */\n\n\nclass Settings {\n  constructor(options) {\n    this.displayMode = void 0;\n    this.output = void 0;\n    this.leqno = void 0;\n    this.fleqn = void 0;\n    this.throwOnError = void 0;\n    this.errorColor = void 0;\n    this.macros = void 0;\n    this.minRuleThickness = void 0;\n    this.colorIsTextColor = void 0;\n    this.strict = void 0;\n    this.trust = void 0;\n    this.maxSize = void 0;\n    this.maxExpand = void 0;\n    this.globalGroup = void 0;\n    // allow null options\n    options = options || {};\n\n    for (const prop in SETTINGS_SCHEMA) {\n      if (SETTINGS_SCHEMA.hasOwnProperty(prop)) {\n        // $FlowFixMe\n        const schema = SETTINGS_SCHEMA[prop]; // TODO: validate options\n        // $FlowFixMe\n\n        this[prop] = options[prop] !== undefined ? schema.processor ? schema.processor(options[prop]) : options[prop] : getDefaultValue(schema);\n      }\n    }\n  }\n  /**\n   * Report nonstrict (non-LaTeX-compatible) input.\n   * Can safely not be called if `this.strict` is false in JavaScript.\n   */\n\n\n  reportNonstrict(errorCode, errorMsg, token) {\n    let strict = this.strict;\n\n    if (typeof strict === \"function\") {\n      // Allow return value of strict function to be boolean or string\n      // (or null/undefined, meaning no further processing).\n      strict = strict(errorCode, errorMsg, token);\n    }\n\n    if (!strict || strict === \"ignore\") {\n      return;\n    } else if (strict === true || strict === \"error\") {\n      throw new src_ParseError(\"LaTeX-incompatible input and strict mode is set to 'error': \" + (errorMsg + \" [\" + errorCode + \"]\"), token);\n    } else if (strict === \"warn\") {\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + (errorMsg + \" [\" + errorCode + \"]\"));\n    } else {\n      // won't happen in type-safe code\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + (\"unrecognized '\" + strict + \"': \" + errorMsg + \" [\" + errorCode + \"]\"));\n    }\n  }\n  /**\n   * Check whether to apply strict (LaTeX-adhering) behavior for unusual\n   * input (like `\\\\`).  Unlike `nonstrict`, will not throw an error;\n   * instead, \"error\" translates to a return value of `true`, while \"ignore\"\n   * translates to a return value of `false`.  May still print a warning:\n   * \"warn\" prints a warning and returns `false`.\n   * This is for the second category of `errorCode`s listed in the README.\n   */\n\n\n  useStrictBehavior(errorCode, errorMsg, token) {\n    let strict = this.strict;\n\n    if (typeof strict === \"function\") {\n      // Allow return value of strict function to be boolean or string\n      // (or null/undefined, meaning no further processing).\n      // But catch any exceptions thrown by function, treating them\n      // like \"error\".\n      try {\n        strict = strict(errorCode, errorMsg, token);\n      } catch (error) {\n        strict = \"error\";\n      }\n    }\n\n    if (!strict || strict === \"ignore\") {\n      return false;\n    } else if (strict === true || strict === \"error\") {\n      return true;\n    } else if (strict === \"warn\") {\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + (errorMsg + \" [\" + errorCode + \"]\"));\n      return false;\n    } else {\n      // won't happen in type-safe code\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + (\"unrecognized '\" + strict + \"': \" + errorMsg + \" [\" + errorCode + \"]\"));\n      return false;\n    }\n  }\n  /**\n   * Check whether to test potentially dangerous input, and return\n   * `true` (trusted) or `false` (untrusted).  The sole argument `context`\n   * should be an object with `command` field specifying the relevant LaTeX\n   * command (as a string starting with `\\`), and any other arguments, etc.\n   * If `context` has a `url` field, a `protocol` field will automatically\n   * get added by this function (changing the specified object).\n   */\n\n\n  isTrusted(context) {\n    if (context.url && !context.protocol) {\n      const protocol = utils.protocolFromUrl(context.url);\n\n      if (protocol == null) {\n        return false;\n      }\n\n      context.protocol = protocol;\n    }\n\n    const trust = typeof this.trust === \"function\" ? this.trust(context) : this.trust;\n    return Boolean(trust);\n  }\n\n}\n;// CONCATENATED MODULE: ./src/Style.js\n/**\n * This file contains information and classes for the various kinds of styles\n * used in TeX. It provides a generic `Style` class, which holds information\n * about a specific style. It then provides instances of all the different kinds\n * of styles possible, and provides functions to move between them and get\n * information about them.\n */\n\n/**\n * The main style class. Contains a unique id for the style, a size (which is\n * the same for cramped and uncramped version of a style), and a cramped flag.\n */\nclass Style {\n  constructor(id, size, cramped) {\n    this.id = void 0;\n    this.size = void 0;\n    this.cramped = void 0;\n    this.id = id;\n    this.size = size;\n    this.cramped = cramped;\n  }\n  /**\n   * Get the style of a superscript given a base in the current style.\n   */\n\n\n  sup() {\n    return styles[sup[this.id]];\n  }\n  /**\n   * Get the style of a subscript given a base in the current style.\n   */\n\n\n  sub() {\n    return styles[sub[this.id]];\n  }\n  /**\n   * Get the style of a fraction numerator given the fraction in the current\n   * style.\n   */\n\n\n  fracNum() {\n    return styles[fracNum[this.id]];\n  }\n  /**\n   * Get the style of a fraction denominator given the fraction in the current\n   * style.\n   */\n\n\n  fracDen() {\n    return styles[fracDen[this.id]];\n  }\n  /**\n   * Get the cramped version of a style (in particular, cramping a cramped style\n   * doesn't change the style).\n   */\n\n\n  cramp() {\n    return styles[cramp[this.id]];\n  }\n  /**\n   * Get a text or display version of this style.\n   */\n\n\n  text() {\n    return styles[Style_text[this.id]];\n  }\n  /**\n   * Return true if this style is tightly spaced (scriptstyle/scriptscriptstyle)\n   */\n\n\n  isTight() {\n    return this.size >= 2;\n  }\n\n} // Export an interface for type checking, but don't expose the implementation.\n// This way, no more styles can be generated.\n\n\n// IDs of the different styles\nconst D = 0;\nconst Dc = 1;\nconst T = 2;\nconst Tc = 3;\nconst S = 4;\nconst Sc = 5;\nconst SS = 6;\nconst SSc = 7; // Instances of the different styles\n\nconst styles = [new Style(D, 0, false), new Style(Dc, 0, true), new Style(T, 1, false), new Style(Tc, 1, true), new Style(S, 2, false), new Style(Sc, 2, true), new Style(SS, 3, false), new Style(SSc, 3, true)]; // Lookup tables for switching from one style to another\n\nconst sup = [S, Sc, S, Sc, SS, SSc, SS, SSc];\nconst sub = [Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc];\nconst fracNum = [T, Tc, S, Sc, SS, SSc, SS, SSc];\nconst fracDen = [Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc];\nconst cramp = [Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc];\nconst Style_text = [D, Dc, T, Tc, T, Tc, T, Tc]; // We only export some of the styles.\n\n/* harmony default export */ var src_Style = ({\n  DISPLAY: styles[D],\n  TEXT: styles[T],\n  SCRIPT: styles[S],\n  SCRIPTSCRIPT: styles[SS]\n});\n;// CONCATENATED MODULE: ./src/unicodeScripts.js\n/*\n * This file defines the Unicode scripts and script families that we\n * support. To add new scripts or families, just add a new entry to the\n * scriptData array below. Adding scripts to the scriptData array allows\n * characters from that script to appear in \\text{} environments.\n */\n\n/**\n * Each script or script family has a name and an array of blocks.\n * Each block is an array of two numbers which specify the start and\n * end points (inclusive) of a block of Unicode codepoints.\n */\n\n/**\n * Unicode block data for the families of scripts we support in \\text{}.\n * Scripts only need to appear here if they do not have font metrics.\n */\nconst scriptData = [{\n  // Latin characters beyond the Latin-1 characters we have metrics for.\n  // Needed for Czech, Hungarian and Turkish text, for example.\n  name: 'latin',\n  blocks: [[0x0100, 0x024f], // Latin Extended-A and Latin Extended-B\n  [0x0300, 0x036f] // Combining Diacritical marks\n  ]\n}, {\n  // The Cyrillic script used by Russian and related languages.\n  // A Cyrillic subset used to be supported as explicitly defined\n  // symbols in symbols.js\n  name: 'cyrillic',\n  blocks: [[0x0400, 0x04ff]]\n}, {\n  // Armenian\n  name: 'armenian',\n  blocks: [[0x0530, 0x058F]]\n}, {\n  // The Brahmic scripts of South and Southeast Asia\n  // Devanagari (0900–097F)\n  // Bengali (0980–09FF)\n  // Gurmukhi (0A00–0A7F)\n  // Gujarati (0A80–0AFF)\n  // Oriya (0B00–0B7F)\n  // Tamil (0B80–0BFF)\n  // Telugu (0C00–0C7F)\n  // Kannada (0C80–0CFF)\n  // Malayalam (0D00–0D7F)\n  // Sinhala (0D80–0DFF)\n  // Thai (0E00–0E7F)\n  // Lao (0E80–0EFF)\n  // Tibetan (0F00–0FFF)\n  // Myanmar (1000–109F)\n  name: 'brahmic',\n  blocks: [[0x0900, 0x109F]]\n}, {\n  name: 'georgian',\n  blocks: [[0x10A0, 0x10ff]]\n}, {\n  // Chinese and Japanese.\n  // The \"k\" in cjk is for Korean, but we've separated Korean out\n  name: \"cjk\",\n  blocks: [[0x3000, 0x30FF], // CJK symbols and punctuation, Hiragana, Katakana\n  [0x4E00, 0x9FAF], // CJK ideograms\n  [0xFF00, 0xFF60] // Fullwidth punctuation\n  // TODO: add halfwidth Katakana and Romanji glyphs\n  ]\n}, {\n  // Korean\n  name: 'hangul',\n  blocks: [[0xAC00, 0xD7AF]]\n}];\n/**\n * Given a codepoint, return the name of the script or script family\n * it is from, or null if it is not part of a known block\n */\n\nfunction scriptFromCodepoint(codepoint) {\n  for (let i = 0; i < scriptData.length; i++) {\n    const script = scriptData[i];\n\n    for (let i = 0; i < script.blocks.length; i++) {\n      const block = script.blocks[i];\n\n      if (codepoint >= block[0] && codepoint <= block[1]) {\n        return script.name;\n      }\n    }\n  }\n\n  return null;\n}\n/**\n * A flattened version of all the supported blocks in a single array.\n * This is an optimization to make supportedCodepoint() fast.\n */\n\nconst allBlocks = [];\nscriptData.forEach(s => s.blocks.forEach(b => allBlocks.push(...b)));\n/**\n * Given a codepoint, return true if it falls within one of the\n * scripts or script families defined above and false otherwise.\n *\n * Micro benchmarks shows that this is faster than\n * /[\\u3000-\\u30FF\\u4E00-\\u9FAF\\uFF00-\\uFF60\\uAC00-\\uD7AF\\u0900-\\u109F]/.test()\n * in Firefox, Chrome and Node.\n */\n\nfunction supportedCodepoint(codepoint) {\n  for (let i = 0; i < allBlocks.length; i += 2) {\n    if (codepoint >= allBlocks[i] && codepoint <= allBlocks[i + 1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n;// CONCATENATED MODULE: ./src/svgGeometry.js\n/**\n * This file provides support to domTree.js and delimiter.js.\n * It's a storehouse of path geometry for SVG images.\n */\n// In all paths below, the viewBox-to-em scale is 1000:1.\nconst hLinePad = 80; // padding above a sqrt vinculum. Prevents image cropping.\n// The vinculum of a \\sqrt can be made thicker by a KaTeX rendering option.\n// Think of variable extraVinculum as two detours in the SVG path.\n// The detour begins at the lower left of the area labeled extraVinculum below.\n// The detour proceeds one extraVinculum distance up and slightly to the right,\n// displacing the radiused corner between surd and vinculum. The radius is\n// traversed as usual, then the detour resumes. It goes right, to the end of\n// the very long vinculum, then down one extraVinculum distance,\n// after which it resumes regular path geometry for the radical.\n\n/*                                                  vinculum\n                                                   /\n         /▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒←extraVinculum\n        / █████████████████████←0.04em (40 unit) std vinculum thickness\n       / /\n      / /\n     / /\\\n    / / surd\n*/\n\nconst sqrtMain = function (extraVinculum, hLinePad) {\n  // sqrtMain path geometry is from glyph U221A in the font KaTeX Main\n  return \"M95,\" + (622 + extraVinculum + hLinePad) + \"\\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\\nc69,-144,104.5,-217.7,106.5,-221\\nl\" + extraVinculum / 2.075 + \" -\" + extraVinculum + \"\\nc5.3,-9.3,12,-14,20,-14\\nH400000v\" + (40 + extraVinculum) + \"H845.2724\\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\\nM\" + (834 + extraVinculum) + \" \" + hLinePad + \"h400000v\" + (40 + extraVinculum) + \"h-400000z\";\n};\n\nconst sqrtSize1 = function (extraVinculum, hLinePad) {\n  // size1 is from glyph U221A in the font KaTeX_Size1-Regular\n  return \"M263,\" + (601 + extraVinculum + hLinePad) + \"c0.7,0,18,39.7,52,119\\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\\nc340,-704.7,510.7,-1060.3,512,-1067\\nl\" + extraVinculum / 2.084 + \" -\" + extraVinculum + \"\\nc4.7,-7.3,11,-11,19,-11\\nH40000v\" + (40 + extraVinculum) + \"H1012.3\\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\\nM\" + (1001 + extraVinculum) + \" \" + hLinePad + \"h400000v\" + (40 + extraVinculum) + \"h-400000z\";\n};\n\nconst sqrtSize2 = function (extraVinculum, hLinePad) {\n  // size2 is from glyph U221A in the font KaTeX_Size2-Regular\n  return \"M983 \" + (10 + extraVinculum + hLinePad) + \"\\nl\" + extraVinculum / 3.13 + \" -\" + extraVinculum + \"\\nc4,-6.7,10,-10,18,-10 H400000v\" + (40 + extraVinculum) + \"\\nH1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7\\ns-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744\\nc-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30\\nc26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722\\nc56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5\\nc53.7,-170.3,84.5,-266.8,92.5,-289.5z\\nM\" + (1001 + extraVinculum) + \" \" + hLinePad + \"h400000v\" + (40 + extraVinculum) + \"h-400000z\";\n};\n\nconst sqrtSize3 = function (extraVinculum, hLinePad) {\n  // size3 is from glyph U221A in the font KaTeX_Size3-Regular\n  return \"M424,\" + (2398 + extraVinculum + hLinePad) + \"\\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\\nl\" + extraVinculum / 4.223 + \" -\" + extraVinculum + \"c4,-6.7,10,-10,18,-10 H400000\\nv\" + (40 + extraVinculum) + \"H1014.6\\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\\nc-2,6,-10,9,-24,9\\nc-8,0,-12,-0.7,-12,-2z M\" + (1001 + extraVinculum) + \" \" + hLinePad + \"\\nh400000v\" + (40 + extraVinculum) + \"h-400000z\";\n};\n\nconst sqrtSize4 = function (extraVinculum, hLinePad) {\n  // size4 is from glyph U221A in the font KaTeX_Size4-Regular\n  return \"M473,\" + (2713 + extraVinculum + hLinePad) + \"\\nc339.3,-1799.3,509.3,-2700,510,-2702 l\" + extraVinculum / 5.298 + \" -\" + extraVinculum + \"\\nc3.3,-7.3,9.3,-11,18,-11 H400000v\" + (40 + extraVinculum) + \"H1017.7\\ns-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9\\nc-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200\\nc0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26\\ns76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,\\n606zM\" + (1001 + extraVinculum) + \" \" + hLinePad + \"h400000v\" + (40 + extraVinculum) + \"H1017.7z\";\n};\n\nconst phasePath = function (y) {\n  const x = y / 2; // x coordinate at top of angle\n\n  return \"M400000 \" + y + \" H0 L\" + x + \" 0 l65 45 L145 \" + (y - 80) + \" H400000z\";\n};\n\nconst sqrtTall = function (extraVinculum, hLinePad, viewBoxHeight) {\n  // sqrtTall is from glyph U23B7 in the font KaTeX_Size4-Regular\n  // One path edge has a variable length. It runs vertically from the vinculum\n  // to a point near (14 units) the bottom of the surd. The vinculum\n  // is normally 40 units thick. So the length of the line in question is:\n  const vertSegment = viewBoxHeight - 54 - hLinePad - extraVinculum;\n  return \"M702 \" + (extraVinculum + hLinePad) + \"H400000\" + (40 + extraVinculum) + \"\\nH742v\" + vertSegment + \"l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\\n219 661 l218 661zM702 \" + hLinePad + \"H400000v\" + (40 + extraVinculum) + \"H742z\";\n};\n\nconst sqrtPath = function (size, extraVinculum, viewBoxHeight) {\n  extraVinculum = 1000 * extraVinculum; // Convert from document ems to viewBox.\n\n  let path = \"\";\n\n  switch (size) {\n    case \"sqrtMain\":\n      path = sqrtMain(extraVinculum, hLinePad);\n      break;\n\n    case \"sqrtSize1\":\n      path = sqrtSize1(extraVinculum, hLinePad);\n      break;\n\n    case \"sqrtSize2\":\n      path = sqrtSize2(extraVinculum, hLinePad);\n      break;\n\n    case \"sqrtSize3\":\n      path = sqrtSize3(extraVinculum, hLinePad);\n      break;\n\n    case \"sqrtSize4\":\n      path = sqrtSize4(extraVinculum, hLinePad);\n      break;\n\n    case \"sqrtTall\":\n      path = sqrtTall(extraVinculum, hLinePad, viewBoxHeight);\n  }\n\n  return path;\n};\nconst innerPath = function (name, height) {\n  // The inner part of stretchy tall delimiters\n  switch (name) {\n    case \"\\u239c\":\n      return \"M291 0 H417 V\" + height + \" H291z M291 0 H417 V\" + height + \" H291z\";\n\n    case \"\\u2223\":\n      return \"M145 0 H188 V\" + height + \" H145z M145 0 H188 V\" + height + \" H145z\";\n\n    case \"\\u2225\":\n      return \"M145 0 H188 V\" + height + \" H145z M145 0 H188 V\" + height + \" H145z\" + (\"M367 0 H410 V\" + height + \" H367z M367 0 H410 V\" + height + \" H367z\");\n\n    case \"\\u239f\":\n      return \"M457 0 H583 V\" + height + \" H457z M457 0 H583 V\" + height + \" H457z\";\n\n    case \"\\u23a2\":\n      return \"M319 0 H403 V\" + height + \" H319z M319 0 H403 V\" + height + \" H319z\";\n\n    case \"\\u23a5\":\n      return \"M263 0 H347 V\" + height + \" H263z M263 0 H347 V\" + height + \" H263z\";\n\n    case \"\\u23aa\":\n      return \"M384 0 H504 V\" + height + \" H384z M384 0 H504 V\" + height + \" H384z\";\n\n    case \"\\u23d0\":\n      return \"M312 0 H355 V\" + height + \" H312z M312 0 H355 V\" + height + \" H312z\";\n\n    case \"\\u2016\":\n      return \"M257 0 H300 V\" + height + \" H257z M257 0 H300 V\" + height + \" H257z\" + (\"M478 0 H521 V\" + height + \" H478z M478 0 H521 V\" + height + \" H478z\");\n\n    default:\n      return \"\";\n  }\n};\nconst path = {\n  // The doubleleftarrow geometry is from glyph U+21D0 in the font KaTeX Main\n  doubleleftarrow: \"M262 157\\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\\nm8 0v40h399730v-40zm0 194v40h399730v-40z\",\n  // doublerightarrow is from glyph U+21D2 in font KaTeX Main\n  doublerightarrow: \"M399738 392l\\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z\",\n  // leftarrow is from glyph U+2190 in font KaTeX Main\n  leftarrow: \"M400000 241H110l3-3c68.7-52.7 113.7-120\\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\\n l-3-3h399890zM100 241v40h399900v-40z\",\n  // overbrace is from glyphs U+23A9/23A8/23A7 in font KaTeX_Size4-Regular\n  leftbrace: \"M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z\",\n  leftbraceunder: \"M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z\",\n  // overgroup is from the MnSymbol package (public domain)\n  leftgroup: \"M400000 80\\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\\n 435 0h399565z\",\n  leftgroupunder: \"M400000 262\\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\\n 435 219h399565z\",\n  // Harpoons are from glyph U+21BD in font KaTeX Main\n  leftharpoon: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z\",\n  leftharpoonplus: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\\nm0 0v40h400000v-40z\",\n  leftharpoondown: \"M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z\",\n  leftharpoondownplus: \"M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z\",\n  // hook is from glyph U+21A9 in font KaTeX Main\n  lefthook: \"M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\\n 71.5 23h399859zM103 281v-40h399897v40z\",\n  leftlinesegment: \"M40 281 V428 H0 V94 H40 V241 H400000 v40z\\nM40 281 V428 H0 V94 H40 V241 H400000 v40z\",\n  leftmapsto: \"M40 281 V448H0V74H40V241H400000v40z\\nM40 281 V448H0V74H40V241H400000v40z\",\n  // tofrom is from glyph U+21C4 in font KaTeX AMS Regular\n  leftToFrom: \"M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z\",\n  longequal: \"M0 50 h400000 v40H0z m0 194h40000v40H0z\\nM0 50 h400000 v40H0z m0 194h40000v40H0z\",\n  midbrace: \"M200428 334\\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z\",\n  midbraceunder: \"M199572 214\\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z\",\n  oiintSize1: \"M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z\",\n  oiintSize2: \"M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\\nc0 110 84 276 504 276s502.4-166 502.4-276z\",\n  oiiintSize1: \"M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z\",\n  oiiintSize2: \"M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z\",\n  rightarrow: \"M0 241v40h399891c-47.3 35.3-84 78-110 128\\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n 151.7 139 205zm0 0v40h399900v-40z\",\n  rightbrace: \"M400000 542l\\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z\",\n  rightbraceunder: \"M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z\",\n  rightgroup: \"M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\\n 3-1 3-3v-38c-76-158-257-219-435-219H0z\",\n  rightgroupunder: \"M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z\",\n  rightharpoon: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\\n 69.2 92 94.5zm0 0v40h399900v-40z\",\n  rightharpoonplus: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z\",\n  rightharpoondown: \"M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z\",\n  rightharpoondownplus: \"M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\\nm0-194v40h400000v-40zm0 0v40h400000v-40z\",\n  righthook: \"M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z\",\n  rightlinesegment: \"M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z\",\n  rightToFrom: \"M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z\",\n  // twoheadleftarrow is from glyph U+219E in font KaTeX AMS Regular\n  twoheadleftarrow: \"M0 167c68 40\\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z\",\n  twoheadrightarrow: \"M400000 167\\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z\",\n  // tilde1 is a modified version of a glyph from the MnSymbol package\n  tilde1: \"M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\\n-68.267.847-113-73.952-191-73.952z\",\n  // ditto tilde2, tilde3, & tilde4\n  tilde2: \"M344 55.266c-142 0-300.638 81.316-311.5 86.418\\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z\",\n  tilde3: \"M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\\n -338 0-409-156.573-744-156.573z\",\n  tilde4: \"M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\\n -175.236-744-175.236z\",\n  // vec is from glyph U+20D7 in font KaTeX Main\n  vec: \"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\\nc-16-25.333-24-45-24-59z\",\n  // widehat1 is a modified version of a glyph from the MnSymbol package\n  widehat1: \"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\",\n  // ditto widehat2, widehat3, & widehat4\n  widehat2: \"M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  widehat3: \"M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  widehat4: \"M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  // widecheck paths are all inverted versions of widehat\n  widecheck1: \"M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z\",\n  widecheck2: \"M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  widecheck3: \"M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  widecheck4: \"M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  // The next ten paths support reaction arrows from the mhchem package.\n  // Arrows for \\ce{<-->} are offset from xAxis by 0.22ex, per mhchem in LaTeX\n  // baraboveleftarrow is mostly from glyph U+2190 in font KaTeX Main\n  baraboveleftarrow: \"M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z\",\n  // rightarrowabovebar is mostly from glyph U+2192, KaTeX Main\n  rightarrowabovebar: \"M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z\",\n  // The short left harpoon has 0.5em (i.e. 500 units) kern on the left end.\n  // Ref from mhchem.sty: \\rlap{\\raisebox{-.22ex}{$\\kern0.5em\n  baraboveshortleftharpoon: \"M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z\",\n  rightharpoonaboveshortbar: \"M0,241 l0,40c399126,0,399993,0,399993,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z\",\n  shortbaraboveleftharpoon: \"M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z\",\n  shortrightharpoonabovebar: \"M53,241l0,40c398570,0,399437,0,399437,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z\"\n};\nconst tallDelim = function (label, midHeight) {\n  switch (label) {\n    case \"lbrack\":\n      return \"M403 1759 V84 H666 V0 H319 V1759 v\" + midHeight + \" v1759 h347 v-84\\nH403z M403 1759 V0 H319 V1759 v\" + midHeight + \" v1759 h84z\";\n\n    case \"rbrack\":\n      return \"M347 1759 V0 H0 V84 H263 V1759 v\" + midHeight + \" v1759 H0 v84 H347z\\nM347 1759 V0 H263 V1759 v\" + midHeight + \" v1759 h84z\";\n\n    case \"vert\":\n      return \"M145 15 v585 v\" + midHeight + \" v585 c2.667,10,9.667,15,21,15\\nc10,0,16.667,-5,20,-15 v-585 v\" + -midHeight + \" v-585 c-2.667,-10,-9.667,-15,-21,-15\\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v\" + midHeight + \" v585 h43z\";\n\n    case \"doublevert\":\n      return \"M145 15 v585 v\" + midHeight + \" v585 c2.667,10,9.667,15,21,15\\nc10,0,16.667,-5,20,-15 v-585 v\" + -midHeight + \" v-585 c-2.667,-10,-9.667,-15,-21,-15\\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v\" + midHeight + \" v585 h43z\\nM367 15 v585 v\" + midHeight + \" v585 c2.667,10,9.667,15,21,15\\nc10,0,16.667,-5,20,-15 v-585 v\" + -midHeight + \" v-585 c-2.667,-10,-9.667,-15,-21,-15\\nc-10,0,-16.667,5,-20,15z M410 15 H367 v585 v\" + midHeight + \" v585 h43z\";\n\n    case \"lfloor\":\n      return \"M319 602 V0 H403 V602 v\" + midHeight + \" v1715 h263 v84 H319z\\nMM319 602 V0 H403 V602 v\" + midHeight + \" v1715 H319z\";\n\n    case \"rfloor\":\n      return \"M319 602 V0 H403 V602 v\" + midHeight + \" v1799 H0 v-84 H319z\\nMM319 602 V0 H403 V602 v\" + midHeight + \" v1715 H319z\";\n\n    case \"lceil\":\n      return \"M403 1759 V84 H666 V0 H319 V1759 v\" + midHeight + \" v602 h84z\\nM403 1759 V0 H319 V1759 v\" + midHeight + \" v602 h84z\";\n\n    case \"rceil\":\n      return \"M347 1759 V0 H0 V84 H263 V1759 v\" + midHeight + \" v602 h84z\\nM347 1759 V0 h-84 V1759 v\" + midHeight + \" v602 h84z\";\n\n    case \"lparen\":\n      return \"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\\n-36,557 l0,\" + (midHeight + 84) + \"c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\\nl0,-\" + (midHeight + 92) + \"c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\";\n\n    case \"rparen\":\n      return \"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,\" + (midHeight + 9) + \"\\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\\nl0,-\" + (midHeight + 144) + \"c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\";\n\n    default:\n      // We should not ever get here.\n      throw new Error(\"Unknown stretchy delimiter.\");\n  }\n};\n;// CONCATENATED MODULE: ./src/tree.js\n\n\n/**\n * This node represents a document fragment, which contains elements, but when\n * placed into the DOM doesn't have any representation itself. It only contains\n * children and doesn't have any DOM node properties.\n */\nclass DocumentFragment {\n  // HtmlDomNode\n  // Never used; needed for satisfying interface.\n  constructor(children) {\n    this.children = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    this.children = children;\n    this.classes = [];\n    this.height = 0;\n    this.depth = 0;\n    this.maxFontSize = 0;\n    this.style = {};\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n  /** Convert the fragment into a node. */\n\n\n  toNode() {\n    const frag = document.createDocumentFragment();\n\n    for (let i = 0; i < this.children.length; i++) {\n      frag.appendChild(this.children[i].toNode());\n    }\n\n    return frag;\n  }\n  /** Convert the fragment into HTML markup. */\n\n\n  toMarkup() {\n    let markup = \"\"; // Simply concatenate the markup for the children together.\n\n    for (let i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    return markup;\n  }\n  /**\n   * Converts the math node into a string, similar to innerText. Applies to\n   * MathDomNode's only.\n   */\n\n\n  toText() {\n    // To avoid this, we would subclass documentFragment separately for\n    // MathML, but polyfills for subclassing is expensive per PR 1469.\n    // $FlowFixMe: Only works for ChildType = MathDomNode.\n    const toText = child => child.toText();\n\n    return this.children.map(toText).join(\"\");\n  }\n\n}\n;// CONCATENATED MODULE: ./src/fontMetricsData.js\n// This file is GENERATED by buildMetrics.sh. DO NOT MODIFY.\n/* harmony default export */ var fontMetricsData = ({\n  \"AMS-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"65\": [0, 0.68889, 0, 0, 0.72222],\n    \"66\": [0, 0.68889, 0, 0, 0.66667],\n    \"67\": [0, 0.68889, 0, 0, 0.72222],\n    \"68\": [0, 0.68889, 0, 0, 0.72222],\n    \"69\": [0, 0.68889, 0, 0, 0.66667],\n    \"70\": [0, 0.68889, 0, 0, 0.61111],\n    \"71\": [0, 0.68889, 0, 0, 0.77778],\n    \"72\": [0, 0.68889, 0, 0, 0.77778],\n    \"73\": [0, 0.68889, 0, 0, 0.38889],\n    \"74\": [0.16667, 0.68889, 0, 0, 0.5],\n    \"75\": [0, 0.68889, 0, 0, 0.77778],\n    \"76\": [0, 0.68889, 0, 0, 0.66667],\n    \"77\": [0, 0.68889, 0, 0, 0.94445],\n    \"78\": [0, 0.68889, 0, 0, 0.72222],\n    \"79\": [0.16667, 0.68889, 0, 0, 0.77778],\n    \"80\": [0, 0.68889, 0, 0, 0.61111],\n    \"81\": [0.16667, 0.68889, 0, 0, 0.77778],\n    \"82\": [0, 0.68889, 0, 0, 0.72222],\n    \"83\": [0, 0.68889, 0, 0, 0.55556],\n    \"84\": [0, 0.68889, 0, 0, 0.66667],\n    \"85\": [0, 0.68889, 0, 0, 0.72222],\n    \"86\": [0, 0.68889, 0, 0, 0.72222],\n    \"87\": [0, 0.68889, 0, 0, 1.0],\n    \"88\": [0, 0.68889, 0, 0, 0.72222],\n    \"89\": [0, 0.68889, 0, 0, 0.72222],\n    \"90\": [0, 0.68889, 0, 0, 0.66667],\n    \"107\": [0, 0.68889, 0, 0, 0.55556],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"165\": [0, 0.675, 0.025, 0, 0.75],\n    \"174\": [0.15559, 0.69224, 0, 0, 0.94666],\n    \"240\": [0, 0.68889, 0, 0, 0.55556],\n    \"295\": [0, 0.68889, 0, 0, 0.54028],\n    \"710\": [0, 0.825, 0, 0, 2.33334],\n    \"732\": [0, 0.9, 0, 0, 2.33334],\n    \"770\": [0, 0.825, 0, 0, 2.33334],\n    \"771\": [0, 0.9, 0, 0, 2.33334],\n    \"989\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"1008\": [0, 0.43056, 0.04028, 0, 0.66667],\n    \"8245\": [0, 0.54986, 0, 0, 0.275],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028],\n    \"8487\": [0, 0.68889, 0, 0, 0.72222],\n    \"8498\": [0, 0.68889, 0, 0, 0.55556],\n    \"8502\": [0, 0.68889, 0, 0, 0.66667],\n    \"8503\": [0, 0.68889, 0, 0, 0.44445],\n    \"8504\": [0, 0.68889, 0, 0, 0.66667],\n    \"8513\": [0, 0.68889, 0, 0, 0.63889],\n    \"8592\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8594\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8602\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8603\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8606\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8608\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8610\": [0.01354, 0.52239, 0, 0, 1.11111],\n    \"8611\": [0.01354, 0.52239, 0, 0, 1.11111],\n    \"8619\": [0, 0.54986, 0, 0, 1.0],\n    \"8620\": [0, 0.54986, 0, 0, 1.0],\n    \"8621\": [-0.13313, 0.37788, 0, 0, 1.38889],\n    \"8622\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8624\": [0, 0.69224, 0, 0, 0.5],\n    \"8625\": [0, 0.69224, 0, 0, 0.5],\n    \"8630\": [0, 0.43056, 0, 0, 1.0],\n    \"8631\": [0, 0.43056, 0, 0, 1.0],\n    \"8634\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8635\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8638\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8639\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8642\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8643\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8644\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8646\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8647\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8648\": [0.19444, 0.69224, 0, 0, 0.83334],\n    \"8649\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8650\": [0.19444, 0.69224, 0, 0, 0.83334],\n    \"8651\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8652\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8653\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8654\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8655\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8666\": [0.13667, 0.63667, 0, 0, 1.0],\n    \"8667\": [0.13667, 0.63667, 0, 0, 1.0],\n    \"8669\": [-0.13313, 0.37788, 0, 0, 1.0],\n    \"8672\": [-0.064, 0.437, 0, 0, 1.334],\n    \"8674\": [-0.064, 0.437, 0, 0, 1.334],\n    \"8705\": [0, 0.825, 0, 0, 0.5],\n    \"8708\": [0, 0.68889, 0, 0, 0.55556],\n    \"8709\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8717\": [0, 0.43056, 0, 0, 0.42917],\n    \"8722\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8724\": [0.08198, 0.69224, 0, 0, 0.77778],\n    \"8726\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8733\": [0, 0.69224, 0, 0, 0.77778],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8737\": [0, 0.69224, 0, 0, 0.72222],\n    \"8738\": [0.03517, 0.52239, 0, 0, 0.72222],\n    \"8739\": [0.08167, 0.58167, 0, 0, 0.22222],\n    \"8740\": [0.25142, 0.74111, 0, 0, 0.27778],\n    \"8741\": [0.08167, 0.58167, 0, 0, 0.38889],\n    \"8742\": [0.25142, 0.74111, 0, 0, 0.5],\n    \"8756\": [0, 0.69224, 0, 0, 0.66667],\n    \"8757\": [0, 0.69224, 0, 0, 0.66667],\n    \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8765\": [-0.13313, 0.37788, 0, 0, 0.77778],\n    \"8769\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8770\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8774\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n    \"8778\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8782\": [0.06062, 0.54986, 0, 0, 0.77778],\n    \"8783\": [0.06062, 0.54986, 0, 0, 0.77778],\n    \"8785\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8786\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8787\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8790\": [0, 0.69224, 0, 0, 0.77778],\n    \"8791\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8796\": [0.08198, 0.91667, 0, 0, 0.77778],\n    \"8806\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"8807\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"8808\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"8809\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"8812\": [0.25583, 0.75583, 0, 0, 0.5],\n    \"8814\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8815\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8816\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8817\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8818\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8819\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8822\": [0.1808, 0.675, 0, 0, 0.77778],\n    \"8823\": [0.1808, 0.675, 0, 0, 0.77778],\n    \"8828\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8829\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8830\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8831\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8832\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8833\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8840\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8841\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8842\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8843\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8847\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8848\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8858\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8859\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8861\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8862\": [0, 0.675, 0, 0, 0.77778],\n    \"8863\": [0, 0.675, 0, 0, 0.77778],\n    \"8864\": [0, 0.675, 0, 0, 0.77778],\n    \"8865\": [0, 0.675, 0, 0, 0.77778],\n    \"8872\": [0, 0.69224, 0, 0, 0.61111],\n    \"8873\": [0, 0.69224, 0, 0, 0.72222],\n    \"8874\": [0, 0.69224, 0, 0, 0.88889],\n    \"8876\": [0, 0.68889, 0, 0, 0.61111],\n    \"8877\": [0, 0.68889, 0, 0, 0.61111],\n    \"8878\": [0, 0.68889, 0, 0, 0.72222],\n    \"8879\": [0, 0.68889, 0, 0, 0.72222],\n    \"8882\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8883\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8884\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8885\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8888\": [0, 0.54986, 0, 0, 1.11111],\n    \"8890\": [0.19444, 0.43056, 0, 0, 0.55556],\n    \"8891\": [0.19444, 0.69224, 0, 0, 0.61111],\n    \"8892\": [0.19444, 0.69224, 0, 0, 0.61111],\n    \"8901\": [0, 0.54986, 0, 0, 0.27778],\n    \"8903\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8905\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8906\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8907\": [0, 0.69224, 0, 0, 0.77778],\n    \"8908\": [0, 0.69224, 0, 0, 0.77778],\n    \"8909\": [-0.03598, 0.46402, 0, 0, 0.77778],\n    \"8910\": [0, 0.54986, 0, 0, 0.76042],\n    \"8911\": [0, 0.54986, 0, 0, 0.76042],\n    \"8912\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8913\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8914\": [0, 0.54986, 0, 0, 0.66667],\n    \"8915\": [0, 0.54986, 0, 0, 0.66667],\n    \"8916\": [0, 0.69224, 0, 0, 0.66667],\n    \"8918\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8919\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8920\": [0.03517, 0.54986, 0, 0, 1.33334],\n    \"8921\": [0.03517, 0.54986, 0, 0, 1.33334],\n    \"8922\": [0.38569, 0.88569, 0, 0, 0.77778],\n    \"8923\": [0.38569, 0.88569, 0, 0, 0.77778],\n    \"8926\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8927\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8928\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8929\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8934\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8935\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8936\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8937\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8938\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8939\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8940\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8941\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8994\": [0.19444, 0.69224, 0, 0, 0.77778],\n    \"8995\": [0.19444, 0.69224, 0, 0, 0.77778],\n    \"9416\": [0.15559, 0.69224, 0, 0, 0.90222],\n    \"9484\": [0, 0.69224, 0, 0, 0.5],\n    \"9488\": [0, 0.69224, 0, 0, 0.5],\n    \"9492\": [0, 0.37788, 0, 0, 0.5],\n    \"9496\": [0, 0.37788, 0, 0, 0.5],\n    \"9585\": [0.19444, 0.68889, 0, 0, 0.88889],\n    \"9586\": [0.19444, 0.74111, 0, 0, 0.88889],\n    \"9632\": [0, 0.675, 0, 0, 0.77778],\n    \"9633\": [0, 0.675, 0, 0, 0.77778],\n    \"9650\": [0, 0.54986, 0, 0, 0.72222],\n    \"9651\": [0, 0.54986, 0, 0, 0.72222],\n    \"9654\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"9660\": [0, 0.54986, 0, 0, 0.72222],\n    \"9661\": [0, 0.54986, 0, 0, 0.72222],\n    \"9664\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"9674\": [0.11111, 0.69224, 0, 0, 0.66667],\n    \"9733\": [0.19444, 0.69224, 0, 0, 0.94445],\n    \"10003\": [0, 0.69224, 0, 0, 0.83334],\n    \"10016\": [0, 0.69224, 0, 0, 0.83334],\n    \"10731\": [0.11111, 0.69224, 0, 0, 0.66667],\n    \"10846\": [0.19444, 0.75583, 0, 0, 0.61111],\n    \"10877\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10878\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10885\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10886\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10887\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10888\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10889\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10890\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10891\": [0.48256, 0.98256, 0, 0, 0.77778],\n    \"10892\": [0.48256, 0.98256, 0, 0, 0.77778],\n    \"10901\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10902\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10933\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"10934\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"10935\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10936\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10937\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10938\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10949\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10950\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10955\": [0.28481, 0.79383, 0, 0, 0.77778],\n    \"10956\": [0.28481, 0.79383, 0, 0, 0.77778],\n    \"57350\": [0.08167, 0.58167, 0, 0, 0.22222],\n    \"57351\": [0.08167, 0.58167, 0, 0, 0.38889],\n    \"57352\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"57353\": [0, 0.43056, 0.04028, 0, 0.66667],\n    \"57356\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57357\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57358\": [0.41951, 0.91951, 0, 0, 0.77778],\n    \"57359\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"57360\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"57361\": [0.41951, 0.91951, 0, 0, 0.77778],\n    \"57366\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57367\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57368\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57369\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57370\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"57371\": [0.13597, 0.63597, 0, 0, 0.77778]\n  },\n  \"Caligraphic-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"65\": [0, 0.68333, 0, 0.19445, 0.79847],\n    \"66\": [0, 0.68333, 0.03041, 0.13889, 0.65681],\n    \"67\": [0, 0.68333, 0.05834, 0.13889, 0.52653],\n    \"68\": [0, 0.68333, 0.02778, 0.08334, 0.77139],\n    \"69\": [0, 0.68333, 0.08944, 0.11111, 0.52778],\n    \"70\": [0, 0.68333, 0.09931, 0.11111, 0.71875],\n    \"71\": [0.09722, 0.68333, 0.0593, 0.11111, 0.59487],\n    \"72\": [0, 0.68333, 0.00965, 0.11111, 0.84452],\n    \"73\": [0, 0.68333, 0.07382, 0, 0.54452],\n    \"74\": [0.09722, 0.68333, 0.18472, 0.16667, 0.67778],\n    \"75\": [0, 0.68333, 0.01445, 0.05556, 0.76195],\n    \"76\": [0, 0.68333, 0, 0.13889, 0.68972],\n    \"77\": [0, 0.68333, 0, 0.13889, 1.2009],\n    \"78\": [0, 0.68333, 0.14736, 0.08334, 0.82049],\n    \"79\": [0, 0.68333, 0.02778, 0.11111, 0.79611],\n    \"80\": [0, 0.68333, 0.08222, 0.08334, 0.69556],\n    \"81\": [0.09722, 0.68333, 0, 0.11111, 0.81667],\n    \"82\": [0, 0.68333, 0, 0.08334, 0.8475],\n    \"83\": [0, 0.68333, 0.075, 0.13889, 0.60556],\n    \"84\": [0, 0.68333, 0.25417, 0, 0.54464],\n    \"85\": [0, 0.68333, 0.09931, 0.08334, 0.62583],\n    \"86\": [0, 0.68333, 0.08222, 0, 0.61278],\n    \"87\": [0, 0.68333, 0.08222, 0.08334, 0.98778],\n    \"88\": [0, 0.68333, 0.14643, 0.13889, 0.7133],\n    \"89\": [0.09722, 0.68333, 0.08222, 0.08334, 0.66834],\n    \"90\": [0, 0.68333, 0.07944, 0.13889, 0.72473],\n    \"160\": [0, 0, 0, 0, 0.25]\n  },\n  \"Fraktur-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69141, 0, 0, 0.29574],\n    \"34\": [0, 0.69141, 0, 0, 0.21471],\n    \"38\": [0, 0.69141, 0, 0, 0.73786],\n    \"39\": [0, 0.69141, 0, 0, 0.21201],\n    \"40\": [0.24982, 0.74947, 0, 0, 0.38865],\n    \"41\": [0.24982, 0.74947, 0, 0, 0.38865],\n    \"42\": [0, 0.62119, 0, 0, 0.27764],\n    \"43\": [0.08319, 0.58283, 0, 0, 0.75623],\n    \"44\": [0, 0.10803, 0, 0, 0.27764],\n    \"45\": [0.08319, 0.58283, 0, 0, 0.75623],\n    \"46\": [0, 0.10803, 0, 0, 0.27764],\n    \"47\": [0.24982, 0.74947, 0, 0, 0.50181],\n    \"48\": [0, 0.47534, 0, 0, 0.50181],\n    \"49\": [0, 0.47534, 0, 0, 0.50181],\n    \"50\": [0, 0.47534, 0, 0, 0.50181],\n    \"51\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"52\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"53\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"54\": [0, 0.69141, 0, 0, 0.50181],\n    \"55\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"56\": [0, 0.69141, 0, 0, 0.50181],\n    \"57\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"58\": [0, 0.47534, 0, 0, 0.21606],\n    \"59\": [0.12604, 0.47534, 0, 0, 0.21606],\n    \"61\": [-0.13099, 0.36866, 0, 0, 0.75623],\n    \"63\": [0, 0.69141, 0, 0, 0.36245],\n    \"65\": [0, 0.69141, 0, 0, 0.7176],\n    \"66\": [0, 0.69141, 0, 0, 0.88397],\n    \"67\": [0, 0.69141, 0, 0, 0.61254],\n    \"68\": [0, 0.69141, 0, 0, 0.83158],\n    \"69\": [0, 0.69141, 0, 0, 0.66278],\n    \"70\": [0.12604, 0.69141, 0, 0, 0.61119],\n    \"71\": [0, 0.69141, 0, 0, 0.78539],\n    \"72\": [0.06302, 0.69141, 0, 0, 0.7203],\n    \"73\": [0, 0.69141, 0, 0, 0.55448],\n    \"74\": [0.12604, 0.69141, 0, 0, 0.55231],\n    \"75\": [0, 0.69141, 0, 0, 0.66845],\n    \"76\": [0, 0.69141, 0, 0, 0.66602],\n    \"77\": [0, 0.69141, 0, 0, 1.04953],\n    \"78\": [0, 0.69141, 0, 0, 0.83212],\n    \"79\": [0, 0.69141, 0, 0, 0.82699],\n    \"80\": [0.18906, 0.69141, 0, 0, 0.82753],\n    \"81\": [0.03781, 0.69141, 0, 0, 0.82699],\n    \"82\": [0, 0.69141, 0, 0, 0.82807],\n    \"83\": [0, 0.69141, 0, 0, 0.82861],\n    \"84\": [0, 0.69141, 0, 0, 0.66899],\n    \"85\": [0, 0.69141, 0, 0, 0.64576],\n    \"86\": [0, 0.69141, 0, 0, 0.83131],\n    \"87\": [0, 0.69141, 0, 0, 1.04602],\n    \"88\": [0, 0.69141, 0, 0, 0.71922],\n    \"89\": [0.18906, 0.69141, 0, 0, 0.83293],\n    \"90\": [0.12604, 0.69141, 0, 0, 0.60201],\n    \"91\": [0.24982, 0.74947, 0, 0, 0.27764],\n    \"93\": [0.24982, 0.74947, 0, 0, 0.27764],\n    \"94\": [0, 0.69141, 0, 0, 0.49965],\n    \"97\": [0, 0.47534, 0, 0, 0.50046],\n    \"98\": [0, 0.69141, 0, 0, 0.51315],\n    \"99\": [0, 0.47534, 0, 0, 0.38946],\n    \"100\": [0, 0.62119, 0, 0, 0.49857],\n    \"101\": [0, 0.47534, 0, 0, 0.40053],\n    \"102\": [0.18906, 0.69141, 0, 0, 0.32626],\n    \"103\": [0.18906, 0.47534, 0, 0, 0.5037],\n    \"104\": [0.18906, 0.69141, 0, 0, 0.52126],\n    \"105\": [0, 0.69141, 0, 0, 0.27899],\n    \"106\": [0, 0.69141, 0, 0, 0.28088],\n    \"107\": [0, 0.69141, 0, 0, 0.38946],\n    \"108\": [0, 0.69141, 0, 0, 0.27953],\n    \"109\": [0, 0.47534, 0, 0, 0.76676],\n    \"110\": [0, 0.47534, 0, 0, 0.52666],\n    \"111\": [0, 0.47534, 0, 0, 0.48885],\n    \"112\": [0.18906, 0.52396, 0, 0, 0.50046],\n    \"113\": [0.18906, 0.47534, 0, 0, 0.48912],\n    \"114\": [0, 0.47534, 0, 0, 0.38919],\n    \"115\": [0, 0.47534, 0, 0, 0.44266],\n    \"116\": [0, 0.62119, 0, 0, 0.33301],\n    \"117\": [0, 0.47534, 0, 0, 0.5172],\n    \"118\": [0, 0.52396, 0, 0, 0.5118],\n    \"119\": [0, 0.52396, 0, 0, 0.77351],\n    \"120\": [0.18906, 0.47534, 0, 0, 0.38865],\n    \"121\": [0.18906, 0.47534, 0, 0, 0.49884],\n    \"122\": [0.18906, 0.47534, 0, 0, 0.39054],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"8216\": [0, 0.69141, 0, 0, 0.21471],\n    \"8217\": [0, 0.69141, 0, 0, 0.21471],\n    \"58112\": [0, 0.62119, 0, 0, 0.49749],\n    \"58113\": [0, 0.62119, 0, 0, 0.4983],\n    \"58114\": [0.18906, 0.69141, 0, 0, 0.33328],\n    \"58115\": [0.18906, 0.69141, 0, 0, 0.32923],\n    \"58116\": [0.18906, 0.47534, 0, 0, 0.50343],\n    \"58117\": [0, 0.69141, 0, 0, 0.33301],\n    \"58118\": [0, 0.62119, 0, 0, 0.33409],\n    \"58119\": [0, 0.47534, 0, 0, 0.50073]\n  },\n  \"Main-Bold\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.35],\n    \"34\": [0, 0.69444, 0, 0, 0.60278],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.95833],\n    \"36\": [0.05556, 0.75, 0, 0, 0.575],\n    \"37\": [0.05556, 0.75, 0, 0, 0.95833],\n    \"38\": [0, 0.69444, 0, 0, 0.89444],\n    \"39\": [0, 0.69444, 0, 0, 0.31944],\n    \"40\": [0.25, 0.75, 0, 0, 0.44722],\n    \"41\": [0.25, 0.75, 0, 0, 0.44722],\n    \"42\": [0, 0.75, 0, 0, 0.575],\n    \"43\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"44\": [0.19444, 0.15556, 0, 0, 0.31944],\n    \"45\": [0, 0.44444, 0, 0, 0.38333],\n    \"46\": [0, 0.15556, 0, 0, 0.31944],\n    \"47\": [0.25, 0.75, 0, 0, 0.575],\n    \"48\": [0, 0.64444, 0, 0, 0.575],\n    \"49\": [0, 0.64444, 0, 0, 0.575],\n    \"50\": [0, 0.64444, 0, 0, 0.575],\n    \"51\": [0, 0.64444, 0, 0, 0.575],\n    \"52\": [0, 0.64444, 0, 0, 0.575],\n    \"53\": [0, 0.64444, 0, 0, 0.575],\n    \"54\": [0, 0.64444, 0, 0, 0.575],\n    \"55\": [0, 0.64444, 0, 0, 0.575],\n    \"56\": [0, 0.64444, 0, 0, 0.575],\n    \"57\": [0, 0.64444, 0, 0, 0.575],\n    \"58\": [0, 0.44444, 0, 0, 0.31944],\n    \"59\": [0.19444, 0.44444, 0, 0, 0.31944],\n    \"60\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"61\": [-0.10889, 0.39111, 0, 0, 0.89444],\n    \"62\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"63\": [0, 0.69444, 0, 0, 0.54305],\n    \"64\": [0, 0.69444, 0, 0, 0.89444],\n    \"65\": [0, 0.68611, 0, 0, 0.86944],\n    \"66\": [0, 0.68611, 0, 0, 0.81805],\n    \"67\": [0, 0.68611, 0, 0, 0.83055],\n    \"68\": [0, 0.68611, 0, 0, 0.88194],\n    \"69\": [0, 0.68611, 0, 0, 0.75555],\n    \"70\": [0, 0.68611, 0, 0, 0.72361],\n    \"71\": [0, 0.68611, 0, 0, 0.90416],\n    \"72\": [0, 0.68611, 0, 0, 0.9],\n    \"73\": [0, 0.68611, 0, 0, 0.43611],\n    \"74\": [0, 0.68611, 0, 0, 0.59444],\n    \"75\": [0, 0.68611, 0, 0, 0.90138],\n    \"76\": [0, 0.68611, 0, 0, 0.69166],\n    \"77\": [0, 0.68611, 0, 0, 1.09166],\n    \"78\": [0, 0.68611, 0, 0, 0.9],\n    \"79\": [0, 0.68611, 0, 0, 0.86388],\n    \"80\": [0, 0.68611, 0, 0, 0.78611],\n    \"81\": [0.19444, 0.68611, 0, 0, 0.86388],\n    \"82\": [0, 0.68611, 0, 0, 0.8625],\n    \"83\": [0, 0.68611, 0, 0, 0.63889],\n    \"84\": [0, 0.68611, 0, 0, 0.8],\n    \"85\": [0, 0.68611, 0, 0, 0.88472],\n    \"86\": [0, 0.68611, 0.01597, 0, 0.86944],\n    \"87\": [0, 0.68611, 0.01597, 0, 1.18888],\n    \"88\": [0, 0.68611, 0, 0, 0.86944],\n    \"89\": [0, 0.68611, 0.02875, 0, 0.86944],\n    \"90\": [0, 0.68611, 0, 0, 0.70277],\n    \"91\": [0.25, 0.75, 0, 0, 0.31944],\n    \"92\": [0.25, 0.75, 0, 0, 0.575],\n    \"93\": [0.25, 0.75, 0, 0, 0.31944],\n    \"94\": [0, 0.69444, 0, 0, 0.575],\n    \"95\": [0.31, 0.13444, 0.03194, 0, 0.575],\n    \"97\": [0, 0.44444, 0, 0, 0.55902],\n    \"98\": [0, 0.69444, 0, 0, 0.63889],\n    \"99\": [0, 0.44444, 0, 0, 0.51111],\n    \"100\": [0, 0.69444, 0, 0, 0.63889],\n    \"101\": [0, 0.44444, 0, 0, 0.52708],\n    \"102\": [0, 0.69444, 0.10903, 0, 0.35139],\n    \"103\": [0.19444, 0.44444, 0.01597, 0, 0.575],\n    \"104\": [0, 0.69444, 0, 0, 0.63889],\n    \"105\": [0, 0.69444, 0, 0, 0.31944],\n    \"106\": [0.19444, 0.69444, 0, 0, 0.35139],\n    \"107\": [0, 0.69444, 0, 0, 0.60694],\n    \"108\": [0, 0.69444, 0, 0, 0.31944],\n    \"109\": [0, 0.44444, 0, 0, 0.95833],\n    \"110\": [0, 0.44444, 0, 0, 0.63889],\n    \"111\": [0, 0.44444, 0, 0, 0.575],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.63889],\n    \"113\": [0.19444, 0.44444, 0, 0, 0.60694],\n    \"114\": [0, 0.44444, 0, 0, 0.47361],\n    \"115\": [0, 0.44444, 0, 0, 0.45361],\n    \"116\": [0, 0.63492, 0, 0, 0.44722],\n    \"117\": [0, 0.44444, 0, 0, 0.63889],\n    \"118\": [0, 0.44444, 0.01597, 0, 0.60694],\n    \"119\": [0, 0.44444, 0.01597, 0, 0.83055],\n    \"120\": [0, 0.44444, 0, 0, 0.60694],\n    \"121\": [0.19444, 0.44444, 0.01597, 0, 0.60694],\n    \"122\": [0, 0.44444, 0, 0, 0.51111],\n    \"123\": [0.25, 0.75, 0, 0, 0.575],\n    \"124\": [0.25, 0.75, 0, 0, 0.31944],\n    \"125\": [0.25, 0.75, 0, 0, 0.575],\n    \"126\": [0.35, 0.34444, 0, 0, 0.575],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"163\": [0, 0.69444, 0, 0, 0.86853],\n    \"168\": [0, 0.69444, 0, 0, 0.575],\n    \"172\": [0, 0.44444, 0, 0, 0.76666],\n    \"176\": [0, 0.69444, 0, 0, 0.86944],\n    \"177\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"184\": [0.17014, 0, 0, 0, 0.51111],\n    \"198\": [0, 0.68611, 0, 0, 1.04166],\n    \"215\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"216\": [0.04861, 0.73472, 0, 0, 0.89444],\n    \"223\": [0, 0.69444, 0, 0, 0.59722],\n    \"230\": [0, 0.44444, 0, 0, 0.83055],\n    \"247\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"248\": [0.09722, 0.54167, 0, 0, 0.575],\n    \"305\": [0, 0.44444, 0, 0, 0.31944],\n    \"338\": [0, 0.68611, 0, 0, 1.16944],\n    \"339\": [0, 0.44444, 0, 0, 0.89444],\n    \"567\": [0.19444, 0.44444, 0, 0, 0.35139],\n    \"710\": [0, 0.69444, 0, 0, 0.575],\n    \"711\": [0, 0.63194, 0, 0, 0.575],\n    \"713\": [0, 0.59611, 0, 0, 0.575],\n    \"714\": [0, 0.69444, 0, 0, 0.575],\n    \"715\": [0, 0.69444, 0, 0, 0.575],\n    \"728\": [0, 0.69444, 0, 0, 0.575],\n    \"729\": [0, 0.69444, 0, 0, 0.31944],\n    \"730\": [0, 0.69444, 0, 0, 0.86944],\n    \"732\": [0, 0.69444, 0, 0, 0.575],\n    \"733\": [0, 0.69444, 0, 0, 0.575],\n    \"915\": [0, 0.68611, 0, 0, 0.69166],\n    \"916\": [0, 0.68611, 0, 0, 0.95833],\n    \"920\": [0, 0.68611, 0, 0, 0.89444],\n    \"923\": [0, 0.68611, 0, 0, 0.80555],\n    \"926\": [0, 0.68611, 0, 0, 0.76666],\n    \"928\": [0, 0.68611, 0, 0, 0.9],\n    \"931\": [0, 0.68611, 0, 0, 0.83055],\n    \"933\": [0, 0.68611, 0, 0, 0.89444],\n    \"934\": [0, 0.68611, 0, 0, 0.83055],\n    \"936\": [0, 0.68611, 0, 0, 0.89444],\n    \"937\": [0, 0.68611, 0, 0, 0.83055],\n    \"8211\": [0, 0.44444, 0.03194, 0, 0.575],\n    \"8212\": [0, 0.44444, 0.03194, 0, 1.14999],\n    \"8216\": [0, 0.69444, 0, 0, 0.31944],\n    \"8217\": [0, 0.69444, 0, 0, 0.31944],\n    \"8220\": [0, 0.69444, 0, 0, 0.60278],\n    \"8221\": [0, 0.69444, 0, 0, 0.60278],\n    \"8224\": [0.19444, 0.69444, 0, 0, 0.51111],\n    \"8225\": [0.19444, 0.69444, 0, 0, 0.51111],\n    \"8242\": [0, 0.55556, 0, 0, 0.34444],\n    \"8407\": [0, 0.72444, 0.15486, 0, 0.575],\n    \"8463\": [0, 0.69444, 0, 0, 0.66759],\n    \"8465\": [0, 0.69444, 0, 0, 0.83055],\n    \"8467\": [0, 0.69444, 0, 0, 0.47361],\n    \"8472\": [0.19444, 0.44444, 0, 0, 0.74027],\n    \"8476\": [0, 0.69444, 0, 0, 0.83055],\n    \"8501\": [0, 0.69444, 0, 0, 0.70277],\n    \"8592\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8593\": [0.19444, 0.69444, 0, 0, 0.575],\n    \"8594\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8595\": [0.19444, 0.69444, 0, 0, 0.575],\n    \"8596\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8597\": [0.25, 0.75, 0, 0, 0.575],\n    \"8598\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8599\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8600\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8601\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8636\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8637\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8640\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8641\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8656\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8657\": [0.19444, 0.69444, 0, 0, 0.70277],\n    \"8658\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8659\": [0.19444, 0.69444, 0, 0, 0.70277],\n    \"8660\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8661\": [0.25, 0.75, 0, 0, 0.70277],\n    \"8704\": [0, 0.69444, 0, 0, 0.63889],\n    \"8706\": [0, 0.69444, 0.06389, 0, 0.62847],\n    \"8707\": [0, 0.69444, 0, 0, 0.63889],\n    \"8709\": [0.05556, 0.75, 0, 0, 0.575],\n    \"8711\": [0, 0.68611, 0, 0, 0.95833],\n    \"8712\": [0.08556, 0.58556, 0, 0, 0.76666],\n    \"8715\": [0.08556, 0.58556, 0, 0, 0.76666],\n    \"8722\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8723\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8725\": [0.25, 0.75, 0, 0, 0.575],\n    \"8726\": [0.25, 0.75, 0, 0, 0.575],\n    \"8727\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"8728\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8729\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8730\": [0.18, 0.82, 0, 0, 0.95833],\n    \"8733\": [0, 0.44444, 0, 0, 0.89444],\n    \"8734\": [0, 0.44444, 0, 0, 1.14999],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8739\": [0.25, 0.75, 0, 0, 0.31944],\n    \"8741\": [0.25, 0.75, 0, 0, 0.575],\n    \"8743\": [0, 0.55556, 0, 0, 0.76666],\n    \"8744\": [0, 0.55556, 0, 0, 0.76666],\n    \"8745\": [0, 0.55556, 0, 0, 0.76666],\n    \"8746\": [0, 0.55556, 0, 0, 0.76666],\n    \"8747\": [0.19444, 0.69444, 0.12778, 0, 0.56875],\n    \"8764\": [-0.10889, 0.39111, 0, 0, 0.89444],\n    \"8768\": [0.19444, 0.69444, 0, 0, 0.31944],\n    \"8771\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8773\": [0.027, 0.638, 0, 0, 0.894],\n    \"8776\": [0.02444, 0.52444, 0, 0, 0.89444],\n    \"8781\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8801\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8804\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8805\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8810\": [0.08556, 0.58556, 0, 0, 1.14999],\n    \"8811\": [0.08556, 0.58556, 0, 0, 1.14999],\n    \"8826\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8827\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8834\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8835\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8838\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8839\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8846\": [0, 0.55556, 0, 0, 0.76666],\n    \"8849\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8850\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8851\": [0, 0.55556, 0, 0, 0.76666],\n    \"8852\": [0, 0.55556, 0, 0, 0.76666],\n    \"8853\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8854\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8855\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8856\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8857\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8866\": [0, 0.69444, 0, 0, 0.70277],\n    \"8867\": [0, 0.69444, 0, 0, 0.70277],\n    \"8868\": [0, 0.69444, 0, 0, 0.89444],\n    \"8869\": [0, 0.69444, 0, 0, 0.89444],\n    \"8900\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8901\": [-0.02639, 0.47361, 0, 0, 0.31944],\n    \"8902\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"8968\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8969\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8970\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8971\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8994\": [-0.13889, 0.36111, 0, 0, 1.14999],\n    \"8995\": [-0.13889, 0.36111, 0, 0, 1.14999],\n    \"9651\": [0.19444, 0.69444, 0, 0, 1.02222],\n    \"9657\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"9661\": [0.19444, 0.69444, 0, 0, 1.02222],\n    \"9667\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"9711\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"9824\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9825\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9826\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9827\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9837\": [0, 0.75, 0, 0, 0.44722],\n    \"9838\": [0.19444, 0.69444, 0, 0, 0.44722],\n    \"9839\": [0.19444, 0.69444, 0, 0, 0.44722],\n    \"10216\": [0.25, 0.75, 0, 0, 0.44722],\n    \"10217\": [0.25, 0.75, 0, 0, 0.44722],\n    \"10815\": [0, 0.68611, 0, 0, 0.9],\n    \"10927\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"10928\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"57376\": [0.19444, 0.69444, 0, 0, 0]\n  },\n  \"Main-BoldItalic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0.11417, 0, 0.38611],\n    \"34\": [0, 0.69444, 0.07939, 0, 0.62055],\n    \"35\": [0.19444, 0.69444, 0.06833, 0, 0.94444],\n    \"37\": [0.05556, 0.75, 0.12861, 0, 0.94444],\n    \"38\": [0, 0.69444, 0.08528, 0, 0.88555],\n    \"39\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"40\": [0.25, 0.75, 0.15806, 0, 0.47333],\n    \"41\": [0.25, 0.75, 0.03306, 0, 0.47333],\n    \"42\": [0, 0.75, 0.14333, 0, 0.59111],\n    \"43\": [0.10333, 0.60333, 0.03306, 0, 0.88555],\n    \"44\": [0.19444, 0.14722, 0, 0, 0.35555],\n    \"45\": [0, 0.44444, 0.02611, 0, 0.41444],\n    \"46\": [0, 0.14722, 0, 0, 0.35555],\n    \"47\": [0.25, 0.75, 0.15806, 0, 0.59111],\n    \"48\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"49\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"50\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"51\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"52\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n    \"53\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"54\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"55\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n    \"56\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"57\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"58\": [0, 0.44444, 0.06695, 0, 0.35555],\n    \"59\": [0.19444, 0.44444, 0.06695, 0, 0.35555],\n    \"61\": [-0.10889, 0.39111, 0.06833, 0, 0.88555],\n    \"63\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"64\": [0, 0.69444, 0.09208, 0, 0.88555],\n    \"65\": [0, 0.68611, 0, 0, 0.86555],\n    \"66\": [0, 0.68611, 0.0992, 0, 0.81666],\n    \"67\": [0, 0.68611, 0.14208, 0, 0.82666],\n    \"68\": [0, 0.68611, 0.09062, 0, 0.87555],\n    \"69\": [0, 0.68611, 0.11431, 0, 0.75666],\n    \"70\": [0, 0.68611, 0.12903, 0, 0.72722],\n    \"71\": [0, 0.68611, 0.07347, 0, 0.89527],\n    \"72\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"73\": [0, 0.68611, 0.15681, 0, 0.47166],\n    \"74\": [0, 0.68611, 0.145, 0, 0.61055],\n    \"75\": [0, 0.68611, 0.14208, 0, 0.89499],\n    \"76\": [0, 0.68611, 0, 0, 0.69777],\n    \"77\": [0, 0.68611, 0.17208, 0, 1.07277],\n    \"78\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"79\": [0, 0.68611, 0.09062, 0, 0.85499],\n    \"80\": [0, 0.68611, 0.0992, 0, 0.78721],\n    \"81\": [0.19444, 0.68611, 0.09062, 0, 0.85499],\n    \"82\": [0, 0.68611, 0.02559, 0, 0.85944],\n    \"83\": [0, 0.68611, 0.11264, 0, 0.64999],\n    \"84\": [0, 0.68611, 0.12903, 0, 0.7961],\n    \"85\": [0, 0.68611, 0.17208, 0, 0.88083],\n    \"86\": [0, 0.68611, 0.18625, 0, 0.86555],\n    \"87\": [0, 0.68611, 0.18625, 0, 1.15999],\n    \"88\": [0, 0.68611, 0.15681, 0, 0.86555],\n    \"89\": [0, 0.68611, 0.19803, 0, 0.86555],\n    \"90\": [0, 0.68611, 0.14208, 0, 0.70888],\n    \"91\": [0.25, 0.75, 0.1875, 0, 0.35611],\n    \"93\": [0.25, 0.75, 0.09972, 0, 0.35611],\n    \"94\": [0, 0.69444, 0.06709, 0, 0.59111],\n    \"95\": [0.31, 0.13444, 0.09811, 0, 0.59111],\n    \"97\": [0, 0.44444, 0.09426, 0, 0.59111],\n    \"98\": [0, 0.69444, 0.07861, 0, 0.53222],\n    \"99\": [0, 0.44444, 0.05222, 0, 0.53222],\n    \"100\": [0, 0.69444, 0.10861, 0, 0.59111],\n    \"101\": [0, 0.44444, 0.085, 0, 0.53222],\n    \"102\": [0.19444, 0.69444, 0.21778, 0, 0.4],\n    \"103\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n    \"104\": [0, 0.69444, 0.09426, 0, 0.59111],\n    \"105\": [0, 0.69326, 0.11387, 0, 0.35555],\n    \"106\": [0.19444, 0.69326, 0.1672, 0, 0.35555],\n    \"107\": [0, 0.69444, 0.11111, 0, 0.53222],\n    \"108\": [0, 0.69444, 0.10861, 0, 0.29666],\n    \"109\": [0, 0.44444, 0.09426, 0, 0.94444],\n    \"110\": [0, 0.44444, 0.09426, 0, 0.64999],\n    \"111\": [0, 0.44444, 0.07861, 0, 0.59111],\n    \"112\": [0.19444, 0.44444, 0.07861, 0, 0.59111],\n    \"113\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n    \"114\": [0, 0.44444, 0.11111, 0, 0.50167],\n    \"115\": [0, 0.44444, 0.08167, 0, 0.48694],\n    \"116\": [0, 0.63492, 0.09639, 0, 0.385],\n    \"117\": [0, 0.44444, 0.09426, 0, 0.62055],\n    \"118\": [0, 0.44444, 0.11111, 0, 0.53222],\n    \"119\": [0, 0.44444, 0.11111, 0, 0.76777],\n    \"120\": [0, 0.44444, 0.12583, 0, 0.56055],\n    \"121\": [0.19444, 0.44444, 0.105, 0, 0.56166],\n    \"122\": [0, 0.44444, 0.13889, 0, 0.49055],\n    \"126\": [0.35, 0.34444, 0.11472, 0, 0.59111],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.69444, 0.11473, 0, 0.59111],\n    \"176\": [0, 0.69444, 0, 0, 0.94888],\n    \"184\": [0.17014, 0, 0, 0, 0.53222],\n    \"198\": [0, 0.68611, 0.11431, 0, 1.02277],\n    \"216\": [0.04861, 0.73472, 0.09062, 0, 0.88555],\n    \"223\": [0.19444, 0.69444, 0.09736, 0, 0.665],\n    \"230\": [0, 0.44444, 0.085, 0, 0.82666],\n    \"248\": [0.09722, 0.54167, 0.09458, 0, 0.59111],\n    \"305\": [0, 0.44444, 0.09426, 0, 0.35555],\n    \"338\": [0, 0.68611, 0.11431, 0, 1.14054],\n    \"339\": [0, 0.44444, 0.085, 0, 0.82666],\n    \"567\": [0.19444, 0.44444, 0.04611, 0, 0.385],\n    \"710\": [0, 0.69444, 0.06709, 0, 0.59111],\n    \"711\": [0, 0.63194, 0.08271, 0, 0.59111],\n    \"713\": [0, 0.59444, 0.10444, 0, 0.59111],\n    \"714\": [0, 0.69444, 0.08528, 0, 0.59111],\n    \"715\": [0, 0.69444, 0, 0, 0.59111],\n    \"728\": [0, 0.69444, 0.10333, 0, 0.59111],\n    \"729\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"730\": [0, 0.69444, 0, 0, 0.94888],\n    \"732\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"733\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"915\": [0, 0.68611, 0.12903, 0, 0.69777],\n    \"916\": [0, 0.68611, 0, 0, 0.94444],\n    \"920\": [0, 0.68611, 0.09062, 0, 0.88555],\n    \"923\": [0, 0.68611, 0, 0, 0.80666],\n    \"926\": [0, 0.68611, 0.15092, 0, 0.76777],\n    \"928\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"931\": [0, 0.68611, 0.11431, 0, 0.82666],\n    \"933\": [0, 0.68611, 0.10778, 0, 0.88555],\n    \"934\": [0, 0.68611, 0.05632, 0, 0.82666],\n    \"936\": [0, 0.68611, 0.10778, 0, 0.88555],\n    \"937\": [0, 0.68611, 0.0992, 0, 0.82666],\n    \"8211\": [0, 0.44444, 0.09811, 0, 0.59111],\n    \"8212\": [0, 0.44444, 0.09811, 0, 1.18221],\n    \"8216\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"8217\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"8220\": [0, 0.69444, 0.16772, 0, 0.62055],\n    \"8221\": [0, 0.69444, 0.07939, 0, 0.62055]\n  },\n  \"Main-Italic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"34\": [0, 0.69444, 0.06961, 0, 0.51444],\n    \"35\": [0.19444, 0.69444, 0.06616, 0, 0.81777],\n    \"37\": [0.05556, 0.75, 0.13639, 0, 0.81777],\n    \"38\": [0, 0.69444, 0.09694, 0, 0.76666],\n    \"39\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"40\": [0.25, 0.75, 0.16194, 0, 0.40889],\n    \"41\": [0.25, 0.75, 0.03694, 0, 0.40889],\n    \"42\": [0, 0.75, 0.14917, 0, 0.51111],\n    \"43\": [0.05667, 0.56167, 0.03694, 0, 0.76666],\n    \"44\": [0.19444, 0.10556, 0, 0, 0.30667],\n    \"45\": [0, 0.43056, 0.02826, 0, 0.35778],\n    \"46\": [0, 0.10556, 0, 0, 0.30667],\n    \"47\": [0.25, 0.75, 0.16194, 0, 0.51111],\n    \"48\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"49\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"50\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"51\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"52\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n    \"53\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"54\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"55\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n    \"56\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"57\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"58\": [0, 0.43056, 0.0582, 0, 0.30667],\n    \"59\": [0.19444, 0.43056, 0.0582, 0, 0.30667],\n    \"61\": [-0.13313, 0.36687, 0.06616, 0, 0.76666],\n    \"63\": [0, 0.69444, 0.1225, 0, 0.51111],\n    \"64\": [0, 0.69444, 0.09597, 0, 0.76666],\n    \"65\": [0, 0.68333, 0, 0, 0.74333],\n    \"66\": [0, 0.68333, 0.10257, 0, 0.70389],\n    \"67\": [0, 0.68333, 0.14528, 0, 0.71555],\n    \"68\": [0, 0.68333, 0.09403, 0, 0.755],\n    \"69\": [0, 0.68333, 0.12028, 0, 0.67833],\n    \"70\": [0, 0.68333, 0.13305, 0, 0.65277],\n    \"71\": [0, 0.68333, 0.08722, 0, 0.77361],\n    \"72\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"73\": [0, 0.68333, 0.15806, 0, 0.38555],\n    \"74\": [0, 0.68333, 0.14028, 0, 0.525],\n    \"75\": [0, 0.68333, 0.14528, 0, 0.76888],\n    \"76\": [0, 0.68333, 0, 0, 0.62722],\n    \"77\": [0, 0.68333, 0.16389, 0, 0.89666],\n    \"78\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"79\": [0, 0.68333, 0.09403, 0, 0.76666],\n    \"80\": [0, 0.68333, 0.10257, 0, 0.67833],\n    \"81\": [0.19444, 0.68333, 0.09403, 0, 0.76666],\n    \"82\": [0, 0.68333, 0.03868, 0, 0.72944],\n    \"83\": [0, 0.68333, 0.11972, 0, 0.56222],\n    \"84\": [0, 0.68333, 0.13305, 0, 0.71555],\n    \"85\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"86\": [0, 0.68333, 0.18361, 0, 0.74333],\n    \"87\": [0, 0.68333, 0.18361, 0, 0.99888],\n    \"88\": [0, 0.68333, 0.15806, 0, 0.74333],\n    \"89\": [0, 0.68333, 0.19383, 0, 0.74333],\n    \"90\": [0, 0.68333, 0.14528, 0, 0.61333],\n    \"91\": [0.25, 0.75, 0.1875, 0, 0.30667],\n    \"93\": [0.25, 0.75, 0.10528, 0, 0.30667],\n    \"94\": [0, 0.69444, 0.06646, 0, 0.51111],\n    \"95\": [0.31, 0.12056, 0.09208, 0, 0.51111],\n    \"97\": [0, 0.43056, 0.07671, 0, 0.51111],\n    \"98\": [0, 0.69444, 0.06312, 0, 0.46],\n    \"99\": [0, 0.43056, 0.05653, 0, 0.46],\n    \"100\": [0, 0.69444, 0.10333, 0, 0.51111],\n    \"101\": [0, 0.43056, 0.07514, 0, 0.46],\n    \"102\": [0.19444, 0.69444, 0.21194, 0, 0.30667],\n    \"103\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n    \"104\": [0, 0.69444, 0.07671, 0, 0.51111],\n    \"105\": [0, 0.65536, 0.1019, 0, 0.30667],\n    \"106\": [0.19444, 0.65536, 0.14467, 0, 0.30667],\n    \"107\": [0, 0.69444, 0.10764, 0, 0.46],\n    \"108\": [0, 0.69444, 0.10333, 0, 0.25555],\n    \"109\": [0, 0.43056, 0.07671, 0, 0.81777],\n    \"110\": [0, 0.43056, 0.07671, 0, 0.56222],\n    \"111\": [0, 0.43056, 0.06312, 0, 0.51111],\n    \"112\": [0.19444, 0.43056, 0.06312, 0, 0.51111],\n    \"113\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n    \"114\": [0, 0.43056, 0.10764, 0, 0.42166],\n    \"115\": [0, 0.43056, 0.08208, 0, 0.40889],\n    \"116\": [0, 0.61508, 0.09486, 0, 0.33222],\n    \"117\": [0, 0.43056, 0.07671, 0, 0.53666],\n    \"118\": [0, 0.43056, 0.10764, 0, 0.46],\n    \"119\": [0, 0.43056, 0.10764, 0, 0.66444],\n    \"120\": [0, 0.43056, 0.12042, 0, 0.46389],\n    \"121\": [0.19444, 0.43056, 0.08847, 0, 0.48555],\n    \"122\": [0, 0.43056, 0.12292, 0, 0.40889],\n    \"126\": [0.35, 0.31786, 0.11585, 0, 0.51111],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.66786, 0.10474, 0, 0.51111],\n    \"176\": [0, 0.69444, 0, 0, 0.83129],\n    \"184\": [0.17014, 0, 0, 0, 0.46],\n    \"198\": [0, 0.68333, 0.12028, 0, 0.88277],\n    \"216\": [0.04861, 0.73194, 0.09403, 0, 0.76666],\n    \"223\": [0.19444, 0.69444, 0.10514, 0, 0.53666],\n    \"230\": [0, 0.43056, 0.07514, 0, 0.71555],\n    \"248\": [0.09722, 0.52778, 0.09194, 0, 0.51111],\n    \"338\": [0, 0.68333, 0.12028, 0, 0.98499],\n    \"339\": [0, 0.43056, 0.07514, 0, 0.71555],\n    \"710\": [0, 0.69444, 0.06646, 0, 0.51111],\n    \"711\": [0, 0.62847, 0.08295, 0, 0.51111],\n    \"713\": [0, 0.56167, 0.10333, 0, 0.51111],\n    \"714\": [0, 0.69444, 0.09694, 0, 0.51111],\n    \"715\": [0, 0.69444, 0, 0, 0.51111],\n    \"728\": [0, 0.69444, 0.10806, 0, 0.51111],\n    \"729\": [0, 0.66786, 0.11752, 0, 0.30667],\n    \"730\": [0, 0.69444, 0, 0, 0.83129],\n    \"732\": [0, 0.66786, 0.11585, 0, 0.51111],\n    \"733\": [0, 0.69444, 0.1225, 0, 0.51111],\n    \"915\": [0, 0.68333, 0.13305, 0, 0.62722],\n    \"916\": [0, 0.68333, 0, 0, 0.81777],\n    \"920\": [0, 0.68333, 0.09403, 0, 0.76666],\n    \"923\": [0, 0.68333, 0, 0, 0.69222],\n    \"926\": [0, 0.68333, 0.15294, 0, 0.66444],\n    \"928\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"931\": [0, 0.68333, 0.12028, 0, 0.71555],\n    \"933\": [0, 0.68333, 0.11111, 0, 0.76666],\n    \"934\": [0, 0.68333, 0.05986, 0, 0.71555],\n    \"936\": [0, 0.68333, 0.11111, 0, 0.76666],\n    \"937\": [0, 0.68333, 0.10257, 0, 0.71555],\n    \"8211\": [0, 0.43056, 0.09208, 0, 0.51111],\n    \"8212\": [0, 0.43056, 0.09208, 0, 1.02222],\n    \"8216\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"8217\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"8220\": [0, 0.69444, 0.1685, 0, 0.51444],\n    \"8221\": [0, 0.69444, 0.06961, 0, 0.51444],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028]\n  },\n  \"Main-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.27778],\n    \"34\": [0, 0.69444, 0, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n    \"38\": [0, 0.69444, 0, 0, 0.77778],\n    \"39\": [0, 0.69444, 0, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0, 0, 0.38889],\n    \"42\": [0, 0.75, 0, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"44\": [0.19444, 0.10556, 0, 0, 0.27778],\n    \"45\": [0, 0.43056, 0, 0, 0.33333],\n    \"46\": [0, 0.10556, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0, 0, 0.5],\n    \"48\": [0, 0.64444, 0, 0, 0.5],\n    \"49\": [0, 0.64444, 0, 0, 0.5],\n    \"50\": [0, 0.64444, 0, 0, 0.5],\n    \"51\": [0, 0.64444, 0, 0, 0.5],\n    \"52\": [0, 0.64444, 0, 0, 0.5],\n    \"53\": [0, 0.64444, 0, 0, 0.5],\n    \"54\": [0, 0.64444, 0, 0, 0.5],\n    \"55\": [0, 0.64444, 0, 0, 0.5],\n    \"56\": [0, 0.64444, 0, 0, 0.5],\n    \"57\": [0, 0.64444, 0, 0, 0.5],\n    \"58\": [0, 0.43056, 0, 0, 0.27778],\n    \"59\": [0.19444, 0.43056, 0, 0, 0.27778],\n    \"60\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"61\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"62\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"63\": [0, 0.69444, 0, 0, 0.47222],\n    \"64\": [0, 0.69444, 0, 0, 0.77778],\n    \"65\": [0, 0.68333, 0, 0, 0.75],\n    \"66\": [0, 0.68333, 0, 0, 0.70834],\n    \"67\": [0, 0.68333, 0, 0, 0.72222],\n    \"68\": [0, 0.68333, 0, 0, 0.76389],\n    \"69\": [0, 0.68333, 0, 0, 0.68056],\n    \"70\": [0, 0.68333, 0, 0, 0.65278],\n    \"71\": [0, 0.68333, 0, 0, 0.78472],\n    \"72\": [0, 0.68333, 0, 0, 0.75],\n    \"73\": [0, 0.68333, 0, 0, 0.36111],\n    \"74\": [0, 0.68333, 0, 0, 0.51389],\n    \"75\": [0, 0.68333, 0, 0, 0.77778],\n    \"76\": [0, 0.68333, 0, 0, 0.625],\n    \"77\": [0, 0.68333, 0, 0, 0.91667],\n    \"78\": [0, 0.68333, 0, 0, 0.75],\n    \"79\": [0, 0.68333, 0, 0, 0.77778],\n    \"80\": [0, 0.68333, 0, 0, 0.68056],\n    \"81\": [0.19444, 0.68333, 0, 0, 0.77778],\n    \"82\": [0, 0.68333, 0, 0, 0.73611],\n    \"83\": [0, 0.68333, 0, 0, 0.55556],\n    \"84\": [0, 0.68333, 0, 0, 0.72222],\n    \"85\": [0, 0.68333, 0, 0, 0.75],\n    \"86\": [0, 0.68333, 0.01389, 0, 0.75],\n    \"87\": [0, 0.68333, 0.01389, 0, 1.02778],\n    \"88\": [0, 0.68333, 0, 0, 0.75],\n    \"89\": [0, 0.68333, 0.025, 0, 0.75],\n    \"90\": [0, 0.68333, 0, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0, 0, 0.27778],\n    \"92\": [0.25, 0.75, 0, 0, 0.5],\n    \"93\": [0.25, 0.75, 0, 0, 0.27778],\n    \"94\": [0, 0.69444, 0, 0, 0.5],\n    \"95\": [0.31, 0.12056, 0.02778, 0, 0.5],\n    \"97\": [0, 0.43056, 0, 0, 0.5],\n    \"98\": [0, 0.69444, 0, 0, 0.55556],\n    \"99\": [0, 0.43056, 0, 0, 0.44445],\n    \"100\": [0, 0.69444, 0, 0, 0.55556],\n    \"101\": [0, 0.43056, 0, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.07778, 0, 0.30556],\n    \"103\": [0.19444, 0.43056, 0.01389, 0, 0.5],\n    \"104\": [0, 0.69444, 0, 0, 0.55556],\n    \"105\": [0, 0.66786, 0, 0, 0.27778],\n    \"106\": [0.19444, 0.66786, 0, 0, 0.30556],\n    \"107\": [0, 0.69444, 0, 0, 0.52778],\n    \"108\": [0, 0.69444, 0, 0, 0.27778],\n    \"109\": [0, 0.43056, 0, 0, 0.83334],\n    \"110\": [0, 0.43056, 0, 0, 0.55556],\n    \"111\": [0, 0.43056, 0, 0, 0.5],\n    \"112\": [0.19444, 0.43056, 0, 0, 0.55556],\n    \"113\": [0.19444, 0.43056, 0, 0, 0.52778],\n    \"114\": [0, 0.43056, 0, 0, 0.39167],\n    \"115\": [0, 0.43056, 0, 0, 0.39445],\n    \"116\": [0, 0.61508, 0, 0, 0.38889],\n    \"117\": [0, 0.43056, 0, 0, 0.55556],\n    \"118\": [0, 0.43056, 0.01389, 0, 0.52778],\n    \"119\": [0, 0.43056, 0.01389, 0, 0.72222],\n    \"120\": [0, 0.43056, 0, 0, 0.52778],\n    \"121\": [0.19444, 0.43056, 0.01389, 0, 0.52778],\n    \"122\": [0, 0.43056, 0, 0, 0.44445],\n    \"123\": [0.25, 0.75, 0, 0, 0.5],\n    \"124\": [0.25, 0.75, 0, 0, 0.27778],\n    \"125\": [0.25, 0.75, 0, 0, 0.5],\n    \"126\": [0.35, 0.31786, 0, 0, 0.5],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"163\": [0, 0.69444, 0, 0, 0.76909],\n    \"167\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"168\": [0, 0.66786, 0, 0, 0.5],\n    \"172\": [0, 0.43056, 0, 0, 0.66667],\n    \"176\": [0, 0.69444, 0, 0, 0.75],\n    \"177\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"182\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"198\": [0, 0.68333, 0, 0, 0.90278],\n    \"215\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"216\": [0.04861, 0.73194, 0, 0, 0.77778],\n    \"223\": [0, 0.69444, 0, 0, 0.5],\n    \"230\": [0, 0.43056, 0, 0, 0.72222],\n    \"247\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"248\": [0.09722, 0.52778, 0, 0, 0.5],\n    \"305\": [0, 0.43056, 0, 0, 0.27778],\n    \"338\": [0, 0.68333, 0, 0, 1.01389],\n    \"339\": [0, 0.43056, 0, 0, 0.77778],\n    \"567\": [0.19444, 0.43056, 0, 0, 0.30556],\n    \"710\": [0, 0.69444, 0, 0, 0.5],\n    \"711\": [0, 0.62847, 0, 0, 0.5],\n    \"713\": [0, 0.56778, 0, 0, 0.5],\n    \"714\": [0, 0.69444, 0, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0, 0, 0.5],\n    \"729\": [0, 0.66786, 0, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.75],\n    \"732\": [0, 0.66786, 0, 0, 0.5],\n    \"733\": [0, 0.69444, 0, 0, 0.5],\n    \"915\": [0, 0.68333, 0, 0, 0.625],\n    \"916\": [0, 0.68333, 0, 0, 0.83334],\n    \"920\": [0, 0.68333, 0, 0, 0.77778],\n    \"923\": [0, 0.68333, 0, 0, 0.69445],\n    \"926\": [0, 0.68333, 0, 0, 0.66667],\n    \"928\": [0, 0.68333, 0, 0, 0.75],\n    \"931\": [0, 0.68333, 0, 0, 0.72222],\n    \"933\": [0, 0.68333, 0, 0, 0.77778],\n    \"934\": [0, 0.68333, 0, 0, 0.72222],\n    \"936\": [0, 0.68333, 0, 0, 0.77778],\n    \"937\": [0, 0.68333, 0, 0, 0.72222],\n    \"8211\": [0, 0.43056, 0.02778, 0, 0.5],\n    \"8212\": [0, 0.43056, 0.02778, 0, 1.0],\n    \"8216\": [0, 0.69444, 0, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0, 0, 0.5],\n    \"8221\": [0, 0.69444, 0, 0, 0.5],\n    \"8224\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"8225\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"8230\": [0, 0.123, 0, 0, 1.172],\n    \"8242\": [0, 0.55556, 0, 0, 0.275],\n    \"8407\": [0, 0.71444, 0.15382, 0, 0.5],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028],\n    \"8465\": [0, 0.69444, 0, 0, 0.72222],\n    \"8467\": [0, 0.69444, 0, 0.11111, 0.41667],\n    \"8472\": [0.19444, 0.43056, 0, 0.11111, 0.63646],\n    \"8476\": [0, 0.69444, 0, 0, 0.72222],\n    \"8501\": [0, 0.69444, 0, 0, 0.61111],\n    \"8592\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8593\": [0.19444, 0.69444, 0, 0, 0.5],\n    \"8594\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8595\": [0.19444, 0.69444, 0, 0, 0.5],\n    \"8596\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8597\": [0.25, 0.75, 0, 0, 0.5],\n    \"8598\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8599\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8600\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8601\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8614\": [0.011, 0.511, 0, 0, 1.0],\n    \"8617\": [0.011, 0.511, 0, 0, 1.126],\n    \"8618\": [0.011, 0.511, 0, 0, 1.126],\n    \"8636\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8637\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8640\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8641\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8652\": [0.011, 0.671, 0, 0, 1.0],\n    \"8656\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8657\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"8658\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8659\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"8660\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8661\": [0.25, 0.75, 0, 0, 0.61111],\n    \"8704\": [0, 0.69444, 0, 0, 0.55556],\n    \"8706\": [0, 0.69444, 0.05556, 0.08334, 0.5309],\n    \"8707\": [0, 0.69444, 0, 0, 0.55556],\n    \"8709\": [0.05556, 0.75, 0, 0, 0.5],\n    \"8711\": [0, 0.68333, 0, 0, 0.83334],\n    \"8712\": [0.0391, 0.5391, 0, 0, 0.66667],\n    \"8715\": [0.0391, 0.5391, 0, 0, 0.66667],\n    \"8722\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8723\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8725\": [0.25, 0.75, 0, 0, 0.5],\n    \"8726\": [0.25, 0.75, 0, 0, 0.5],\n    \"8727\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"8728\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8729\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8730\": [0.2, 0.8, 0, 0, 0.83334],\n    \"8733\": [0, 0.43056, 0, 0, 0.77778],\n    \"8734\": [0, 0.43056, 0, 0, 1.0],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8739\": [0.25, 0.75, 0, 0, 0.27778],\n    \"8741\": [0.25, 0.75, 0, 0, 0.5],\n    \"8743\": [0, 0.55556, 0, 0, 0.66667],\n    \"8744\": [0, 0.55556, 0, 0, 0.66667],\n    \"8745\": [0, 0.55556, 0, 0, 0.66667],\n    \"8746\": [0, 0.55556, 0, 0, 0.66667],\n    \"8747\": [0.19444, 0.69444, 0.11111, 0, 0.41667],\n    \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8768\": [0.19444, 0.69444, 0, 0, 0.27778],\n    \"8771\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8773\": [-0.022, 0.589, 0, 0, 0.778],\n    \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n    \"8781\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8784\": [-0.133, 0.673, 0, 0, 0.778],\n    \"8801\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8804\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8805\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8810\": [0.0391, 0.5391, 0, 0, 1.0],\n    \"8811\": [0.0391, 0.5391, 0, 0, 1.0],\n    \"8826\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8827\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8834\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8835\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8838\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8839\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8846\": [0, 0.55556, 0, 0, 0.66667],\n    \"8849\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8850\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8851\": [0, 0.55556, 0, 0, 0.66667],\n    \"8852\": [0, 0.55556, 0, 0, 0.66667],\n    \"8853\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8854\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8855\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8856\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8857\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8866\": [0, 0.69444, 0, 0, 0.61111],\n    \"8867\": [0, 0.69444, 0, 0, 0.61111],\n    \"8868\": [0, 0.69444, 0, 0, 0.77778],\n    \"8869\": [0, 0.69444, 0, 0, 0.77778],\n    \"8872\": [0.249, 0.75, 0, 0, 0.867],\n    \"8900\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8901\": [-0.05555, 0.44445, 0, 0, 0.27778],\n    \"8902\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"8904\": [0.005, 0.505, 0, 0, 0.9],\n    \"8942\": [0.03, 0.903, 0, 0, 0.278],\n    \"8943\": [-0.19, 0.313, 0, 0, 1.172],\n    \"8945\": [-0.1, 0.823, 0, 0, 1.282],\n    \"8968\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8969\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8970\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8971\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8994\": [-0.14236, 0.35764, 0, 0, 1.0],\n    \"8995\": [-0.14236, 0.35764, 0, 0, 1.0],\n    \"9136\": [0.244, 0.744, 0, 0, 0.412],\n    \"9137\": [0.244, 0.745, 0, 0, 0.412],\n    \"9651\": [0.19444, 0.69444, 0, 0, 0.88889],\n    \"9657\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"9661\": [0.19444, 0.69444, 0, 0, 0.88889],\n    \"9667\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"9711\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"9824\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9825\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9826\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9827\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9837\": [0, 0.75, 0, 0, 0.38889],\n    \"9838\": [0.19444, 0.69444, 0, 0, 0.38889],\n    \"9839\": [0.19444, 0.69444, 0, 0, 0.38889],\n    \"10216\": [0.25, 0.75, 0, 0, 0.38889],\n    \"10217\": [0.25, 0.75, 0, 0, 0.38889],\n    \"10222\": [0.244, 0.744, 0, 0, 0.412],\n    \"10223\": [0.244, 0.745, 0, 0, 0.412],\n    \"10229\": [0.011, 0.511, 0, 0, 1.609],\n    \"10230\": [0.011, 0.511, 0, 0, 1.638],\n    \"10231\": [0.011, 0.511, 0, 0, 1.859],\n    \"10232\": [0.024, 0.525, 0, 0, 1.609],\n    \"10233\": [0.024, 0.525, 0, 0, 1.638],\n    \"10234\": [0.024, 0.525, 0, 0, 1.858],\n    \"10236\": [0.011, 0.511, 0, 0, 1.638],\n    \"10815\": [0, 0.68333, 0, 0, 0.75],\n    \"10927\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10928\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"57376\": [0.19444, 0.69444, 0, 0, 0]\n  },\n  \"Math-BoldItalic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"48\": [0, 0.44444, 0, 0, 0.575],\n    \"49\": [0, 0.44444, 0, 0, 0.575],\n    \"50\": [0, 0.44444, 0, 0, 0.575],\n    \"51\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"52\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"53\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"54\": [0, 0.64444, 0, 0, 0.575],\n    \"55\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"56\": [0, 0.64444, 0, 0, 0.575],\n    \"57\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"65\": [0, 0.68611, 0, 0, 0.86944],\n    \"66\": [0, 0.68611, 0.04835, 0, 0.8664],\n    \"67\": [0, 0.68611, 0.06979, 0, 0.81694],\n    \"68\": [0, 0.68611, 0.03194, 0, 0.93812],\n    \"69\": [0, 0.68611, 0.05451, 0, 0.81007],\n    \"70\": [0, 0.68611, 0.15972, 0, 0.68889],\n    \"71\": [0, 0.68611, 0, 0, 0.88673],\n    \"72\": [0, 0.68611, 0.08229, 0, 0.98229],\n    \"73\": [0, 0.68611, 0.07778, 0, 0.51111],\n    \"74\": [0, 0.68611, 0.10069, 0, 0.63125],\n    \"75\": [0, 0.68611, 0.06979, 0, 0.97118],\n    \"76\": [0, 0.68611, 0, 0, 0.75555],\n    \"77\": [0, 0.68611, 0.11424, 0, 1.14201],\n    \"78\": [0, 0.68611, 0.11424, 0, 0.95034],\n    \"79\": [0, 0.68611, 0.03194, 0, 0.83666],\n    \"80\": [0, 0.68611, 0.15972, 0, 0.72309],\n    \"81\": [0.19444, 0.68611, 0, 0, 0.86861],\n    \"82\": [0, 0.68611, 0.00421, 0, 0.87235],\n    \"83\": [0, 0.68611, 0.05382, 0, 0.69271],\n    \"84\": [0, 0.68611, 0.15972, 0, 0.63663],\n    \"85\": [0, 0.68611, 0.11424, 0, 0.80027],\n    \"86\": [0, 0.68611, 0.25555, 0, 0.67778],\n    \"87\": [0, 0.68611, 0.15972, 0, 1.09305],\n    \"88\": [0, 0.68611, 0.07778, 0, 0.94722],\n    \"89\": [0, 0.68611, 0.25555, 0, 0.67458],\n    \"90\": [0, 0.68611, 0.06979, 0, 0.77257],\n    \"97\": [0, 0.44444, 0, 0, 0.63287],\n    \"98\": [0, 0.69444, 0, 0, 0.52083],\n    \"99\": [0, 0.44444, 0, 0, 0.51342],\n    \"100\": [0, 0.69444, 0, 0, 0.60972],\n    \"101\": [0, 0.44444, 0, 0, 0.55361],\n    \"102\": [0.19444, 0.69444, 0.11042, 0, 0.56806],\n    \"103\": [0.19444, 0.44444, 0.03704, 0, 0.5449],\n    \"104\": [0, 0.69444, 0, 0, 0.66759],\n    \"105\": [0, 0.69326, 0, 0, 0.4048],\n    \"106\": [0.19444, 0.69326, 0.0622, 0, 0.47083],\n    \"107\": [0, 0.69444, 0.01852, 0, 0.6037],\n    \"108\": [0, 0.69444, 0.0088, 0, 0.34815],\n    \"109\": [0, 0.44444, 0, 0, 1.0324],\n    \"110\": [0, 0.44444, 0, 0, 0.71296],\n    \"111\": [0, 0.44444, 0, 0, 0.58472],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.60092],\n    \"113\": [0.19444, 0.44444, 0.03704, 0, 0.54213],\n    \"114\": [0, 0.44444, 0.03194, 0, 0.5287],\n    \"115\": [0, 0.44444, 0, 0, 0.53125],\n    \"116\": [0, 0.63492, 0, 0, 0.41528],\n    \"117\": [0, 0.44444, 0, 0, 0.68102],\n    \"118\": [0, 0.44444, 0.03704, 0, 0.56666],\n    \"119\": [0, 0.44444, 0.02778, 0, 0.83148],\n    \"120\": [0, 0.44444, 0, 0, 0.65903],\n    \"121\": [0.19444, 0.44444, 0.03704, 0, 0.59028],\n    \"122\": [0, 0.44444, 0.04213, 0, 0.55509],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"915\": [0, 0.68611, 0.15972, 0, 0.65694],\n    \"916\": [0, 0.68611, 0, 0, 0.95833],\n    \"920\": [0, 0.68611, 0.03194, 0, 0.86722],\n    \"923\": [0, 0.68611, 0, 0, 0.80555],\n    \"926\": [0, 0.68611, 0.07458, 0, 0.84125],\n    \"928\": [0, 0.68611, 0.08229, 0, 0.98229],\n    \"931\": [0, 0.68611, 0.05451, 0, 0.88507],\n    \"933\": [0, 0.68611, 0.15972, 0, 0.67083],\n    \"934\": [0, 0.68611, 0, 0, 0.76666],\n    \"936\": [0, 0.68611, 0.11653, 0, 0.71402],\n    \"937\": [0, 0.68611, 0.04835, 0, 0.8789],\n    \"945\": [0, 0.44444, 0, 0, 0.76064],\n    \"946\": [0.19444, 0.69444, 0.03403, 0, 0.65972],\n    \"947\": [0.19444, 0.44444, 0.06389, 0, 0.59003],\n    \"948\": [0, 0.69444, 0.03819, 0, 0.52222],\n    \"949\": [0, 0.44444, 0, 0, 0.52882],\n    \"950\": [0.19444, 0.69444, 0.06215, 0, 0.50833],\n    \"951\": [0.19444, 0.44444, 0.03704, 0, 0.6],\n    \"952\": [0, 0.69444, 0.03194, 0, 0.5618],\n    \"953\": [0, 0.44444, 0, 0, 0.41204],\n    \"954\": [0, 0.44444, 0, 0, 0.66759],\n    \"955\": [0, 0.69444, 0, 0, 0.67083],\n    \"956\": [0.19444, 0.44444, 0, 0, 0.70787],\n    \"957\": [0, 0.44444, 0.06898, 0, 0.57685],\n    \"958\": [0.19444, 0.69444, 0.03021, 0, 0.50833],\n    \"959\": [0, 0.44444, 0, 0, 0.58472],\n    \"960\": [0, 0.44444, 0.03704, 0, 0.68241],\n    \"961\": [0.19444, 0.44444, 0, 0, 0.6118],\n    \"962\": [0.09722, 0.44444, 0.07917, 0, 0.42361],\n    \"963\": [0, 0.44444, 0.03704, 0, 0.68588],\n    \"964\": [0, 0.44444, 0.13472, 0, 0.52083],\n    \"965\": [0, 0.44444, 0.03704, 0, 0.63055],\n    \"966\": [0.19444, 0.44444, 0, 0, 0.74722],\n    \"967\": [0.19444, 0.44444, 0, 0, 0.71805],\n    \"968\": [0.19444, 0.69444, 0.03704, 0, 0.75833],\n    \"969\": [0, 0.44444, 0.03704, 0, 0.71782],\n    \"977\": [0, 0.69444, 0, 0, 0.69155],\n    \"981\": [0.19444, 0.69444, 0, 0, 0.7125],\n    \"982\": [0, 0.44444, 0.03194, 0, 0.975],\n    \"1009\": [0.19444, 0.44444, 0, 0, 0.6118],\n    \"1013\": [0, 0.44444, 0, 0, 0.48333],\n    \"57649\": [0, 0.44444, 0, 0, 0.39352],\n    \"57911\": [0.19444, 0.44444, 0, 0, 0.43889]\n  },\n  \"Math-Italic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"48\": [0, 0.43056, 0, 0, 0.5],\n    \"49\": [0, 0.43056, 0, 0, 0.5],\n    \"50\": [0, 0.43056, 0, 0, 0.5],\n    \"51\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"52\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"53\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"54\": [0, 0.64444, 0, 0, 0.5],\n    \"55\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"56\": [0, 0.64444, 0, 0, 0.5],\n    \"57\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"65\": [0, 0.68333, 0, 0.13889, 0.75],\n    \"66\": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n    \"67\": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n    \"68\": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n    \"69\": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n    \"70\": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n    \"71\": [0, 0.68333, 0, 0.08334, 0.78625],\n    \"72\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"73\": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n    \"74\": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n    \"75\": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n    \"76\": [0, 0.68333, 0, 0.02778, 0.68056],\n    \"77\": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n    \"78\": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n    \"79\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"80\": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n    \"81\": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n    \"82\": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n    \"83\": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n    \"84\": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n    \"85\": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n    \"86\": [0, 0.68333, 0.22222, 0, 0.58333],\n    \"87\": [0, 0.68333, 0.13889, 0, 0.94445],\n    \"88\": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n    \"89\": [0, 0.68333, 0.22222, 0, 0.58056],\n    \"90\": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n    \"97\": [0, 0.43056, 0, 0, 0.52859],\n    \"98\": [0, 0.69444, 0, 0, 0.42917],\n    \"99\": [0, 0.43056, 0, 0.05556, 0.43276],\n    \"100\": [0, 0.69444, 0, 0.16667, 0.52049],\n    \"101\": [0, 0.43056, 0, 0.05556, 0.46563],\n    \"102\": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n    \"103\": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n    \"104\": [0, 0.69444, 0, 0, 0.57616],\n    \"105\": [0, 0.65952, 0, 0, 0.34451],\n    \"106\": [0.19444, 0.65952, 0.05724, 0, 0.41181],\n    \"107\": [0, 0.69444, 0.03148, 0, 0.5206],\n    \"108\": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n    \"109\": [0, 0.43056, 0, 0, 0.87801],\n    \"110\": [0, 0.43056, 0, 0, 0.60023],\n    \"111\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"112\": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n    \"113\": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n    \"114\": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n    \"115\": [0, 0.43056, 0, 0.05556, 0.46875],\n    \"116\": [0, 0.61508, 0, 0.08334, 0.36111],\n    \"117\": [0, 0.43056, 0, 0.02778, 0.57246],\n    \"118\": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n    \"119\": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n    \"120\": [0, 0.43056, 0, 0.02778, 0.57153],\n    \"121\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n    \"122\": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"915\": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n    \"916\": [0, 0.68333, 0, 0.16667, 0.83334],\n    \"920\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"923\": [0, 0.68333, 0, 0.16667, 0.69445],\n    \"926\": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n    \"928\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"931\": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n    \"933\": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n    \"934\": [0, 0.68333, 0, 0.08334, 0.66667],\n    \"936\": [0, 0.68333, 0.11, 0.05556, 0.61222],\n    \"937\": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n    \"945\": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n    \"946\": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n    \"947\": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n    \"948\": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n    \"949\": [0, 0.43056, 0, 0.08334, 0.46632],\n    \"950\": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n    \"951\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n    \"952\": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n    \"953\": [0, 0.43056, 0, 0.05556, 0.35394],\n    \"954\": [0, 0.43056, 0, 0, 0.57616],\n    \"955\": [0, 0.69444, 0, 0, 0.58334],\n    \"956\": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n    \"957\": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n    \"958\": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n    \"959\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"960\": [0, 0.43056, 0.03588, 0, 0.57003],\n    \"961\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"962\": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n    \"963\": [0, 0.43056, 0.03588, 0, 0.57141],\n    \"964\": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n    \"965\": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n    \"966\": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n    \"967\": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n    \"968\": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n    \"969\": [0, 0.43056, 0.03588, 0, 0.62245],\n    \"977\": [0, 0.69444, 0, 0.08334, 0.59144],\n    \"981\": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n    \"982\": [0, 0.43056, 0.02778, 0, 0.82813],\n    \"1009\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"1013\": [0, 0.43056, 0, 0.05556, 0.4059],\n    \"57649\": [0, 0.43056, 0, 0.02778, 0.32246],\n    \"57911\": [0.19444, 0.43056, 0, 0.08334, 0.38403]\n  },\n  \"SansSerif-Bold\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.36667],\n    \"34\": [0, 0.69444, 0, 0, 0.55834],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.91667],\n    \"36\": [0.05556, 0.75, 0, 0, 0.55],\n    \"37\": [0.05556, 0.75, 0, 0, 1.02912],\n    \"38\": [0, 0.69444, 0, 0, 0.83056],\n    \"39\": [0, 0.69444, 0, 0, 0.30556],\n    \"40\": [0.25, 0.75, 0, 0, 0.42778],\n    \"41\": [0.25, 0.75, 0, 0, 0.42778],\n    \"42\": [0, 0.75, 0, 0, 0.55],\n    \"43\": [0.11667, 0.61667, 0, 0, 0.85556],\n    \"44\": [0.10556, 0.13056, 0, 0, 0.30556],\n    \"45\": [0, 0.45833, 0, 0, 0.36667],\n    \"46\": [0, 0.13056, 0, 0, 0.30556],\n    \"47\": [0.25, 0.75, 0, 0, 0.55],\n    \"48\": [0, 0.69444, 0, 0, 0.55],\n    \"49\": [0, 0.69444, 0, 0, 0.55],\n    \"50\": [0, 0.69444, 0, 0, 0.55],\n    \"51\": [0, 0.69444, 0, 0, 0.55],\n    \"52\": [0, 0.69444, 0, 0, 0.55],\n    \"53\": [0, 0.69444, 0, 0, 0.55],\n    \"54\": [0, 0.69444, 0, 0, 0.55],\n    \"55\": [0, 0.69444, 0, 0, 0.55],\n    \"56\": [0, 0.69444, 0, 0, 0.55],\n    \"57\": [0, 0.69444, 0, 0, 0.55],\n    \"58\": [0, 0.45833, 0, 0, 0.30556],\n    \"59\": [0.10556, 0.45833, 0, 0, 0.30556],\n    \"61\": [-0.09375, 0.40625, 0, 0, 0.85556],\n    \"63\": [0, 0.69444, 0, 0, 0.51945],\n    \"64\": [0, 0.69444, 0, 0, 0.73334],\n    \"65\": [0, 0.69444, 0, 0, 0.73334],\n    \"66\": [0, 0.69444, 0, 0, 0.73334],\n    \"67\": [0, 0.69444, 0, 0, 0.70278],\n    \"68\": [0, 0.69444, 0, 0, 0.79445],\n    \"69\": [0, 0.69444, 0, 0, 0.64167],\n    \"70\": [0, 0.69444, 0, 0, 0.61111],\n    \"71\": [0, 0.69444, 0, 0, 0.73334],\n    \"72\": [0, 0.69444, 0, 0, 0.79445],\n    \"73\": [0, 0.69444, 0, 0, 0.33056],\n    \"74\": [0, 0.69444, 0, 0, 0.51945],\n    \"75\": [0, 0.69444, 0, 0, 0.76389],\n    \"76\": [0, 0.69444, 0, 0, 0.58056],\n    \"77\": [0, 0.69444, 0, 0, 0.97778],\n    \"78\": [0, 0.69444, 0, 0, 0.79445],\n    \"79\": [0, 0.69444, 0, 0, 0.79445],\n    \"80\": [0, 0.69444, 0, 0, 0.70278],\n    \"81\": [0.10556, 0.69444, 0, 0, 0.79445],\n    \"82\": [0, 0.69444, 0, 0, 0.70278],\n    \"83\": [0, 0.69444, 0, 0, 0.61111],\n    \"84\": [0, 0.69444, 0, 0, 0.73334],\n    \"85\": [0, 0.69444, 0, 0, 0.76389],\n    \"86\": [0, 0.69444, 0.01528, 0, 0.73334],\n    \"87\": [0, 0.69444, 0.01528, 0, 1.03889],\n    \"88\": [0, 0.69444, 0, 0, 0.73334],\n    \"89\": [0, 0.69444, 0.0275, 0, 0.73334],\n    \"90\": [0, 0.69444, 0, 0, 0.67223],\n    \"91\": [0.25, 0.75, 0, 0, 0.34306],\n    \"93\": [0.25, 0.75, 0, 0, 0.34306],\n    \"94\": [0, 0.69444, 0, 0, 0.55],\n    \"95\": [0.35, 0.10833, 0.03056, 0, 0.55],\n    \"97\": [0, 0.45833, 0, 0, 0.525],\n    \"98\": [0, 0.69444, 0, 0, 0.56111],\n    \"99\": [0, 0.45833, 0, 0, 0.48889],\n    \"100\": [0, 0.69444, 0, 0, 0.56111],\n    \"101\": [0, 0.45833, 0, 0, 0.51111],\n    \"102\": [0, 0.69444, 0.07639, 0, 0.33611],\n    \"103\": [0.19444, 0.45833, 0.01528, 0, 0.55],\n    \"104\": [0, 0.69444, 0, 0, 0.56111],\n    \"105\": [0, 0.69444, 0, 0, 0.25556],\n    \"106\": [0.19444, 0.69444, 0, 0, 0.28611],\n    \"107\": [0, 0.69444, 0, 0, 0.53056],\n    \"108\": [0, 0.69444, 0, 0, 0.25556],\n    \"109\": [0, 0.45833, 0, 0, 0.86667],\n    \"110\": [0, 0.45833, 0, 0, 0.56111],\n    \"111\": [0, 0.45833, 0, 0, 0.55],\n    \"112\": [0.19444, 0.45833, 0, 0, 0.56111],\n    \"113\": [0.19444, 0.45833, 0, 0, 0.56111],\n    \"114\": [0, 0.45833, 0.01528, 0, 0.37222],\n    \"115\": [0, 0.45833, 0, 0, 0.42167],\n    \"116\": [0, 0.58929, 0, 0, 0.40417],\n    \"117\": [0, 0.45833, 0, 0, 0.56111],\n    \"118\": [0, 0.45833, 0.01528, 0, 0.5],\n    \"119\": [0, 0.45833, 0.01528, 0, 0.74445],\n    \"120\": [0, 0.45833, 0, 0, 0.5],\n    \"121\": [0.19444, 0.45833, 0.01528, 0, 0.5],\n    \"122\": [0, 0.45833, 0, 0, 0.47639],\n    \"126\": [0.35, 0.34444, 0, 0, 0.55],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.69444, 0, 0, 0.55],\n    \"176\": [0, 0.69444, 0, 0, 0.73334],\n    \"180\": [0, 0.69444, 0, 0, 0.55],\n    \"184\": [0.17014, 0, 0, 0, 0.48889],\n    \"305\": [0, 0.45833, 0, 0, 0.25556],\n    \"567\": [0.19444, 0.45833, 0, 0, 0.28611],\n    \"710\": [0, 0.69444, 0, 0, 0.55],\n    \"711\": [0, 0.63542, 0, 0, 0.55],\n    \"713\": [0, 0.63778, 0, 0, 0.55],\n    \"728\": [0, 0.69444, 0, 0, 0.55],\n    \"729\": [0, 0.69444, 0, 0, 0.30556],\n    \"730\": [0, 0.69444, 0, 0, 0.73334],\n    \"732\": [0, 0.69444, 0, 0, 0.55],\n    \"733\": [0, 0.69444, 0, 0, 0.55],\n    \"915\": [0, 0.69444, 0, 0, 0.58056],\n    \"916\": [0, 0.69444, 0, 0, 0.91667],\n    \"920\": [0, 0.69444, 0, 0, 0.85556],\n    \"923\": [0, 0.69444, 0, 0, 0.67223],\n    \"926\": [0, 0.69444, 0, 0, 0.73334],\n    \"928\": [0, 0.69444, 0, 0, 0.79445],\n    \"931\": [0, 0.69444, 0, 0, 0.79445],\n    \"933\": [0, 0.69444, 0, 0, 0.85556],\n    \"934\": [0, 0.69444, 0, 0, 0.79445],\n    \"936\": [0, 0.69444, 0, 0, 0.85556],\n    \"937\": [0, 0.69444, 0, 0, 0.79445],\n    \"8211\": [0, 0.45833, 0.03056, 0, 0.55],\n    \"8212\": [0, 0.45833, 0.03056, 0, 1.10001],\n    \"8216\": [0, 0.69444, 0, 0, 0.30556],\n    \"8217\": [0, 0.69444, 0, 0, 0.30556],\n    \"8220\": [0, 0.69444, 0, 0, 0.55834],\n    \"8221\": [0, 0.69444, 0, 0, 0.55834]\n  },\n  \"SansSerif-Italic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0.05733, 0, 0.31945],\n    \"34\": [0, 0.69444, 0.00316, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0.05087, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0.11156, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0.03126, 0, 0.83334],\n    \"38\": [0, 0.69444, 0.03058, 0, 0.75834],\n    \"39\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0.13164, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0.02536, 0, 0.38889],\n    \"42\": [0, 0.75, 0.11775, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0.02536, 0, 0.77778],\n    \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n    \"45\": [0, 0.44444, 0.01946, 0, 0.33333],\n    \"46\": [0, 0.08333, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0.13164, 0, 0.5],\n    \"48\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"49\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"50\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"51\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"52\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"53\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"54\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"55\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"56\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"57\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"58\": [0, 0.44444, 0.02502, 0, 0.27778],\n    \"59\": [0.125, 0.44444, 0.02502, 0, 0.27778],\n    \"61\": [-0.13, 0.37, 0.05087, 0, 0.77778],\n    \"63\": [0, 0.69444, 0.11809, 0, 0.47222],\n    \"64\": [0, 0.69444, 0.07555, 0, 0.66667],\n    \"65\": [0, 0.69444, 0, 0, 0.66667],\n    \"66\": [0, 0.69444, 0.08293, 0, 0.66667],\n    \"67\": [0, 0.69444, 0.11983, 0, 0.63889],\n    \"68\": [0, 0.69444, 0.07555, 0, 0.72223],\n    \"69\": [0, 0.69444, 0.11983, 0, 0.59722],\n    \"70\": [0, 0.69444, 0.13372, 0, 0.56945],\n    \"71\": [0, 0.69444, 0.11983, 0, 0.66667],\n    \"72\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"73\": [0, 0.69444, 0.13372, 0, 0.27778],\n    \"74\": [0, 0.69444, 0.08094, 0, 0.47222],\n    \"75\": [0, 0.69444, 0.11983, 0, 0.69445],\n    \"76\": [0, 0.69444, 0, 0, 0.54167],\n    \"77\": [0, 0.69444, 0.08094, 0, 0.875],\n    \"78\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"79\": [0, 0.69444, 0.07555, 0, 0.73611],\n    \"80\": [0, 0.69444, 0.08293, 0, 0.63889],\n    \"81\": [0.125, 0.69444, 0.07555, 0, 0.73611],\n    \"82\": [0, 0.69444, 0.08293, 0, 0.64584],\n    \"83\": [0, 0.69444, 0.09205, 0, 0.55556],\n    \"84\": [0, 0.69444, 0.13372, 0, 0.68056],\n    \"85\": [0, 0.69444, 0.08094, 0, 0.6875],\n    \"86\": [0, 0.69444, 0.1615, 0, 0.66667],\n    \"87\": [0, 0.69444, 0.1615, 0, 0.94445],\n    \"88\": [0, 0.69444, 0.13372, 0, 0.66667],\n    \"89\": [0, 0.69444, 0.17261, 0, 0.66667],\n    \"90\": [0, 0.69444, 0.11983, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0.15942, 0, 0.28889],\n    \"93\": [0.25, 0.75, 0.08719, 0, 0.28889],\n    \"94\": [0, 0.69444, 0.0799, 0, 0.5],\n    \"95\": [0.35, 0.09444, 0.08616, 0, 0.5],\n    \"97\": [0, 0.44444, 0.00981, 0, 0.48056],\n    \"98\": [0, 0.69444, 0.03057, 0, 0.51667],\n    \"99\": [0, 0.44444, 0.08336, 0, 0.44445],\n    \"100\": [0, 0.69444, 0.09483, 0, 0.51667],\n    \"101\": [0, 0.44444, 0.06778, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.21705, 0, 0.30556],\n    \"103\": [0.19444, 0.44444, 0.10836, 0, 0.5],\n    \"104\": [0, 0.69444, 0.01778, 0, 0.51667],\n    \"105\": [0, 0.67937, 0.09718, 0, 0.23889],\n    \"106\": [0.19444, 0.67937, 0.09162, 0, 0.26667],\n    \"107\": [0, 0.69444, 0.08336, 0, 0.48889],\n    \"108\": [0, 0.69444, 0.09483, 0, 0.23889],\n    \"109\": [0, 0.44444, 0.01778, 0, 0.79445],\n    \"110\": [0, 0.44444, 0.01778, 0, 0.51667],\n    \"111\": [0, 0.44444, 0.06613, 0, 0.5],\n    \"112\": [0.19444, 0.44444, 0.0389, 0, 0.51667],\n    \"113\": [0.19444, 0.44444, 0.04169, 0, 0.51667],\n    \"114\": [0, 0.44444, 0.10836, 0, 0.34167],\n    \"115\": [0, 0.44444, 0.0778, 0, 0.38333],\n    \"116\": [0, 0.57143, 0.07225, 0, 0.36111],\n    \"117\": [0, 0.44444, 0.04169, 0, 0.51667],\n    \"118\": [0, 0.44444, 0.10836, 0, 0.46111],\n    \"119\": [0, 0.44444, 0.10836, 0, 0.68334],\n    \"120\": [0, 0.44444, 0.09169, 0, 0.46111],\n    \"121\": [0.19444, 0.44444, 0.10836, 0, 0.46111],\n    \"122\": [0, 0.44444, 0.08752, 0, 0.43472],\n    \"126\": [0.35, 0.32659, 0.08826, 0, 0.5],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.67937, 0.06385, 0, 0.5],\n    \"176\": [0, 0.69444, 0, 0, 0.73752],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"305\": [0, 0.44444, 0.04169, 0, 0.23889],\n    \"567\": [0.19444, 0.44444, 0.04169, 0, 0.26667],\n    \"710\": [0, 0.69444, 0.0799, 0, 0.5],\n    \"711\": [0, 0.63194, 0.08432, 0, 0.5],\n    \"713\": [0, 0.60889, 0.08776, 0, 0.5],\n    \"714\": [0, 0.69444, 0.09205, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0.09483, 0, 0.5],\n    \"729\": [0, 0.67937, 0.07774, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.73752],\n    \"732\": [0, 0.67659, 0.08826, 0, 0.5],\n    \"733\": [0, 0.69444, 0.09205, 0, 0.5],\n    \"915\": [0, 0.69444, 0.13372, 0, 0.54167],\n    \"916\": [0, 0.69444, 0, 0, 0.83334],\n    \"920\": [0, 0.69444, 0.07555, 0, 0.77778],\n    \"923\": [0, 0.69444, 0, 0, 0.61111],\n    \"926\": [0, 0.69444, 0.12816, 0, 0.66667],\n    \"928\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"931\": [0, 0.69444, 0.11983, 0, 0.72222],\n    \"933\": [0, 0.69444, 0.09031, 0, 0.77778],\n    \"934\": [0, 0.69444, 0.04603, 0, 0.72222],\n    \"936\": [0, 0.69444, 0.09031, 0, 0.77778],\n    \"937\": [0, 0.69444, 0.08293, 0, 0.72222],\n    \"8211\": [0, 0.44444, 0.08616, 0, 0.5],\n    \"8212\": [0, 0.44444, 0.08616, 0, 1.0],\n    \"8216\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0.14205, 0, 0.5],\n    \"8221\": [0, 0.69444, 0.00316, 0, 0.5]\n  },\n  \"SansSerif-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.31945],\n    \"34\": [0, 0.69444, 0, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n    \"38\": [0, 0.69444, 0, 0, 0.75834],\n    \"39\": [0, 0.69444, 0, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0, 0, 0.38889],\n    \"42\": [0, 0.75, 0, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n    \"45\": [0, 0.44444, 0, 0, 0.33333],\n    \"46\": [0, 0.08333, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0, 0, 0.5],\n    \"48\": [0, 0.65556, 0, 0, 0.5],\n    \"49\": [0, 0.65556, 0, 0, 0.5],\n    \"50\": [0, 0.65556, 0, 0, 0.5],\n    \"51\": [0, 0.65556, 0, 0, 0.5],\n    \"52\": [0, 0.65556, 0, 0, 0.5],\n    \"53\": [0, 0.65556, 0, 0, 0.5],\n    \"54\": [0, 0.65556, 0, 0, 0.5],\n    \"55\": [0, 0.65556, 0, 0, 0.5],\n    \"56\": [0, 0.65556, 0, 0, 0.5],\n    \"57\": [0, 0.65556, 0, 0, 0.5],\n    \"58\": [0, 0.44444, 0, 0, 0.27778],\n    \"59\": [0.125, 0.44444, 0, 0, 0.27778],\n    \"61\": [-0.13, 0.37, 0, 0, 0.77778],\n    \"63\": [0, 0.69444, 0, 0, 0.47222],\n    \"64\": [0, 0.69444, 0, 0, 0.66667],\n    \"65\": [0, 0.69444, 0, 0, 0.66667],\n    \"66\": [0, 0.69444, 0, 0, 0.66667],\n    \"67\": [0, 0.69444, 0, 0, 0.63889],\n    \"68\": [0, 0.69444, 0, 0, 0.72223],\n    \"69\": [0, 0.69444, 0, 0, 0.59722],\n    \"70\": [0, 0.69444, 0, 0, 0.56945],\n    \"71\": [0, 0.69444, 0, 0, 0.66667],\n    \"72\": [0, 0.69444, 0, 0, 0.70834],\n    \"73\": [0, 0.69444, 0, 0, 0.27778],\n    \"74\": [0, 0.69444, 0, 0, 0.47222],\n    \"75\": [0, 0.69444, 0, 0, 0.69445],\n    \"76\": [0, 0.69444, 0, 0, 0.54167],\n    \"77\": [0, 0.69444, 0, 0, 0.875],\n    \"78\": [0, 0.69444, 0, 0, 0.70834],\n    \"79\": [0, 0.69444, 0, 0, 0.73611],\n    \"80\": [0, 0.69444, 0, 0, 0.63889],\n    \"81\": [0.125, 0.69444, 0, 0, 0.73611],\n    \"82\": [0, 0.69444, 0, 0, 0.64584],\n    \"83\": [0, 0.69444, 0, 0, 0.55556],\n    \"84\": [0, 0.69444, 0, 0, 0.68056],\n    \"85\": [0, 0.69444, 0, 0, 0.6875],\n    \"86\": [0, 0.69444, 0.01389, 0, 0.66667],\n    \"87\": [0, 0.69444, 0.01389, 0, 0.94445],\n    \"88\": [0, 0.69444, 0, 0, 0.66667],\n    \"89\": [0, 0.69444, 0.025, 0, 0.66667],\n    \"90\": [0, 0.69444, 0, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0, 0, 0.28889],\n    \"93\": [0.25, 0.75, 0, 0, 0.28889],\n    \"94\": [0, 0.69444, 0, 0, 0.5],\n    \"95\": [0.35, 0.09444, 0.02778, 0, 0.5],\n    \"97\": [0, 0.44444, 0, 0, 0.48056],\n    \"98\": [0, 0.69444, 0, 0, 0.51667],\n    \"99\": [0, 0.44444, 0, 0, 0.44445],\n    \"100\": [0, 0.69444, 0, 0, 0.51667],\n    \"101\": [0, 0.44444, 0, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.06944, 0, 0.30556],\n    \"103\": [0.19444, 0.44444, 0.01389, 0, 0.5],\n    \"104\": [0, 0.69444, 0, 0, 0.51667],\n    \"105\": [0, 0.67937, 0, 0, 0.23889],\n    \"106\": [0.19444, 0.67937, 0, 0, 0.26667],\n    \"107\": [0, 0.69444, 0, 0, 0.48889],\n    \"108\": [0, 0.69444, 0, 0, 0.23889],\n    \"109\": [0, 0.44444, 0, 0, 0.79445],\n    \"110\": [0, 0.44444, 0, 0, 0.51667],\n    \"111\": [0, 0.44444, 0, 0, 0.5],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.51667],\n    \"113\": [0.19444, 0.44444, 0, 0, 0.51667],\n    \"114\": [0, 0.44444, 0.01389, 0, 0.34167],\n    \"115\": [0, 0.44444, 0, 0, 0.38333],\n    \"116\": [0, 0.57143, 0, 0, 0.36111],\n    \"117\": [0, 0.44444, 0, 0, 0.51667],\n    \"118\": [0, 0.44444, 0.01389, 0, 0.46111],\n    \"119\": [0, 0.44444, 0.01389, 0, 0.68334],\n    \"120\": [0, 0.44444, 0, 0, 0.46111],\n    \"121\": [0.19444, 0.44444, 0.01389, 0, 0.46111],\n    \"122\": [0, 0.44444, 0, 0, 0.43472],\n    \"126\": [0.35, 0.32659, 0, 0, 0.5],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.67937, 0, 0, 0.5],\n    \"176\": [0, 0.69444, 0, 0, 0.66667],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"305\": [0, 0.44444, 0, 0, 0.23889],\n    \"567\": [0.19444, 0.44444, 0, 0, 0.26667],\n    \"710\": [0, 0.69444, 0, 0, 0.5],\n    \"711\": [0, 0.63194, 0, 0, 0.5],\n    \"713\": [0, 0.60889, 0, 0, 0.5],\n    \"714\": [0, 0.69444, 0, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0, 0, 0.5],\n    \"729\": [0, 0.67937, 0, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.66667],\n    \"732\": [0, 0.67659, 0, 0, 0.5],\n    \"733\": [0, 0.69444, 0, 0, 0.5],\n    \"915\": [0, 0.69444, 0, 0, 0.54167],\n    \"916\": [0, 0.69444, 0, 0, 0.83334],\n    \"920\": [0, 0.69444, 0, 0, 0.77778],\n    \"923\": [0, 0.69444, 0, 0, 0.61111],\n    \"926\": [0, 0.69444, 0, 0, 0.66667],\n    \"928\": [0, 0.69444, 0, 0, 0.70834],\n    \"931\": [0, 0.69444, 0, 0, 0.72222],\n    \"933\": [0, 0.69444, 0, 0, 0.77778],\n    \"934\": [0, 0.69444, 0, 0, 0.72222],\n    \"936\": [0, 0.69444, 0, 0, 0.77778],\n    \"937\": [0, 0.69444, 0, 0, 0.72222],\n    \"8211\": [0, 0.44444, 0.02778, 0, 0.5],\n    \"8212\": [0, 0.44444, 0.02778, 0, 1.0],\n    \"8216\": [0, 0.69444, 0, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0, 0, 0.5],\n    \"8221\": [0, 0.69444, 0, 0, 0.5]\n  },\n  \"Script-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"65\": [0, 0.7, 0.22925, 0, 0.80253],\n    \"66\": [0, 0.7, 0.04087, 0, 0.90757],\n    \"67\": [0, 0.7, 0.1689, 0, 0.66619],\n    \"68\": [0, 0.7, 0.09371, 0, 0.77443],\n    \"69\": [0, 0.7, 0.18583, 0, 0.56162],\n    \"70\": [0, 0.7, 0.13634, 0, 0.89544],\n    \"71\": [0, 0.7, 0.17322, 0, 0.60961],\n    \"72\": [0, 0.7, 0.29694, 0, 0.96919],\n    \"73\": [0, 0.7, 0.19189, 0, 0.80907],\n    \"74\": [0.27778, 0.7, 0.19189, 0, 1.05159],\n    \"75\": [0, 0.7, 0.31259, 0, 0.91364],\n    \"76\": [0, 0.7, 0.19189, 0, 0.87373],\n    \"77\": [0, 0.7, 0.15981, 0, 1.08031],\n    \"78\": [0, 0.7, 0.3525, 0, 0.9015],\n    \"79\": [0, 0.7, 0.08078, 0, 0.73787],\n    \"80\": [0, 0.7, 0.08078, 0, 1.01262],\n    \"81\": [0, 0.7, 0.03305, 0, 0.88282],\n    \"82\": [0, 0.7, 0.06259, 0, 0.85],\n    \"83\": [0, 0.7, 0.19189, 0, 0.86767],\n    \"84\": [0, 0.7, 0.29087, 0, 0.74697],\n    \"85\": [0, 0.7, 0.25815, 0, 0.79996],\n    \"86\": [0, 0.7, 0.27523, 0, 0.62204],\n    \"87\": [0, 0.7, 0.27523, 0, 0.80532],\n    \"88\": [0, 0.7, 0.26006, 0, 0.94445],\n    \"89\": [0, 0.7, 0.2939, 0, 0.70961],\n    \"90\": [0, 0.7, 0.24037, 0, 0.8212],\n    \"160\": [0, 0, 0, 0, 0.25]\n  },\n  \"Size1-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"40\": [0.35001, 0.85, 0, 0, 0.45834],\n    \"41\": [0.35001, 0.85, 0, 0, 0.45834],\n    \"47\": [0.35001, 0.85, 0, 0, 0.57778],\n    \"91\": [0.35001, 0.85, 0, 0, 0.41667],\n    \"92\": [0.35001, 0.85, 0, 0, 0.57778],\n    \"93\": [0.35001, 0.85, 0, 0, 0.41667],\n    \"123\": [0.35001, 0.85, 0, 0, 0.58334],\n    \"125\": [0.35001, 0.85, 0, 0, 0.58334],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"710\": [0, 0.72222, 0, 0, 0.55556],\n    \"732\": [0, 0.72222, 0, 0, 0.55556],\n    \"770\": [0, 0.72222, 0, 0, 0.55556],\n    \"771\": [0, 0.72222, 0, 0, 0.55556],\n    \"8214\": [-0.00099, 0.601, 0, 0, 0.77778],\n    \"8593\": [1e-05, 0.6, 0, 0, 0.66667],\n    \"8595\": [1e-05, 0.6, 0, 0, 0.66667],\n    \"8657\": [1e-05, 0.6, 0, 0, 0.77778],\n    \"8659\": [1e-05, 0.6, 0, 0, 0.77778],\n    \"8719\": [0.25001, 0.75, 0, 0, 0.94445],\n    \"8720\": [0.25001, 0.75, 0, 0, 0.94445],\n    \"8721\": [0.25001, 0.75, 0, 0, 1.05556],\n    \"8730\": [0.35001, 0.85, 0, 0, 1.0],\n    \"8739\": [-0.00599, 0.606, 0, 0, 0.33333],\n    \"8741\": [-0.00599, 0.606, 0, 0, 0.55556],\n    \"8747\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n    \"8748\": [0.306, 0.805, 0.19445, 0, 0.47222],\n    \"8749\": [0.306, 0.805, 0.19445, 0, 0.47222],\n    \"8750\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n    \"8896\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8897\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8898\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8899\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8968\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8969\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8970\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8971\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"9168\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"10216\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"10217\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"10752\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10753\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10754\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10756\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"10758\": [0.25001, 0.75, 0, 0, 0.83334]\n  },\n  \"Size2-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"40\": [0.65002, 1.15, 0, 0, 0.59722],\n    \"41\": [0.65002, 1.15, 0, 0, 0.59722],\n    \"47\": [0.65002, 1.15, 0, 0, 0.81111],\n    \"91\": [0.65002, 1.15, 0, 0, 0.47222],\n    \"92\": [0.65002, 1.15, 0, 0, 0.81111],\n    \"93\": [0.65002, 1.15, 0, 0, 0.47222],\n    \"123\": [0.65002, 1.15, 0, 0, 0.66667],\n    \"125\": [0.65002, 1.15, 0, 0, 0.66667],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"710\": [0, 0.75, 0, 0, 1.0],\n    \"732\": [0, 0.75, 0, 0, 1.0],\n    \"770\": [0, 0.75, 0, 0, 1.0],\n    \"771\": [0, 0.75, 0, 0, 1.0],\n    \"8719\": [0.55001, 1.05, 0, 0, 1.27778],\n    \"8720\": [0.55001, 1.05, 0, 0, 1.27778],\n    \"8721\": [0.55001, 1.05, 0, 0, 1.44445],\n    \"8730\": [0.65002, 1.15, 0, 0, 1.0],\n    \"8747\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n    \"8748\": [0.862, 1.36, 0.44445, 0, 0.55556],\n    \"8749\": [0.862, 1.36, 0.44445, 0, 0.55556],\n    \"8750\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n    \"8896\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8897\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8898\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8899\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8968\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8969\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8970\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8971\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"10216\": [0.65002, 1.15, 0, 0, 0.61111],\n    \"10217\": [0.65002, 1.15, 0, 0, 0.61111],\n    \"10752\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10753\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10754\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10756\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"10758\": [0.55001, 1.05, 0, 0, 1.11111]\n  },\n  \"Size3-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"40\": [0.95003, 1.45, 0, 0, 0.73611],\n    \"41\": [0.95003, 1.45, 0, 0, 0.73611],\n    \"47\": [0.95003, 1.45, 0, 0, 1.04445],\n    \"91\": [0.95003, 1.45, 0, 0, 0.52778],\n    \"92\": [0.95003, 1.45, 0, 0, 1.04445],\n    \"93\": [0.95003, 1.45, 0, 0, 0.52778],\n    \"123\": [0.95003, 1.45, 0, 0, 0.75],\n    \"125\": [0.95003, 1.45, 0, 0, 0.75],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"710\": [0, 0.75, 0, 0, 1.44445],\n    \"732\": [0, 0.75, 0, 0, 1.44445],\n    \"770\": [0, 0.75, 0, 0, 1.44445],\n    \"771\": [0, 0.75, 0, 0, 1.44445],\n    \"8730\": [0.95003, 1.45, 0, 0, 1.0],\n    \"8968\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8969\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8970\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8971\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"10216\": [0.95003, 1.45, 0, 0, 0.75],\n    \"10217\": [0.95003, 1.45, 0, 0, 0.75]\n  },\n  \"Size4-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"40\": [1.25003, 1.75, 0, 0, 0.79167],\n    \"41\": [1.25003, 1.75, 0, 0, 0.79167],\n    \"47\": [1.25003, 1.75, 0, 0, 1.27778],\n    \"91\": [1.25003, 1.75, 0, 0, 0.58334],\n    \"92\": [1.25003, 1.75, 0, 0, 1.27778],\n    \"93\": [1.25003, 1.75, 0, 0, 0.58334],\n    \"123\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"125\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"710\": [0, 0.825, 0, 0, 1.8889],\n    \"732\": [0, 0.825, 0, 0, 1.8889],\n    \"770\": [0, 0.825, 0, 0, 1.8889],\n    \"771\": [0, 0.825, 0, 0, 1.8889],\n    \"8730\": [1.25003, 1.75, 0, 0, 1.0],\n    \"8968\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8969\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8970\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8971\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"9115\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9116\": [1e-05, 0.6, 0, 0, 0.875],\n    \"9117\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9118\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9119\": [1e-05, 0.6, 0, 0, 0.875],\n    \"9120\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9121\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9122\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"9123\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9124\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9125\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"9126\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9127\": [1e-05, 0.9, 0, 0, 0.88889],\n    \"9128\": [0.65002, 1.15, 0, 0, 0.88889],\n    \"9129\": [0.90001, 0, 0, 0, 0.88889],\n    \"9130\": [0, 0.3, 0, 0, 0.88889],\n    \"9131\": [1e-05, 0.9, 0, 0, 0.88889],\n    \"9132\": [0.65002, 1.15, 0, 0, 0.88889],\n    \"9133\": [0.90001, 0, 0, 0, 0.88889],\n    \"9143\": [0.88502, 0.915, 0, 0, 1.05556],\n    \"10216\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"10217\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"57344\": [-0.00499, 0.605, 0, 0, 1.05556],\n    \"57345\": [-0.00499, 0.605, 0, 0, 1.05556],\n    \"57680\": [0, 0.12, 0, 0, 0.45],\n    \"57681\": [0, 0.12, 0, 0, 0.45],\n    \"57682\": [0, 0.12, 0, 0, 0.45],\n    \"57683\": [0, 0.12, 0, 0, 0.45]\n  },\n  \"Typewriter-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.525],\n    \"33\": [0, 0.61111, 0, 0, 0.525],\n    \"34\": [0, 0.61111, 0, 0, 0.525],\n    \"35\": [0, 0.61111, 0, 0, 0.525],\n    \"36\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"37\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"38\": [0, 0.61111, 0, 0, 0.525],\n    \"39\": [0, 0.61111, 0, 0, 0.525],\n    \"40\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"41\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"42\": [0, 0.52083, 0, 0, 0.525],\n    \"43\": [-0.08056, 0.53055, 0, 0, 0.525],\n    \"44\": [0.13889, 0.125, 0, 0, 0.525],\n    \"45\": [-0.08056, 0.53055, 0, 0, 0.525],\n    \"46\": [0, 0.125, 0, 0, 0.525],\n    \"47\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"48\": [0, 0.61111, 0, 0, 0.525],\n    \"49\": [0, 0.61111, 0, 0, 0.525],\n    \"50\": [0, 0.61111, 0, 0, 0.525],\n    \"51\": [0, 0.61111, 0, 0, 0.525],\n    \"52\": [0, 0.61111, 0, 0, 0.525],\n    \"53\": [0, 0.61111, 0, 0, 0.525],\n    \"54\": [0, 0.61111, 0, 0, 0.525],\n    \"55\": [0, 0.61111, 0, 0, 0.525],\n    \"56\": [0, 0.61111, 0, 0, 0.525],\n    \"57\": [0, 0.61111, 0, 0, 0.525],\n    \"58\": [0, 0.43056, 0, 0, 0.525],\n    \"59\": [0.13889, 0.43056, 0, 0, 0.525],\n    \"60\": [-0.05556, 0.55556, 0, 0, 0.525],\n    \"61\": [-0.19549, 0.41562, 0, 0, 0.525],\n    \"62\": [-0.05556, 0.55556, 0, 0, 0.525],\n    \"63\": [0, 0.61111, 0, 0, 0.525],\n    \"64\": [0, 0.61111, 0, 0, 0.525],\n    \"65\": [0, 0.61111, 0, 0, 0.525],\n    \"66\": [0, 0.61111, 0, 0, 0.525],\n    \"67\": [0, 0.61111, 0, 0, 0.525],\n    \"68\": [0, 0.61111, 0, 0, 0.525],\n    \"69\": [0, 0.61111, 0, 0, 0.525],\n    \"70\": [0, 0.61111, 0, 0, 0.525],\n    \"71\": [0, 0.61111, 0, 0, 0.525],\n    \"72\": [0, 0.61111, 0, 0, 0.525],\n    \"73\": [0, 0.61111, 0, 0, 0.525],\n    \"74\": [0, 0.61111, 0, 0, 0.525],\n    \"75\": [0, 0.61111, 0, 0, 0.525],\n    \"76\": [0, 0.61111, 0, 0, 0.525],\n    \"77\": [0, 0.61111, 0, 0, 0.525],\n    \"78\": [0, 0.61111, 0, 0, 0.525],\n    \"79\": [0, 0.61111, 0, 0, 0.525],\n    \"80\": [0, 0.61111, 0, 0, 0.525],\n    \"81\": [0.13889, 0.61111, 0, 0, 0.525],\n    \"82\": [0, 0.61111, 0, 0, 0.525],\n    \"83\": [0, 0.61111, 0, 0, 0.525],\n    \"84\": [0, 0.61111, 0, 0, 0.525],\n    \"85\": [0, 0.61111, 0, 0, 0.525],\n    \"86\": [0, 0.61111, 0, 0, 0.525],\n    \"87\": [0, 0.61111, 0, 0, 0.525],\n    \"88\": [0, 0.61111, 0, 0, 0.525],\n    \"89\": [0, 0.61111, 0, 0, 0.525],\n    \"90\": [0, 0.61111, 0, 0, 0.525],\n    \"91\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"92\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"93\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"94\": [0, 0.61111, 0, 0, 0.525],\n    \"95\": [0.09514, 0, 0, 0, 0.525],\n    \"96\": [0, 0.61111, 0, 0, 0.525],\n    \"97\": [0, 0.43056, 0, 0, 0.525],\n    \"98\": [0, 0.61111, 0, 0, 0.525],\n    \"99\": [0, 0.43056, 0, 0, 0.525],\n    \"100\": [0, 0.61111, 0, 0, 0.525],\n    \"101\": [0, 0.43056, 0, 0, 0.525],\n    \"102\": [0, 0.61111, 0, 0, 0.525],\n    \"103\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"104\": [0, 0.61111, 0, 0, 0.525],\n    \"105\": [0, 0.61111, 0, 0, 0.525],\n    \"106\": [0.22222, 0.61111, 0, 0, 0.525],\n    \"107\": [0, 0.61111, 0, 0, 0.525],\n    \"108\": [0, 0.61111, 0, 0, 0.525],\n    \"109\": [0, 0.43056, 0, 0, 0.525],\n    \"110\": [0, 0.43056, 0, 0, 0.525],\n    \"111\": [0, 0.43056, 0, 0, 0.525],\n    \"112\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"113\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"114\": [0, 0.43056, 0, 0, 0.525],\n    \"115\": [0, 0.43056, 0, 0, 0.525],\n    \"116\": [0, 0.55358, 0, 0, 0.525],\n    \"117\": [0, 0.43056, 0, 0, 0.525],\n    \"118\": [0, 0.43056, 0, 0, 0.525],\n    \"119\": [0, 0.43056, 0, 0, 0.525],\n    \"120\": [0, 0.43056, 0, 0, 0.525],\n    \"121\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"122\": [0, 0.43056, 0, 0, 0.525],\n    \"123\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"124\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"125\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"126\": [0, 0.61111, 0, 0, 0.525],\n    \"127\": [0, 0.61111, 0, 0, 0.525],\n    \"160\": [0, 0, 0, 0, 0.525],\n    \"176\": [0, 0.61111, 0, 0, 0.525],\n    \"184\": [0.19445, 0, 0, 0, 0.525],\n    \"305\": [0, 0.43056, 0, 0, 0.525],\n    \"567\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"711\": [0, 0.56597, 0, 0, 0.525],\n    \"713\": [0, 0.56555, 0, 0, 0.525],\n    \"714\": [0, 0.61111, 0, 0, 0.525],\n    \"715\": [0, 0.61111, 0, 0, 0.525],\n    \"728\": [0, 0.61111, 0, 0, 0.525],\n    \"730\": [0, 0.61111, 0, 0, 0.525],\n    \"770\": [0, 0.61111, 0, 0, 0.525],\n    \"771\": [0, 0.61111, 0, 0, 0.525],\n    \"776\": [0, 0.61111, 0, 0, 0.525],\n    \"915\": [0, 0.61111, 0, 0, 0.525],\n    \"916\": [0, 0.61111, 0, 0, 0.525],\n    \"920\": [0, 0.61111, 0, 0, 0.525],\n    \"923\": [0, 0.61111, 0, 0, 0.525],\n    \"926\": [0, 0.61111, 0, 0, 0.525],\n    \"928\": [0, 0.61111, 0, 0, 0.525],\n    \"931\": [0, 0.61111, 0, 0, 0.525],\n    \"933\": [0, 0.61111, 0, 0, 0.525],\n    \"934\": [0, 0.61111, 0, 0, 0.525],\n    \"936\": [0, 0.61111, 0, 0, 0.525],\n    \"937\": [0, 0.61111, 0, 0, 0.525],\n    \"8216\": [0, 0.61111, 0, 0, 0.525],\n    \"8217\": [0, 0.61111, 0, 0, 0.525],\n    \"8242\": [0, 0.61111, 0, 0, 0.525],\n    \"9251\": [0.11111, 0.21944, 0, 0, 0.525]\n  }\n});\n;// CONCATENATED MODULE: ./src/fontMetrics.js\n\n\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n// In TeX, there are actually three sets of dimensions, one for each of\n// textstyle (size index 5 and higher: >=9pt), scriptstyle (size index 3 and 4:\n// 7-8pt), and scriptscriptstyle (size index 1 and 2: 5-6pt).  These are\n// provided in the arrays below, in that order.\n//\n// The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respectively.\n// This was determined by running the following script:\n//\n//     latex -interaction=nonstopmode \\\n//     '\\documentclass{article}\\usepackage{amsmath}\\begin{document}' \\\n//     '$a$ \\expandafter\\show\\the\\textfont2' \\\n//     '\\expandafter\\show\\the\\scriptfont2' \\\n//     '\\expandafter\\show\\the\\scriptscriptfont2' \\\n//     '\\stop'\n//\n// The metrics themselves were retrieved using the following commands:\n//\n//     tftopl cmsy10\n//     tftopl cmsy7\n//     tftopl cmsy5\n//\n// The output of each of these commands is quite lengthy.  The only part we\n// care about is the FONTDIMEN section. Each value is measured in EMs.\nconst sigmasAndXis = {\n  slant: [0.250, 0.250, 0.250],\n  // sigma1\n  space: [0.000, 0.000, 0.000],\n  // sigma2\n  stretch: [0.000, 0.000, 0.000],\n  // sigma3\n  shrink: [0.000, 0.000, 0.000],\n  // sigma4\n  xHeight: [0.431, 0.431, 0.431],\n  // sigma5\n  quad: [1.000, 1.171, 1.472],\n  // sigma6\n  extraSpace: [0.000, 0.000, 0.000],\n  // sigma7\n  num1: [0.677, 0.732, 0.925],\n  // sigma8\n  num2: [0.394, 0.384, 0.387],\n  // sigma9\n  num3: [0.444, 0.471, 0.504],\n  // sigma10\n  denom1: [0.686, 0.752, 1.025],\n  // sigma11\n  denom2: [0.345, 0.344, 0.532],\n  // sigma12\n  sup1: [0.413, 0.503, 0.504],\n  // sigma13\n  sup2: [0.363, 0.431, 0.404],\n  // sigma14\n  sup3: [0.289, 0.286, 0.294],\n  // sigma15\n  sub1: [0.150, 0.143, 0.200],\n  // sigma16\n  sub2: [0.247, 0.286, 0.400],\n  // sigma17\n  supDrop: [0.386, 0.353, 0.494],\n  // sigma18\n  subDrop: [0.050, 0.071, 0.100],\n  // sigma19\n  delim1: [2.390, 1.700, 1.980],\n  // sigma20\n  delim2: [1.010, 1.157, 1.420],\n  // sigma21\n  axisHeight: [0.250, 0.250, 0.250],\n  // sigma22\n  // These font metrics are extracted from TeX by using tftopl on cmex10.tfm;\n  // they correspond to the font parameters of the extension fonts (family 3).\n  // See the TeXbook, page 441. In AMSTeX, the extension fonts scale; to\n  // match cmex7, we'd use cmex7.tfm values for script and scriptscript\n  // values.\n  defaultRuleThickness: [0.04, 0.049, 0.049],\n  // xi8; cmex7: 0.049\n  bigOpSpacing1: [0.111, 0.111, 0.111],\n  // xi9\n  bigOpSpacing2: [0.166, 0.166, 0.166],\n  // xi10\n  bigOpSpacing3: [0.2, 0.2, 0.2],\n  // xi11\n  bigOpSpacing4: [0.6, 0.611, 0.611],\n  // xi12; cmex7: 0.611\n  bigOpSpacing5: [0.1, 0.143, 0.143],\n  // xi13; cmex7: 0.143\n  // The \\sqrt rule width is taken from the height of the surd character.\n  // Since we use the same font at all sizes, this thickness doesn't scale.\n  sqrtRuleThickness: [0.04, 0.04, 0.04],\n  // This value determines how large a pt is, for metrics which are defined\n  // in terms of pts.\n  // This value is also used in katex.scss; if you change it make sure the\n  // values match.\n  ptPerEm: [10.0, 10.0, 10.0],\n  // The space between adjacent `|` columns in an array definition. From\n  // `\\showthe\\doublerulesep` in LaTeX. Equals 2.0 / ptPerEm.\n  doubleRuleSep: [0.2, 0.2, 0.2],\n  // The width of separator lines in {array} environments. From\n  // `\\showthe\\arrayrulewidth` in LaTeX. Equals 0.4 / ptPerEm.\n  arrayRuleWidth: [0.04, 0.04, 0.04],\n  // Two values from LaTeX source2e:\n  fboxsep: [0.3, 0.3, 0.3],\n  //        3 pt / ptPerEm\n  fboxrule: [0.04, 0.04, 0.04] // 0.4 pt / ptPerEm\n\n}; // This map contains a mapping from font name and character code to character\n// metrics, including height, depth, italic correction, and skew (kern from the\n// character to the corresponding \\skewchar)\n// This map is generated via `make metrics`. It should not be changed manually.\n\n // These are very rough approximations.  We default to Times New Roman which\n// should have Latin-1 and Cyrillic characters, but may not depending on the\n// operating system.  The metrics do not account for extra height from the\n// accents.  In the case of Cyrillic characters which have both ascenders and\n// descenders we prefer approximations with ascenders, primarily to prevent\n// the fraction bar or root line from intersecting the glyph.\n// TODO(kevinb) allow union of multiple glyph metrics for better accuracy.\n\nconst extraCharacterMap = {\n  // Latin-1\n  'Å': 'A',\n  'Ð': 'D',\n  'Þ': 'o',\n  'å': 'a',\n  'ð': 'd',\n  'þ': 'o',\n  // Cyrillic\n  'А': 'A',\n  'Б': 'B',\n  'В': 'B',\n  'Г': 'F',\n  'Д': 'A',\n  'Е': 'E',\n  'Ж': 'K',\n  'З': '3',\n  'И': 'N',\n  'Й': 'N',\n  'К': 'K',\n  'Л': 'N',\n  'М': 'M',\n  'Н': 'H',\n  'О': 'O',\n  'П': 'N',\n  'Р': 'P',\n  'С': 'C',\n  'Т': 'T',\n  'У': 'y',\n  'Ф': 'O',\n  'Х': 'X',\n  'Ц': 'U',\n  'Ч': 'h',\n  'Ш': 'W',\n  'Щ': 'W',\n  'Ъ': 'B',\n  'Ы': 'X',\n  'Ь': 'B',\n  'Э': '3',\n  'Ю': 'X',\n  'Я': 'R',\n  'а': 'a',\n  'б': 'b',\n  'в': 'a',\n  'г': 'r',\n  'д': 'y',\n  'е': 'e',\n  'ж': 'm',\n  'з': 'e',\n  'и': 'n',\n  'й': 'n',\n  'к': 'n',\n  'л': 'n',\n  'м': 'm',\n  'н': 'n',\n  'о': 'o',\n  'п': 'n',\n  'р': 'p',\n  'с': 'c',\n  'т': 'o',\n  'у': 'y',\n  'ф': 'b',\n  'х': 'x',\n  'ц': 'n',\n  'ч': 'n',\n  'ш': 'w',\n  'щ': 'w',\n  'ъ': 'a',\n  'ы': 'm',\n  'ь': 'a',\n  'э': 'e',\n  'ю': 'm',\n  'я': 'r'\n};\n\n/**\n * This function adds new font metrics to default metricMap\n * It can also override existing metrics\n */\nfunction setFontMetrics(fontName, metrics) {\n  fontMetricsData[fontName] = metrics;\n}\n/**\n * This function is a convenience function for looking up information in the\n * metricMap table. It takes a character as a string, and a font.\n *\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\n * built using `Make extended_metrics`.\n */\n\nfunction getCharacterMetrics(character, font, mode) {\n  if (!fontMetricsData[font]) {\n    throw new Error(\"Font metrics not found for font: \" + font + \".\");\n  }\n\n  let ch = character.charCodeAt(0);\n  let metrics = fontMetricsData[font][ch];\n\n  if (!metrics && character[0] in extraCharacterMap) {\n    ch = extraCharacterMap[character[0]].charCodeAt(0);\n    metrics = fontMetricsData[font][ch];\n  }\n\n  if (!metrics && mode === 'text') {\n    // We don't typically have font metrics for Asian scripts.\n    // But since we support them in text mode, we need to return\n    // some sort of metrics.\n    // So if the character is in a script we support but we\n    // don't have metrics for it, just use the metrics for\n    // the Latin capital letter M. This is close enough because\n    // we (currently) only care about the height of the glyph\n    // not its width.\n    if (supportedCodepoint(ch)) {\n      metrics = fontMetricsData[font][77]; // 77 is the charcode for 'M'\n    }\n  }\n\n  if (metrics) {\n    return {\n      depth: metrics[0],\n      height: metrics[1],\n      italic: metrics[2],\n      skew: metrics[3],\n      width: metrics[4]\n    };\n  }\n}\nconst fontMetricsBySizeIndex = {};\n/**\n * Get the font metrics for a given size.\n */\n\nfunction getGlobalMetrics(size) {\n  let sizeIndex;\n\n  if (size >= 5) {\n    sizeIndex = 0;\n  } else if (size >= 3) {\n    sizeIndex = 1;\n  } else {\n    sizeIndex = 2;\n  }\n\n  if (!fontMetricsBySizeIndex[sizeIndex]) {\n    const metrics = fontMetricsBySizeIndex[sizeIndex] = {\n      cssEmPerMu: sigmasAndXis.quad[sizeIndex] / 18\n    };\n\n    for (const key in sigmasAndXis) {\n      if (sigmasAndXis.hasOwnProperty(key)) {\n        metrics[key] = sigmasAndXis[key][sizeIndex];\n      }\n    }\n  }\n\n  return fontMetricsBySizeIndex[sizeIndex];\n}\n;// CONCATENATED MODULE: ./src/Options.js\n/**\n * This file contains information about the options that the Parser carries\n * around with it while parsing. Data is held in an `Options` object, and when\n * recursing, a new `Options` object can be created with the `.with*` and\n * `.reset` functions.\n */\n\nconst sizeStyleMap = [// Each element contains [textsize, scriptsize, scriptscriptsize].\n// The size mappings are taken from TeX with \\normalsize=10pt.\n[1, 1, 1], // size1: [5, 5, 5]              \\tiny\n[2, 1, 1], // size2: [6, 5, 5]\n[3, 1, 1], // size3: [7, 5, 5]              \\scriptsize\n[4, 2, 1], // size4: [8, 6, 5]              \\footnotesize\n[5, 2, 1], // size5: [9, 6, 5]              \\small\n[6, 3, 1], // size6: [10, 7, 5]             \\normalsize\n[7, 4, 2], // size7: [12, 8, 6]             \\large\n[8, 6, 3], // size8: [14.4, 10, 7]          \\Large\n[9, 7, 6], // size9: [17.28, 12, 10]        \\LARGE\n[10, 8, 7], // size10: [20.74, 14.4, 12]     \\huge\n[11, 10, 9] // size11: [24.88, 20.74, 17.28] \\HUGE\n];\nconst sizeMultipliers = [// fontMetrics.js:getGlobalMetrics also uses size indexes, so if\n// you change size indexes, change that function.\n0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.2, 1.44, 1.728, 2.074, 2.488];\n\nconst sizeAtStyle = function (size, style) {\n  return style.size < 2 ? size : sizeStyleMap[size - 1][style.size - 1];\n}; // In these types, \"\" (empty string) means \"no change\".\n\n\n/**\n * This is the main options class. It contains the current style, size, color,\n * and font.\n *\n * Options objects should not be modified. To create a new Options with\n * different properties, call a `.having*` method.\n */\nclass Options {\n  // A font family applies to a group of fonts (i.e. SansSerif), while a font\n  // represents a specific font (i.e. SansSerif Bold).\n  // See: https://tex.stackexchange.com/questions/22350/difference-between-textrm-and-mathrm\n\n  /**\n   * The base size index.\n   */\n  constructor(data) {\n    this.style = void 0;\n    this.color = void 0;\n    this.size = void 0;\n    this.textSize = void 0;\n    this.phantom = void 0;\n    this.font = void 0;\n    this.fontFamily = void 0;\n    this.fontWeight = void 0;\n    this.fontShape = void 0;\n    this.sizeMultiplier = void 0;\n    this.maxSize = void 0;\n    this.minRuleThickness = void 0;\n    this._fontMetrics = void 0;\n    this.style = data.style;\n    this.color = data.color;\n    this.size = data.size || Options.BASESIZE;\n    this.textSize = data.textSize || this.size;\n    this.phantom = !!data.phantom;\n    this.font = data.font || \"\";\n    this.fontFamily = data.fontFamily || \"\";\n    this.fontWeight = data.fontWeight || '';\n    this.fontShape = data.fontShape || '';\n    this.sizeMultiplier = sizeMultipliers[this.size - 1];\n    this.maxSize = data.maxSize;\n    this.minRuleThickness = data.minRuleThickness;\n    this._fontMetrics = undefined;\n  }\n  /**\n   * Returns a new options object with the same properties as \"this\".  Properties\n   * from \"extension\" will be copied to the new options object.\n   */\n\n\n  extend(extension) {\n    const data = {\n      style: this.style,\n      size: this.size,\n      textSize: this.textSize,\n      color: this.color,\n      phantom: this.phantom,\n      font: this.font,\n      fontFamily: this.fontFamily,\n      fontWeight: this.fontWeight,\n      fontShape: this.fontShape,\n      maxSize: this.maxSize,\n      minRuleThickness: this.minRuleThickness\n    };\n\n    for (const key in extension) {\n      if (extension.hasOwnProperty(key)) {\n        data[key] = extension[key];\n      }\n    }\n\n    return new Options(data);\n  }\n  /**\n   * Return an options object with the given style. If `this.style === style`,\n   * returns `this`.\n   */\n\n\n  havingStyle(style) {\n    if (this.style === style) {\n      return this;\n    } else {\n      return this.extend({\n        style: style,\n        size: sizeAtStyle(this.textSize, style)\n      });\n    }\n  }\n  /**\n   * Return an options object with a cramped version of the current style. If\n   * the current style is cramped, returns `this`.\n   */\n\n\n  havingCrampedStyle() {\n    return this.havingStyle(this.style.cramp());\n  }\n  /**\n   * Return an options object with the given size and in at least `\\textstyle`.\n   * Returns `this` if appropriate.\n   */\n\n\n  havingSize(size) {\n    if (this.size === size && this.textSize === size) {\n      return this;\n    } else {\n      return this.extend({\n        style: this.style.text(),\n        size: size,\n        textSize: size,\n        sizeMultiplier: sizeMultipliers[size - 1]\n      });\n    }\n  }\n  /**\n   * Like `this.havingSize(BASESIZE).havingStyle(style)`. If `style` is omitted,\n   * changes to at least `\\textstyle`.\n   */\n\n\n  havingBaseStyle(style) {\n    style = style || this.style.text();\n    const wantSize = sizeAtStyle(Options.BASESIZE, style);\n\n    if (this.size === wantSize && this.textSize === Options.BASESIZE && this.style === style) {\n      return this;\n    } else {\n      return this.extend({\n        style: style,\n        size: wantSize\n      });\n    }\n  }\n  /**\n   * Remove the effect of sizing changes such as \\Huge.\n   * Keep the effect of the current style, such as \\scriptstyle.\n   */\n\n\n  havingBaseSizing() {\n    let size;\n\n    switch (this.style.id) {\n      case 4:\n      case 5:\n        size = 3; // normalsize in scriptstyle\n\n        break;\n\n      case 6:\n      case 7:\n        size = 1; // normalsize in scriptscriptstyle\n\n        break;\n\n      default:\n        size = 6;\n      // normalsize in textstyle or displaystyle\n    }\n\n    return this.extend({\n      style: this.style.text(),\n      size: size\n    });\n  }\n  /**\n   * Create a new options object with the given color.\n   */\n\n\n  withColor(color) {\n    return this.extend({\n      color: color\n    });\n  }\n  /**\n   * Create a new options object with \"phantom\" set to true.\n   */\n\n\n  withPhantom() {\n    return this.extend({\n      phantom: true\n    });\n  }\n  /**\n   * Creates a new options object with the given math font or old text font.\n   * @type {[type]}\n   */\n\n\n  withFont(font) {\n    return this.extend({\n      font\n    });\n  }\n  /**\n   * Create a new options objects with the given fontFamily.\n   */\n\n\n  withTextFontFamily(fontFamily) {\n    return this.extend({\n      fontFamily,\n      font: \"\"\n    });\n  }\n  /**\n   * Creates a new options object with the given font weight\n   */\n\n\n  withTextFontWeight(fontWeight) {\n    return this.extend({\n      fontWeight,\n      font: \"\"\n    });\n  }\n  /**\n   * Creates a new options object with the given font weight\n   */\n\n\n  withTextFontShape(fontShape) {\n    return this.extend({\n      fontShape,\n      font: \"\"\n    });\n  }\n  /**\n   * Return the CSS sizing classes required to switch from enclosing options\n   * `oldOptions` to `this`. Returns an array of classes.\n   */\n\n\n  sizingClasses(oldOptions) {\n    if (oldOptions.size !== this.size) {\n      return [\"sizing\", \"reset-size\" + oldOptions.size, \"size\" + this.size];\n    } else {\n      return [];\n    }\n  }\n  /**\n   * Return the CSS sizing classes required to switch to the base size. Like\n   * `this.havingSize(BASESIZE).sizingClasses(this)`.\n   */\n\n\n  baseSizingClasses() {\n    if (this.size !== Options.BASESIZE) {\n      return [\"sizing\", \"reset-size\" + this.size, \"size\" + Options.BASESIZE];\n    } else {\n      return [];\n    }\n  }\n  /**\n   * Return the font metrics for this size.\n   */\n\n\n  fontMetrics() {\n    if (!this._fontMetrics) {\n      this._fontMetrics = getGlobalMetrics(this.size);\n    }\n\n    return this._fontMetrics;\n  }\n  /**\n   * Gets the CSS color of the current options object\n   */\n\n\n  getColor() {\n    if (this.phantom) {\n      return \"transparent\";\n    } else {\n      return this.color;\n    }\n  }\n\n}\n\nOptions.BASESIZE = 6;\n/* harmony default export */ var src_Options = (Options);\n;// CONCATENATED MODULE: ./src/units.js\n/**\n * This file does conversion between units.  In particular, it provides\n * calculateSize to convert other units into ems.\n */\n\n // This table gives the number of TeX pts in one of each *absolute* TeX unit.\n// Thus, multiplying a length by this number converts the length from units\n// into pts.  Dividing the result by ptPerEm gives the number of ems\n// *assuming* a font size of ptPerEm (normal size, normal style).\n\nconst ptPerUnit = {\n  // https://en.wikibooks.org/wiki/LaTeX/Lengths and\n  // https://tex.stackexchange.com/a/8263\n  \"pt\": 1,\n  // TeX point\n  \"mm\": 7227 / 2540,\n  // millimeter\n  \"cm\": 7227 / 254,\n  // centimeter\n  \"in\": 72.27,\n  // inch\n  \"bp\": 803 / 800,\n  // big (PostScript) points\n  \"pc\": 12,\n  // pica\n  \"dd\": 1238 / 1157,\n  // didot\n  \"cc\": 14856 / 1157,\n  // cicero (12 didot)\n  \"nd\": 685 / 642,\n  // new didot\n  \"nc\": 1370 / 107,\n  // new cicero (12 new didot)\n  \"sp\": 1 / 65536,\n  // scaled point (TeX's internal smallest unit)\n  // https://tex.stackexchange.com/a/41371\n  \"px\": 803 / 800 // \\pdfpxdimen defaults to 1 bp in pdfTeX and LuaTeX\n\n}; // Dictionary of relative units, for fast validity testing.\n\nconst relativeUnit = {\n  \"ex\": true,\n  \"em\": true,\n  \"mu\": true\n};\n\n/**\n * Determine whether the specified unit (either a string defining the unit\n * or a \"size\" parse node containing a unit field) is valid.\n */\nconst validUnit = function (unit) {\n  if (typeof unit !== \"string\") {\n    unit = unit.unit;\n  }\n\n  return unit in ptPerUnit || unit in relativeUnit || unit === \"ex\";\n};\n/*\n * Convert a \"size\" parse node (with numeric \"number\" and string \"unit\" fields,\n * as parsed by functions.js argType \"size\") into a CSS em value for the\n * current style/scale.  `options` gives the current options.\n */\n\nconst calculateSize = function (sizeValue, options) {\n  let scale;\n\n  if (sizeValue.unit in ptPerUnit) {\n    // Absolute units\n    scale = ptPerUnit[sizeValue.unit] // Convert unit to pt\n    / options.fontMetrics().ptPerEm // Convert pt to CSS em\n    / options.sizeMultiplier; // Unscale to make absolute units\n  } else if (sizeValue.unit === \"mu\") {\n    // `mu` units scale with scriptstyle/scriptscriptstyle.\n    scale = options.fontMetrics().cssEmPerMu;\n  } else {\n    // Other relative units always refer to the *textstyle* font\n    // in the current size.\n    let unitOptions;\n\n    if (options.style.isTight()) {\n      // isTight() means current style is script/scriptscript.\n      unitOptions = options.havingStyle(options.style.text());\n    } else {\n      unitOptions = options;\n    } // TODO: In TeX these units are relative to the quad of the current\n    // *text* font, e.g. cmr10. KaTeX instead uses values from the\n    // comparably-sized *Computer Modern symbol* font. At 10pt, these\n    // match. At 7pt and 5pt, they differ: cmr7=1.138894, cmsy7=1.170641;\n    // cmr5=1.361133, cmsy5=1.472241. Consider $\\scriptsize a\\kern1emb$.\n    // TeX \\showlists shows a kern of 1.13889 * fontsize;\n    // KaTeX shows a kern of 1.171 * fontsize.\n\n\n    if (sizeValue.unit === \"ex\") {\n      scale = unitOptions.fontMetrics().xHeight;\n    } else if (sizeValue.unit === \"em\") {\n      scale = unitOptions.fontMetrics().quad;\n    } else {\n      throw new src_ParseError(\"Invalid unit: '\" + sizeValue.unit + \"'\");\n    }\n\n    if (unitOptions !== options) {\n      scale *= unitOptions.sizeMultiplier / options.sizeMultiplier;\n    }\n  }\n\n  return Math.min(sizeValue.number * scale, options.maxSize);\n};\n/**\n * Round `n` to 4 decimal places, or to the nearest 1/10,000th em. See\n * https://github.com/KaTeX/KaTeX/pull/2460.\n */\n\nconst makeEm = function (n) {\n  return +n.toFixed(4) + \"em\";\n};\n;// CONCATENATED MODULE: ./src/domTree.js\n/**\n * These objects store the data about the DOM nodes we create, as well as some\n * extra data. They can then be transformed into real DOM nodes with the\n * `toNode` function or HTML markup using `toMarkup`. They are useful for both\n * storing extra properties on the nodes, as well as providing a way to easily\n * work with the DOM.\n *\n * Similar functions for working with MathML nodes exist in mathMLTree.js.\n *\n * TODO: refactor `span` and `anchor` into common superclass when\n * target environments support class inheritance\n */\n\n\n\n\n\n\n\n/**\n * Create an HTML className based on a list of classes. In addition to joining\n * with spaces, we also remove empty classes.\n */\nconst createClass = function (classes) {\n  return classes.filter(cls => cls).join(\" \");\n};\n\nconst initNode = function (classes, options, style) {\n  this.classes = classes || [];\n  this.attributes = {};\n  this.height = 0;\n  this.depth = 0;\n  this.maxFontSize = 0;\n  this.style = style || {};\n\n  if (options) {\n    if (options.style.isTight()) {\n      this.classes.push(\"mtight\");\n    }\n\n    const color = options.getColor();\n\n    if (color) {\n      this.style.color = color;\n    }\n  }\n};\n/**\n * Convert into an HTML node\n */\n\n\nconst toNode = function (tagName) {\n  const node = document.createElement(tagName); // Apply the class\n\n  node.className = createClass(this.classes); // Apply inline styles\n\n  for (const style in this.style) {\n    if (this.style.hasOwnProperty(style)) {\n      // $FlowFixMe Flow doesn't seem to understand span.style's type.\n      node.style[style] = this.style[style];\n    }\n  } // Apply attributes\n\n\n  for (const attr in this.attributes) {\n    if (this.attributes.hasOwnProperty(attr)) {\n      node.setAttribute(attr, this.attributes[attr]);\n    }\n  } // Append the children, also as HTML nodes\n\n\n  for (let i = 0; i < this.children.length; i++) {\n    node.appendChild(this.children[i].toNode());\n  }\n\n  return node;\n};\n/**\n * https://w3c.github.io/html-reference/syntax.html#syntax-attributes\n *\n * > Attribute Names must consist of one or more characters\n * other than the space characters, U+0000 NULL,\n * '\"', \"'\", \">\", \"/\", \"=\", the control characters,\n * and any characters that are not defined by Unicode.\n */\n\n\nconst invalidAttributeNameRegex = /[\\s\"'>/=\\x00-\\x1f]/;\n/**\n * Convert into an HTML markup string\n */\n\nconst toMarkup = function (tagName) {\n  let markup = \"<\" + tagName; // Add the class\n\n  if (this.classes.length) {\n    markup += \" class=\\\"\" + utils.escape(createClass(this.classes)) + \"\\\"\";\n  }\n\n  let styles = \"\"; // Add the styles, after hyphenation\n\n  for (const style in this.style) {\n    if (this.style.hasOwnProperty(style)) {\n      styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n    }\n  }\n\n  if (styles) {\n    markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n  } // Add the attributes\n\n\n  for (const attr in this.attributes) {\n    if (this.attributes.hasOwnProperty(attr)) {\n      if (invalidAttributeNameRegex.test(attr)) {\n        throw new src_ParseError(\"Invalid attribute name '\" + attr + \"'\");\n      }\n\n      markup += \" \" + attr + \"=\\\"\" + utils.escape(this.attributes[attr]) + \"\\\"\";\n    }\n  }\n\n  markup += \">\"; // Add the markup of the children, also as markup\n\n  for (let i = 0; i < this.children.length; i++) {\n    markup += this.children[i].toMarkup();\n  }\n\n  markup += \"</\" + tagName + \">\";\n  return markup;\n}; // Making the type below exact with all optional fields doesn't work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n// This type does not include all CSS properties. Additional properties should\n// be added as needed.\n\n\n/**\n * This node represents a span node, with a className, a list of children, and\n * an inline style. It also contains information about its height, depth, and\n * maxFontSize.\n *\n * Represents two types with different uses: SvgSpan to wrap an SVG and DomSpan\n * otherwise. This typesafety is important when HTML builders access a span's\n * children.\n */\nclass Span {\n  constructor(classes, children, options, style) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.width = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    initNode.call(this, classes, options, style);\n    this.children = children || [];\n  }\n  /**\n   * Sets an arbitrary attribute on the span. Warning: use this wisely. Not\n   * all browsers support attributes the same, and having too many custom\n   * attributes is probably bad.\n   */\n\n\n  setAttribute(attribute, value) {\n    this.attributes[attribute] = value;\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n\n  toNode() {\n    return toNode.call(this, \"span\");\n  }\n\n  toMarkup() {\n    return toMarkup.call(this, \"span\");\n  }\n\n}\n/**\n * This node represents an anchor (<a>) element with a hyperlink.  See `span`\n * for further details.\n */\n\nclass Anchor {\n  constructor(href, classes, children, options) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    initNode.call(this, classes, options);\n    this.children = children || [];\n    this.setAttribute('href', href);\n  }\n\n  setAttribute(attribute, value) {\n    this.attributes[attribute] = value;\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n\n  toNode() {\n    return toNode.call(this, \"a\");\n  }\n\n  toMarkup() {\n    return toMarkup.call(this, \"a\");\n  }\n\n}\n/**\n * This node represents an image embed (<img>) element.\n */\n\nclass Img {\n  constructor(src, alt, style) {\n    this.src = void 0;\n    this.alt = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    this.alt = alt;\n    this.src = src;\n    this.classes = [\"mord\"];\n    this.style = style;\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n\n  toNode() {\n    const node = document.createElement(\"img\");\n    node.src = this.src;\n    node.alt = this.alt;\n    node.className = \"mord\"; // Apply inline styles\n\n    for (const style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        // $FlowFixMe\n        node.style[style] = this.style[style];\n      }\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    let markup = \"<img src=\\\"\" + utils.escape(this.src) + \"\\\"\" + (\" alt=\\\"\" + utils.escape(this.alt) + \"\\\"\"); // Add the styles, after hyphenation\n\n    let styles = \"\";\n\n    for (const style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n      }\n    }\n\n    if (styles) {\n      markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    markup += \"'/>\";\n    return markup;\n  }\n\n}\nconst iCombinations = {\n  'î': '\\u0131\\u0302',\n  'ï': '\\u0131\\u0308',\n  'í': '\\u0131\\u0301',\n  // 'ī': '\\u0131\\u0304', // enable when we add Extended Latin\n  'ì': '\\u0131\\u0300'\n};\n/**\n * A symbol node contains information about a single symbol. It either renders\n * to a single text node, or a span with a single text node in it, depending on\n * whether it has CSS classes, styles, or needs italic correction.\n */\n\nclass SymbolNode {\n  constructor(text, height, depth, italic, skew, width, classes, style) {\n    this.text = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.italic = void 0;\n    this.skew = void 0;\n    this.width = void 0;\n    this.maxFontSize = void 0;\n    this.classes = void 0;\n    this.style = void 0;\n    this.text = text;\n    this.height = height || 0;\n    this.depth = depth || 0;\n    this.italic = italic || 0;\n    this.skew = skew || 0;\n    this.width = width || 0;\n    this.classes = classes || [];\n    this.style = style || {};\n    this.maxFontSize = 0; // Mark text from non-Latin scripts with specific classes so that we\n    // can specify which fonts to use.  This allows us to render these\n    // characters with a serif font in situations where the browser would\n    // either default to a sans serif or render a placeholder character.\n    // We use CSS class names like cjk_fallback, hangul_fallback and\n    // brahmic_fallback. See ./unicodeScripts.js for the set of possible\n    // script names\n\n    const script = scriptFromCodepoint(this.text.charCodeAt(0));\n\n    if (script) {\n      this.classes.push(script + \"_fallback\");\n    }\n\n    if (/[îïíì]/.test(this.text)) {\n      // add ī when we add Extended Latin\n      this.text = iCombinations[this.text];\n    }\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n  /**\n   * Creates a text node or span from a symbol node. Note that a span is only\n   * created if it is needed.\n   */\n\n\n  toNode() {\n    const node = document.createTextNode(this.text);\n    let span = null;\n\n    if (this.italic > 0) {\n      span = document.createElement(\"span\");\n      span.style.marginRight = makeEm(this.italic);\n    }\n\n    if (this.classes.length > 0) {\n      span = span || document.createElement(\"span\");\n      span.className = createClass(this.classes);\n    }\n\n    for (const style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        span = span || document.createElement(\"span\"); // $FlowFixMe Flow doesn't seem to understand span.style's type.\n\n        span.style[style] = this.style[style];\n      }\n    }\n\n    if (span) {\n      span.appendChild(node);\n      return span;\n    } else {\n      return node;\n    }\n  }\n  /**\n   * Creates markup for a symbol node.\n   */\n\n\n  toMarkup() {\n    // TODO(alpert): More duplication than I'd like from\n    // span.prototype.toMarkup and symbolNode.prototype.toNode...\n    let needsSpan = false;\n    let markup = \"<span\";\n\n    if (this.classes.length) {\n      needsSpan = true;\n      markup += \" class=\\\"\";\n      markup += utils.escape(createClass(this.classes));\n      markup += \"\\\"\";\n    }\n\n    let styles = \"\";\n\n    if (this.italic > 0) {\n      styles += \"margin-right:\" + this.italic + \"em;\";\n    }\n\n    for (const style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n      }\n    }\n\n    if (styles) {\n      needsSpan = true;\n      markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    const escaped = utils.escape(this.text);\n\n    if (needsSpan) {\n      markup += \">\";\n      markup += escaped;\n      markup += \"</span>\";\n      return markup;\n    } else {\n      return escaped;\n    }\n  }\n\n}\n/**\n * SVG nodes are used to render stretchy wide elements.\n */\n\nclass SvgNode {\n  constructor(children, attributes) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.children = children || [];\n    this.attributes = attributes || {};\n  }\n\n  toNode() {\n    const svgNS = \"http://www.w3.org/2000/svg\";\n    const node = document.createElementNS(svgNS, \"svg\"); // Apply attributes\n\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    for (let i = 0; i < this.children.length; i++) {\n      node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    let markup = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\"; // Apply attributes\n\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"=\\\"\" + utils.escape(this.attributes[attr]) + \"\\\"\";\n      }\n    }\n\n    markup += \">\";\n\n    for (let i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</svg>\";\n    return markup;\n  }\n\n}\nclass PathNode {\n  constructor(pathName, alternate) {\n    this.pathName = void 0;\n    this.alternate = void 0;\n    this.pathName = pathName;\n    this.alternate = alternate; // Used only for \\sqrt, \\phase, & tall delims\n  }\n\n  toNode() {\n    const svgNS = \"http://www.w3.org/2000/svg\";\n    const node = document.createElementNS(svgNS, \"path\");\n\n    if (this.alternate) {\n      node.setAttribute(\"d\", this.alternate);\n    } else {\n      node.setAttribute(\"d\", path[this.pathName]);\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    if (this.alternate) {\n      return \"<path d=\\\"\" + utils.escape(this.alternate) + \"\\\"/>\";\n    } else {\n      return \"<path d=\\\"\" + utils.escape(path[this.pathName]) + \"\\\"/>\";\n    }\n  }\n\n}\nclass LineNode {\n  constructor(attributes) {\n    this.attributes = void 0;\n    this.attributes = attributes || {};\n  }\n\n  toNode() {\n    const svgNS = \"http://www.w3.org/2000/svg\";\n    const node = document.createElementNS(svgNS, \"line\"); // Apply attributes\n\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    let markup = \"<line\";\n\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"=\\\"\" + utils.escape(this.attributes[attr]) + \"\\\"\";\n      }\n    }\n\n    markup += \"/>\";\n    return markup;\n  }\n\n}\nfunction assertSymbolDomNode(group) {\n  if (group instanceof SymbolNode) {\n    return group;\n  } else {\n    throw new Error(\"Expected symbolNode but got \" + String(group) + \".\");\n  }\n}\nfunction assertSpan(group) {\n  if (group instanceof Span) {\n    return group;\n  } else {\n    throw new Error(\"Expected span<HtmlDomNode> but got \" + String(group) + \".\");\n  }\n}\n;// CONCATENATED MODULE: ./src/symbols.js\n/**\n * This file holds a list of all no-argument functions and single-character\n * symbols (like 'a' or ';').\n *\n * For each of the symbols, there are three properties they can have:\n * - font (required): the font to be used for this symbol. Either \"main\" (the\n     normal font), or \"ams\" (the ams fonts).\n * - group (required): the ParseNode group type the symbol should have (i.e.\n     \"textord\", \"mathord\", etc).\n     See https://github.com/KaTeX/KaTeX/wiki/Examining-TeX#group-types\n * - replace: the character that this symbol or function should be\n *   replaced with (i.e. \"\\phi\" has a replace value of \"\\u03d5\", the phi\n *   character in the main font).\n *\n * The outermost map in the table indicates what mode the symbols should be\n * accepted in (e.g. \"math\" or \"text\").\n */\n// Some of these have a \"-token\" suffix since these are also used as `ParseNode`\n// types for raw text tokens, and we want to avoid conflicts with higher-level\n// `ParseNode` types. These `ParseNode`s are constructed within `Parser` by\n// looking up the `symbols` map.\nconst ATOMS = {\n  \"bin\": 1,\n  \"close\": 1,\n  \"inner\": 1,\n  \"open\": 1,\n  \"punct\": 1,\n  \"rel\": 1\n};\nconst NON_ATOMS = {\n  \"accent-token\": 1,\n  \"mathord\": 1,\n  \"op-token\": 1,\n  \"spacing\": 1,\n  \"textord\": 1\n};\nconst symbols = {\n  \"math\": {},\n  \"text\": {}\n};\n/* harmony default export */ var src_symbols = (symbols);\n/** `acceptUnicodeChar = true` is only applicable if `replace` is set. */\n\nfunction defineSymbol(mode, font, group, replace, name, acceptUnicodeChar) {\n  symbols[mode][name] = {\n    font,\n    group,\n    replace\n  };\n\n  if (acceptUnicodeChar && replace) {\n    symbols[mode][replace] = symbols[mode][name];\n  }\n} // Some abbreviations for commonly used strings.\n// This helps minify the code, and also spotting typos using jshint.\n// modes:\n\nconst math = \"math\";\nconst symbols_text = \"text\"; // fonts:\n\nconst main = \"main\";\nconst ams = \"ams\"; // groups:\n\nconst accent = \"accent-token\";\nconst bin = \"bin\";\nconst symbols_close = \"close\";\nconst inner = \"inner\";\nconst mathord = \"mathord\";\nconst op = \"op-token\";\nconst symbols_open = \"open\";\nconst punct = \"punct\";\nconst rel = \"rel\";\nconst spacing = \"spacing\";\nconst textord = \"textord\"; // Now comes the symbol table\n// Relation Symbols\n\ndefineSymbol(math, main, rel, \"\\u2261\", \"\\\\equiv\", true);\ndefineSymbol(math, main, rel, \"\\u227a\", \"\\\\prec\", true);\ndefineSymbol(math, main, rel, \"\\u227b\", \"\\\\succ\", true);\ndefineSymbol(math, main, rel, \"\\u223c\", \"\\\\sim\", true);\ndefineSymbol(math, main, rel, \"\\u22a5\", \"\\\\perp\");\ndefineSymbol(math, main, rel, \"\\u2aaf\", \"\\\\preceq\", true);\ndefineSymbol(math, main, rel, \"\\u2ab0\", \"\\\\succeq\", true);\ndefineSymbol(math, main, rel, \"\\u2243\", \"\\\\simeq\", true);\ndefineSymbol(math, main, rel, \"\\u2223\", \"\\\\mid\", true);\ndefineSymbol(math, main, rel, \"\\u226a\", \"\\\\ll\", true);\ndefineSymbol(math, main, rel, \"\\u226b\", \"\\\\gg\", true);\ndefineSymbol(math, main, rel, \"\\u224d\", \"\\\\asymp\", true);\ndefineSymbol(math, main, rel, \"\\u2225\", \"\\\\parallel\");\ndefineSymbol(math, main, rel, \"\\u22c8\", \"\\\\bowtie\", true);\ndefineSymbol(math, main, rel, \"\\u2323\", \"\\\\smile\", true);\ndefineSymbol(math, main, rel, \"\\u2291\", \"\\\\sqsubseteq\", true);\ndefineSymbol(math, main, rel, \"\\u2292\", \"\\\\sqsupseteq\", true);\ndefineSymbol(math, main, rel, \"\\u2250\", \"\\\\doteq\", true);\ndefineSymbol(math, main, rel, \"\\u2322\", \"\\\\frown\", true);\ndefineSymbol(math, main, rel, \"\\u220b\", \"\\\\ni\", true);\ndefineSymbol(math, main, rel, \"\\u221d\", \"\\\\propto\", true);\ndefineSymbol(math, main, rel, \"\\u22a2\", \"\\\\vdash\", true);\ndefineSymbol(math, main, rel, \"\\u22a3\", \"\\\\dashv\", true);\ndefineSymbol(math, main, rel, \"\\u220b\", \"\\\\owns\"); // Punctuation\n\ndefineSymbol(math, main, punct, \"\\u002e\", \"\\\\ldotp\");\ndefineSymbol(math, main, punct, \"\\u22c5\", \"\\\\cdotp\"); // Misc Symbols\n\ndefineSymbol(math, main, textord, \"\\u0023\", \"\\\\#\");\ndefineSymbol(symbols_text, main, textord, \"\\u0023\", \"\\\\#\");\ndefineSymbol(math, main, textord, \"\\u0026\", \"\\\\&\");\ndefineSymbol(symbols_text, main, textord, \"\\u0026\", \"\\\\&\");\ndefineSymbol(math, main, textord, \"\\u2135\", \"\\\\aleph\", true);\ndefineSymbol(math, main, textord, \"\\u2200\", \"\\\\forall\", true);\ndefineSymbol(math, main, textord, \"\\u210f\", \"\\\\hbar\", true);\ndefineSymbol(math, main, textord, \"\\u2203\", \"\\\\exists\", true);\ndefineSymbol(math, main, textord, \"\\u2207\", \"\\\\nabla\", true);\ndefineSymbol(math, main, textord, \"\\u266d\", \"\\\\flat\", true);\ndefineSymbol(math, main, textord, \"\\u2113\", \"\\\\ell\", true);\ndefineSymbol(math, main, textord, \"\\u266e\", \"\\\\natural\", true);\ndefineSymbol(math, main, textord, \"\\u2663\", \"\\\\clubsuit\", true);\ndefineSymbol(math, main, textord, \"\\u2118\", \"\\\\wp\", true);\ndefineSymbol(math, main, textord, \"\\u266f\", \"\\\\sharp\", true);\ndefineSymbol(math, main, textord, \"\\u2662\", \"\\\\diamondsuit\", true);\ndefineSymbol(math, main, textord, \"\\u211c\", \"\\\\Re\", true);\ndefineSymbol(math, main, textord, \"\\u2661\", \"\\\\heartsuit\", true);\ndefineSymbol(math, main, textord, \"\\u2111\", \"\\\\Im\", true);\ndefineSymbol(math, main, textord, \"\\u2660\", \"\\\\spadesuit\", true);\ndefineSymbol(math, main, textord, \"\\u00a7\", \"\\\\S\", true);\ndefineSymbol(symbols_text, main, textord, \"\\u00a7\", \"\\\\S\");\ndefineSymbol(math, main, textord, \"\\u00b6\", \"\\\\P\", true);\ndefineSymbol(symbols_text, main, textord, \"\\u00b6\", \"\\\\P\"); // Math and Text\n\ndefineSymbol(math, main, textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(symbols_text, main, textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(symbols_text, main, textord, \"\\u2020\", \"\\\\textdagger\");\ndefineSymbol(math, main, textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(symbols_text, main, textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(symbols_text, main, textord, \"\\u2021\", \"\\\\textdaggerdbl\"); // Large Delimiters\n\ndefineSymbol(math, main, symbols_close, \"\\u23b1\", \"\\\\rmoustache\", true);\ndefineSymbol(math, main, symbols_open, \"\\u23b0\", \"\\\\lmoustache\", true);\ndefineSymbol(math, main, symbols_close, \"\\u27ef\", \"\\\\rgroup\", true);\ndefineSymbol(math, main, symbols_open, \"\\u27ee\", \"\\\\lgroup\", true); // Binary Operators\n\ndefineSymbol(math, main, bin, \"\\u2213\", \"\\\\mp\", true);\ndefineSymbol(math, main, bin, \"\\u2296\", \"\\\\ominus\", true);\ndefineSymbol(math, main, bin, \"\\u228e\", \"\\\\uplus\", true);\ndefineSymbol(math, main, bin, \"\\u2293\", \"\\\\sqcap\", true);\ndefineSymbol(math, main, bin, \"\\u2217\", \"\\\\ast\");\ndefineSymbol(math, main, bin, \"\\u2294\", \"\\\\sqcup\", true);\ndefineSymbol(math, main, bin, \"\\u25ef\", \"\\\\bigcirc\", true);\ndefineSymbol(math, main, bin, \"\\u2219\", \"\\\\bullet\", true);\ndefineSymbol(math, main, bin, \"\\u2021\", \"\\\\ddagger\");\ndefineSymbol(math, main, bin, \"\\u2240\", \"\\\\wr\", true);\ndefineSymbol(math, main, bin, \"\\u2a3f\", \"\\\\amalg\");\ndefineSymbol(math, main, bin, \"\\u0026\", \"\\\\And\"); // from amsmath\n// Arrow Symbols\n\ndefineSymbol(math, main, rel, \"\\u27f5\", \"\\\\longleftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d0\", \"\\\\Leftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f8\", \"\\\\Longleftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f6\", \"\\\\longrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d2\", \"\\\\Rightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f9\", \"\\\\Longrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2194\", \"\\\\leftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f7\", \"\\\\longleftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d4\", \"\\\\Leftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27fa\", \"\\\\Longleftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21a6\", \"\\\\mapsto\", true);\ndefineSymbol(math, main, rel, \"\\u27fc\", \"\\\\longmapsto\", true);\ndefineSymbol(math, main, rel, \"\\u2197\", \"\\\\nearrow\", true);\ndefineSymbol(math, main, rel, \"\\u21a9\", \"\\\\hookleftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21aa\", \"\\\\hookrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2198\", \"\\\\searrow\", true);\ndefineSymbol(math, main, rel, \"\\u21bc\", \"\\\\leftharpoonup\", true);\ndefineSymbol(math, main, rel, \"\\u21c0\", \"\\\\rightharpoonup\", true);\ndefineSymbol(math, main, rel, \"\\u2199\", \"\\\\swarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21bd\", \"\\\\leftharpoondown\", true);\ndefineSymbol(math, main, rel, \"\\u21c1\", \"\\\\rightharpoondown\", true);\ndefineSymbol(math, main, rel, \"\\u2196\", \"\\\\nwarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21cc\", \"\\\\rightleftharpoons\", true); // AMS Negated Binary Relations\n\ndefineSymbol(math, ams, rel, \"\\u226e\", \"\\\\nless\", true); // Symbol names preceded by \"@\" each have a corresponding macro.\n\ndefineSymbol(math, ams, rel, \"\\ue010\", \"\\\\@nleqslant\");\ndefineSymbol(math, ams, rel, \"\\ue011\", \"\\\\@nleqq\");\ndefineSymbol(math, ams, rel, \"\\u2a87\", \"\\\\lneq\", true);\ndefineSymbol(math, ams, rel, \"\\u2268\", \"\\\\lneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue00c\", \"\\\\@lvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22e6\", \"\\\\lnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a89\", \"\\\\lnapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u2280\", \"\\\\nprec\", true); // unicode-math maps \\u22e0 to \\npreccurlyeq. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u22e0\", \"\\\\npreceq\", true);\ndefineSymbol(math, ams, rel, \"\\u22e8\", \"\\\\precnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab9\", \"\\\\precnapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u2241\", \"\\\\nsim\", true);\ndefineSymbol(math, ams, rel, \"\\ue006\", \"\\\\@nshortmid\");\ndefineSymbol(math, ams, rel, \"\\u2224\", \"\\\\nmid\", true);\ndefineSymbol(math, ams, rel, \"\\u22ac\", \"\\\\nvdash\", true);\ndefineSymbol(math, ams, rel, \"\\u22ad\", \"\\\\nvDash\", true);\ndefineSymbol(math, ams, rel, \"\\u22ea\", \"\\\\ntriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22ec\", \"\\\\ntrianglelefteq\", true);\ndefineSymbol(math, ams, rel, \"\\u228a\", \"\\\\subsetneq\", true);\ndefineSymbol(math, ams, rel, \"\\ue01a\", \"\\\\@varsubsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2acb\", \"\\\\subsetneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue017\", \"\\\\@varsubsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u226f\", \"\\\\ngtr\", true);\ndefineSymbol(math, ams, rel, \"\\ue00f\", \"\\\\@ngeqslant\");\ndefineSymbol(math, ams, rel, \"\\ue00e\", \"\\\\@ngeqq\");\ndefineSymbol(math, ams, rel, \"\\u2a88\", \"\\\\gneq\", true);\ndefineSymbol(math, ams, rel, \"\\u2269\", \"\\\\gneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue00d\", \"\\\\@gvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22e7\", \"\\\\gnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a8a\", \"\\\\gnapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u2281\", \"\\\\nsucc\", true); // unicode-math maps \\u22e1 to \\nsucccurlyeq. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u22e1\", \"\\\\nsucceq\", true);\ndefineSymbol(math, ams, rel, \"\\u22e9\", \"\\\\succnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2aba\", \"\\\\succnapprox\", true); // unicode-math maps \\u2246 to \\simneqq. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u2246\", \"\\\\ncong\", true);\ndefineSymbol(math, ams, rel, \"\\ue007\", \"\\\\@nshortparallel\");\ndefineSymbol(math, ams, rel, \"\\u2226\", \"\\\\nparallel\", true);\ndefineSymbol(math, ams, rel, \"\\u22af\", \"\\\\nVDash\", true);\ndefineSymbol(math, ams, rel, \"\\u22eb\", \"\\\\ntriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22ed\", \"\\\\ntrianglerighteq\", true);\ndefineSymbol(math, ams, rel, \"\\ue018\", \"\\\\@nsupseteqq\");\ndefineSymbol(math, ams, rel, \"\\u228b\", \"\\\\supsetneq\", true);\ndefineSymbol(math, ams, rel, \"\\ue01b\", \"\\\\@varsupsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2acc\", \"\\\\supsetneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue019\", \"\\\\@varsupsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u22ae\", \"\\\\nVdash\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab5\", \"\\\\precneqq\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab6\", \"\\\\succneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue016\", \"\\\\@nsubseteqq\");\ndefineSymbol(math, ams, bin, \"\\u22b4\", \"\\\\unlhd\");\ndefineSymbol(math, ams, bin, \"\\u22b5\", \"\\\\unrhd\"); // AMS Negated Arrows\n\ndefineSymbol(math, ams, rel, \"\\u219a\", \"\\\\nleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u219b\", \"\\\\nrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21cd\", \"\\\\nLeftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21cf\", \"\\\\nRightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21ae\", \"\\\\nleftrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21ce\", \"\\\\nLeftrightarrow\", true); // AMS Misc\n\ndefineSymbol(math, ams, rel, \"\\u25b3\", \"\\\\vartriangle\");\ndefineSymbol(math, ams, textord, \"\\u210f\", \"\\\\hslash\");\ndefineSymbol(math, ams, textord, \"\\u25bd\", \"\\\\triangledown\");\ndefineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\lozenge\");\ndefineSymbol(math, ams, textord, \"\\u24c8\", \"\\\\circledS\");\ndefineSymbol(math, ams, textord, \"\\u00ae\", \"\\\\circledR\");\ndefineSymbol(symbols_text, ams, textord, \"\\u00ae\", \"\\\\circledR\");\ndefineSymbol(math, ams, textord, \"\\u2221\", \"\\\\measuredangle\", true);\ndefineSymbol(math, ams, textord, \"\\u2204\", \"\\\\nexists\");\ndefineSymbol(math, ams, textord, \"\\u2127\", \"\\\\mho\");\ndefineSymbol(math, ams, textord, \"\\u2132\", \"\\\\Finv\", true);\ndefineSymbol(math, ams, textord, \"\\u2141\", \"\\\\Game\", true);\ndefineSymbol(math, ams, textord, \"\\u2035\", \"\\\\backprime\");\ndefineSymbol(math, ams, textord, \"\\u25b2\", \"\\\\blacktriangle\");\ndefineSymbol(math, ams, textord, \"\\u25bc\", \"\\\\blacktriangledown\");\ndefineSymbol(math, ams, textord, \"\\u25a0\", \"\\\\blacksquare\");\ndefineSymbol(math, ams, textord, \"\\u29eb\", \"\\\\blacklozenge\");\ndefineSymbol(math, ams, textord, \"\\u2605\", \"\\\\bigstar\");\ndefineSymbol(math, ams, textord, \"\\u2222\", \"\\\\sphericalangle\", true);\ndefineSymbol(math, ams, textord, \"\\u2201\", \"\\\\complement\", true); // unicode-math maps U+F0 to \\matheth. We map to AMS function \\eth\n\ndefineSymbol(math, ams, textord, \"\\u00f0\", \"\\\\eth\", true);\ndefineSymbol(symbols_text, main, textord, \"\\u00f0\", \"\\u00f0\");\ndefineSymbol(math, ams, textord, \"\\u2571\", \"\\\\diagup\");\ndefineSymbol(math, ams, textord, \"\\u2572\", \"\\\\diagdown\");\ndefineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\square\");\ndefineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\Box\");\ndefineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\Diamond\"); // unicode-math maps U+A5 to \\mathyen. We map to AMS function \\yen\n\ndefineSymbol(math, ams, textord, \"\\u00a5\", \"\\\\yen\", true);\ndefineSymbol(symbols_text, ams, textord, \"\\u00a5\", \"\\\\yen\", true);\ndefineSymbol(math, ams, textord, \"\\u2713\", \"\\\\checkmark\", true);\ndefineSymbol(symbols_text, ams, textord, \"\\u2713\", \"\\\\checkmark\"); // AMS Hebrew\n\ndefineSymbol(math, ams, textord, \"\\u2136\", \"\\\\beth\", true);\ndefineSymbol(math, ams, textord, \"\\u2138\", \"\\\\daleth\", true);\ndefineSymbol(math, ams, textord, \"\\u2137\", \"\\\\gimel\", true); // AMS Greek\n\ndefineSymbol(math, ams, textord, \"\\u03dd\", \"\\\\digamma\", true);\ndefineSymbol(math, ams, textord, \"\\u03f0\", \"\\\\varkappa\"); // AMS Delimiters\n\ndefineSymbol(math, ams, symbols_open, \"\\u250c\", \"\\\\@ulcorner\", true);\ndefineSymbol(math, ams, symbols_close, \"\\u2510\", \"\\\\@urcorner\", true);\ndefineSymbol(math, ams, symbols_open, \"\\u2514\", \"\\\\@llcorner\", true);\ndefineSymbol(math, ams, symbols_close, \"\\u2518\", \"\\\\@lrcorner\", true); // AMS Binary Relations\n\ndefineSymbol(math, ams, rel, \"\\u2266\", \"\\\\leqq\", true);\ndefineSymbol(math, ams, rel, \"\\u2a7d\", \"\\\\leqslant\", true);\ndefineSymbol(math, ams, rel, \"\\u2a95\", \"\\\\eqslantless\", true);\ndefineSymbol(math, ams, rel, \"\\u2272\", \"\\\\lesssim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a85\", \"\\\\lessapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u224a\", \"\\\\approxeq\", true);\ndefineSymbol(math, ams, bin, \"\\u22d6\", \"\\\\lessdot\");\ndefineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\lll\", true);\ndefineSymbol(math, ams, rel, \"\\u2276\", \"\\\\lessgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u22da\", \"\\\\lesseqgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u2a8b\", \"\\\\lesseqqgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\doteqdot\");\ndefineSymbol(math, ams, rel, \"\\u2253\", \"\\\\risingdotseq\", true);\ndefineSymbol(math, ams, rel, \"\\u2252\", \"\\\\fallingdotseq\", true);\ndefineSymbol(math, ams, rel, \"\\u223d\", \"\\\\backsim\", true);\ndefineSymbol(math, ams, rel, \"\\u22cd\", \"\\\\backsimeq\", true);\ndefineSymbol(math, ams, rel, \"\\u2ac5\", \"\\\\subseteqq\", true);\ndefineSymbol(math, ams, rel, \"\\u22d0\", \"\\\\Subset\", true);\ndefineSymbol(math, ams, rel, \"\\u228f\", \"\\\\sqsubset\", true);\ndefineSymbol(math, ams, rel, \"\\u227c\", \"\\\\preccurlyeq\", true);\ndefineSymbol(math, ams, rel, \"\\u22de\", \"\\\\curlyeqprec\", true);\ndefineSymbol(math, ams, rel, \"\\u227e\", \"\\\\precsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab7\", \"\\\\precapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u22b2\", \"\\\\vartriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22b4\", \"\\\\trianglelefteq\");\ndefineSymbol(math, ams, rel, \"\\u22a8\", \"\\\\vDash\", true);\ndefineSymbol(math, ams, rel, \"\\u22aa\", \"\\\\Vvdash\", true);\ndefineSymbol(math, ams, rel, \"\\u2323\", \"\\\\smallsmile\");\ndefineSymbol(math, ams, rel, \"\\u2322\", \"\\\\smallfrown\");\ndefineSymbol(math, ams, rel, \"\\u224f\", \"\\\\bumpeq\", true);\ndefineSymbol(math, ams, rel, \"\\u224e\", \"\\\\Bumpeq\", true);\ndefineSymbol(math, ams, rel, \"\\u2267\", \"\\\\geqq\", true);\ndefineSymbol(math, ams, rel, \"\\u2a7e\", \"\\\\geqslant\", true);\ndefineSymbol(math, ams, rel, \"\\u2a96\", \"\\\\eqslantgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u2273\", \"\\\\gtrsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a86\", \"\\\\gtrapprox\", true);\ndefineSymbol(math, ams, bin, \"\\u22d7\", \"\\\\gtrdot\");\ndefineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\ggg\", true);\ndefineSymbol(math, ams, rel, \"\\u2277\", \"\\\\gtrless\", true);\ndefineSymbol(math, ams, rel, \"\\u22db\", \"\\\\gtreqless\", true);\ndefineSymbol(math, ams, rel, \"\\u2a8c\", \"\\\\gtreqqless\", true);\ndefineSymbol(math, ams, rel, \"\\u2256\", \"\\\\eqcirc\", true);\ndefineSymbol(math, ams, rel, \"\\u2257\", \"\\\\circeq\", true);\ndefineSymbol(math, ams, rel, \"\\u225c\", \"\\\\triangleq\", true);\ndefineSymbol(math, ams, rel, \"\\u223c\", \"\\\\thicksim\");\ndefineSymbol(math, ams, rel, \"\\u2248\", \"\\\\thickapprox\");\ndefineSymbol(math, ams, rel, \"\\u2ac6\", \"\\\\supseteqq\", true);\ndefineSymbol(math, ams, rel, \"\\u22d1\", \"\\\\Supset\", true);\ndefineSymbol(math, ams, rel, \"\\u2290\", \"\\\\sqsupset\", true);\ndefineSymbol(math, ams, rel, \"\\u227d\", \"\\\\succcurlyeq\", true);\ndefineSymbol(math, ams, rel, \"\\u22df\", \"\\\\curlyeqsucc\", true);\ndefineSymbol(math, ams, rel, \"\\u227f\", \"\\\\succsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab8\", \"\\\\succapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u22b3\", \"\\\\vartriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22b5\", \"\\\\trianglerighteq\");\ndefineSymbol(math, ams, rel, \"\\u22a9\", \"\\\\Vdash\", true);\ndefineSymbol(math, ams, rel, \"\\u2223\", \"\\\\shortmid\");\ndefineSymbol(math, ams, rel, \"\\u2225\", \"\\\\shortparallel\");\ndefineSymbol(math, ams, rel, \"\\u226c\", \"\\\\between\", true);\ndefineSymbol(math, ams, rel, \"\\u22d4\", \"\\\\pitchfork\", true);\ndefineSymbol(math, ams, rel, \"\\u221d\", \"\\\\varpropto\");\ndefineSymbol(math, ams, rel, \"\\u25c0\", \"\\\\blacktriangleleft\"); // unicode-math says that \\therefore is a mathord atom.\n// We kept the amssymb atom type, which is rel.\n\ndefineSymbol(math, ams, rel, \"\\u2234\", \"\\\\therefore\", true);\ndefineSymbol(math, ams, rel, \"\\u220d\", \"\\\\backepsilon\");\ndefineSymbol(math, ams, rel, \"\\u25b6\", \"\\\\blacktriangleright\"); // unicode-math says that \\because is a mathord atom.\n// We kept the amssymb atom type, which is rel.\n\ndefineSymbol(math, ams, rel, \"\\u2235\", \"\\\\because\", true);\ndefineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\llless\");\ndefineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\gggtr\");\ndefineSymbol(math, ams, bin, \"\\u22b2\", \"\\\\lhd\");\ndefineSymbol(math, ams, bin, \"\\u22b3\", \"\\\\rhd\");\ndefineSymbol(math, ams, rel, \"\\u2242\", \"\\\\eqsim\", true);\ndefineSymbol(math, main, rel, \"\\u22c8\", \"\\\\Join\");\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\Doteq\", true); // AMS Binary Operators\n\ndefineSymbol(math, ams, bin, \"\\u2214\", \"\\\\dotplus\", true);\ndefineSymbol(math, ams, bin, \"\\u2216\", \"\\\\smallsetminus\");\ndefineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\Cap\", true);\ndefineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\Cup\", true);\ndefineSymbol(math, ams, bin, \"\\u2a5e\", \"\\\\doublebarwedge\", true);\ndefineSymbol(math, ams, bin, \"\\u229f\", \"\\\\boxminus\", true);\ndefineSymbol(math, ams, bin, \"\\u229e\", \"\\\\boxplus\", true);\ndefineSymbol(math, ams, bin, \"\\u22c7\", \"\\\\divideontimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22c9\", \"\\\\ltimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22ca\", \"\\\\rtimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22cb\", \"\\\\leftthreetimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22cc\", \"\\\\rightthreetimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22cf\", \"\\\\curlywedge\", true);\ndefineSymbol(math, ams, bin, \"\\u22ce\", \"\\\\curlyvee\", true);\ndefineSymbol(math, ams, bin, \"\\u229d\", \"\\\\circleddash\", true);\ndefineSymbol(math, ams, bin, \"\\u229b\", \"\\\\circledast\", true);\ndefineSymbol(math, ams, bin, \"\\u22c5\", \"\\\\centerdot\");\ndefineSymbol(math, ams, bin, \"\\u22ba\", \"\\\\intercal\", true);\ndefineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\doublecap\");\ndefineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\doublecup\");\ndefineSymbol(math, ams, bin, \"\\u22a0\", \"\\\\boxtimes\", true); // AMS Arrows\n// Note: unicode-math maps \\u21e2 to their own function \\rightdasharrow.\n// We'll map it to AMS function \\dashrightarrow. It produces the same atom.\n\ndefineSymbol(math, ams, rel, \"\\u21e2\", \"\\\\dashrightarrow\", true); // unicode-math maps \\u21e0 to \\leftdasharrow. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u21e0\", \"\\\\dashleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21c7\", \"\\\\leftleftarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21c6\", \"\\\\leftrightarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21da\", \"\\\\Lleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u219e\", \"\\\\twoheadleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21a2\", \"\\\\leftarrowtail\", true);\ndefineSymbol(math, ams, rel, \"\\u21ab\", \"\\\\looparrowleft\", true);\ndefineSymbol(math, ams, rel, \"\\u21cb\", \"\\\\leftrightharpoons\", true);\ndefineSymbol(math, ams, rel, \"\\u21b6\", \"\\\\curvearrowleft\", true); // unicode-math maps \\u21ba to \\acwopencirclearrow. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u21ba\", \"\\\\circlearrowleft\", true);\ndefineSymbol(math, ams, rel, \"\\u21b0\", \"\\\\Lsh\", true);\ndefineSymbol(math, ams, rel, \"\\u21c8\", \"\\\\upuparrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21bf\", \"\\\\upharpoonleft\", true);\ndefineSymbol(math, ams, rel, \"\\u21c3\", \"\\\\downharpoonleft\", true);\ndefineSymbol(math, main, rel, \"\\u22b6\", \"\\\\origof\", true); // not in font\n\ndefineSymbol(math, main, rel, \"\\u22b7\", \"\\\\imageof\", true); // not in font\n\ndefineSymbol(math, ams, rel, \"\\u22b8\", \"\\\\multimap\", true);\ndefineSymbol(math, ams, rel, \"\\u21ad\", \"\\\\leftrightsquigarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21c9\", \"\\\\rightrightarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21c4\", \"\\\\rightleftarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21a0\", \"\\\\twoheadrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21a3\", \"\\\\rightarrowtail\", true);\ndefineSymbol(math, ams, rel, \"\\u21ac\", \"\\\\looparrowright\", true);\ndefineSymbol(math, ams, rel, \"\\u21b7\", \"\\\\curvearrowright\", true); // unicode-math maps \\u21bb to \\cwopencirclearrow. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u21bb\", \"\\\\circlearrowright\", true);\ndefineSymbol(math, ams, rel, \"\\u21b1\", \"\\\\Rsh\", true);\ndefineSymbol(math, ams, rel, \"\\u21ca\", \"\\\\downdownarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21be\", \"\\\\upharpoonright\", true);\ndefineSymbol(math, ams, rel, \"\\u21c2\", \"\\\\downharpoonright\", true);\ndefineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\rightsquigarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\leadsto\");\ndefineSymbol(math, ams, rel, \"\\u21db\", \"\\\\Rrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21be\", \"\\\\restriction\");\ndefineSymbol(math, main, textord, \"\\u2018\", \"`\");\ndefineSymbol(math, main, textord, \"$\", \"\\\\$\");\ndefineSymbol(symbols_text, main, textord, \"$\", \"\\\\$\");\ndefineSymbol(symbols_text, main, textord, \"$\", \"\\\\textdollar\");\ndefineSymbol(math, main, textord, \"%\", \"\\\\%\");\ndefineSymbol(symbols_text, main, textord, \"%\", \"\\\\%\");\ndefineSymbol(math, main, textord, \"_\", \"\\\\_\");\ndefineSymbol(symbols_text, main, textord, \"_\", \"\\\\_\");\ndefineSymbol(symbols_text, main, textord, \"_\", \"\\\\textunderscore\");\ndefineSymbol(math, main, textord, \"\\u2220\", \"\\\\angle\", true);\ndefineSymbol(math, main, textord, \"\\u221e\", \"\\\\infty\", true);\ndefineSymbol(math, main, textord, \"\\u2032\", \"\\\\prime\");\ndefineSymbol(math, main, textord, \"\\u25b3\", \"\\\\triangle\");\ndefineSymbol(math, main, textord, \"\\u0393\", \"\\\\Gamma\", true);\ndefineSymbol(math, main, textord, \"\\u0394\", \"\\\\Delta\", true);\ndefineSymbol(math, main, textord, \"\\u0398\", \"\\\\Theta\", true);\ndefineSymbol(math, main, textord, \"\\u039b\", \"\\\\Lambda\", true);\ndefineSymbol(math, main, textord, \"\\u039e\", \"\\\\Xi\", true);\ndefineSymbol(math, main, textord, \"\\u03a0\", \"\\\\Pi\", true);\ndefineSymbol(math, main, textord, \"\\u03a3\", \"\\\\Sigma\", true);\ndefineSymbol(math, main, textord, \"\\u03a5\", \"\\\\Upsilon\", true);\ndefineSymbol(math, main, textord, \"\\u03a6\", \"\\\\Phi\", true);\ndefineSymbol(math, main, textord, \"\\u03a8\", \"\\\\Psi\", true);\ndefineSymbol(math, main, textord, \"\\u03a9\", \"\\\\Omega\", true);\ndefineSymbol(math, main, textord, \"A\", \"\\u0391\");\ndefineSymbol(math, main, textord, \"B\", \"\\u0392\");\ndefineSymbol(math, main, textord, \"E\", \"\\u0395\");\ndefineSymbol(math, main, textord, \"Z\", \"\\u0396\");\ndefineSymbol(math, main, textord, \"H\", \"\\u0397\");\ndefineSymbol(math, main, textord, \"I\", \"\\u0399\");\ndefineSymbol(math, main, textord, \"K\", \"\\u039A\");\ndefineSymbol(math, main, textord, \"M\", \"\\u039C\");\ndefineSymbol(math, main, textord, \"N\", \"\\u039D\");\ndefineSymbol(math, main, textord, \"O\", \"\\u039F\");\ndefineSymbol(math, main, textord, \"P\", \"\\u03A1\");\ndefineSymbol(math, main, textord, \"T\", \"\\u03A4\");\ndefineSymbol(math, main, textord, \"X\", \"\\u03A7\");\ndefineSymbol(math, main, textord, \"\\u00ac\", \"\\\\neg\", true);\ndefineSymbol(math, main, textord, \"\\u00ac\", \"\\\\lnot\");\ndefineSymbol(math, main, textord, \"\\u22a4\", \"\\\\top\");\ndefineSymbol(math, main, textord, \"\\u22a5\", \"\\\\bot\");\ndefineSymbol(math, main, textord, \"\\u2205\", \"\\\\emptyset\");\ndefineSymbol(math, ams, textord, \"\\u2205\", \"\\\\varnothing\");\ndefineSymbol(math, main, mathord, \"\\u03b1\", \"\\\\alpha\", true);\ndefineSymbol(math, main, mathord, \"\\u03b2\", \"\\\\beta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b3\", \"\\\\gamma\", true);\ndefineSymbol(math, main, mathord, \"\\u03b4\", \"\\\\delta\", true);\ndefineSymbol(math, main, mathord, \"\\u03f5\", \"\\\\epsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03b6\", \"\\\\zeta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b7\", \"\\\\eta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b8\", \"\\\\theta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b9\", \"\\\\iota\", true);\ndefineSymbol(math, main, mathord, \"\\u03ba\", \"\\\\kappa\", true);\ndefineSymbol(math, main, mathord, \"\\u03bb\", \"\\\\lambda\", true);\ndefineSymbol(math, main, mathord, \"\\u03bc\", \"\\\\mu\", true);\ndefineSymbol(math, main, mathord, \"\\u03bd\", \"\\\\nu\", true);\ndefineSymbol(math, main, mathord, \"\\u03be\", \"\\\\xi\", true);\ndefineSymbol(math, main, mathord, \"\\u03bf\", \"\\\\omicron\", true);\ndefineSymbol(math, main, mathord, \"\\u03c0\", \"\\\\pi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c1\", \"\\\\rho\", true);\ndefineSymbol(math, main, mathord, \"\\u03c3\", \"\\\\sigma\", true);\ndefineSymbol(math, main, mathord, \"\\u03c4\", \"\\\\tau\", true);\ndefineSymbol(math, main, mathord, \"\\u03c5\", \"\\\\upsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03d5\", \"\\\\phi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c7\", \"\\\\chi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c8\", \"\\\\psi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c9\", \"\\\\omega\", true);\ndefineSymbol(math, main, mathord, \"\\u03b5\", \"\\\\varepsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03d1\", \"\\\\vartheta\", true);\ndefineSymbol(math, main, mathord, \"\\u03d6\", \"\\\\varpi\", true);\ndefineSymbol(math, main, mathord, \"\\u03f1\", \"\\\\varrho\", true);\ndefineSymbol(math, main, mathord, \"\\u03c2\", \"\\\\varsigma\", true);\ndefineSymbol(math, main, mathord, \"\\u03c6\", \"\\\\varphi\", true);\ndefineSymbol(math, main, bin, \"\\u2217\", \"*\", true);\ndefineSymbol(math, main, bin, \"+\", \"+\");\ndefineSymbol(math, main, bin, \"\\u2212\", \"-\", true);\ndefineSymbol(math, main, bin, \"\\u22c5\", \"\\\\cdot\", true);\ndefineSymbol(math, main, bin, \"\\u2218\", \"\\\\circ\", true);\ndefineSymbol(math, main, bin, \"\\u00f7\", \"\\\\div\", true);\ndefineSymbol(math, main, bin, \"\\u00b1\", \"\\\\pm\", true);\ndefineSymbol(math, main, bin, \"\\u00d7\", \"\\\\times\", true);\ndefineSymbol(math, main, bin, \"\\u2229\", \"\\\\cap\", true);\ndefineSymbol(math, main, bin, \"\\u222a\", \"\\\\cup\", true);\ndefineSymbol(math, main, bin, \"\\u2216\", \"\\\\setminus\", true);\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\land\");\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\lor\");\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\wedge\", true);\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\vee\", true);\ndefineSymbol(math, main, textord, \"\\u221a\", \"\\\\surd\");\ndefineSymbol(math, main, symbols_open, \"\\u27e8\", \"\\\\langle\", true);\ndefineSymbol(math, main, symbols_open, \"\\u2223\", \"\\\\lvert\");\ndefineSymbol(math, main, symbols_open, \"\\u2225\", \"\\\\lVert\");\ndefineSymbol(math, main, symbols_close, \"?\", \"?\");\ndefineSymbol(math, main, symbols_close, \"!\", \"!\");\ndefineSymbol(math, main, symbols_close, \"\\u27e9\", \"\\\\rangle\", true);\ndefineSymbol(math, main, symbols_close, \"\\u2223\", \"\\\\rvert\");\ndefineSymbol(math, main, symbols_close, \"\\u2225\", \"\\\\rVert\");\ndefineSymbol(math, main, rel, \"=\", \"=\");\ndefineSymbol(math, main, rel, \":\", \":\");\ndefineSymbol(math, main, rel, \"\\u2248\", \"\\\\approx\", true);\ndefineSymbol(math, main, rel, \"\\u2245\", \"\\\\cong\", true);\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\ge\");\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\geq\", true);\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\gets\");\ndefineSymbol(math, main, rel, \">\", \"\\\\gt\", true);\ndefineSymbol(math, main, rel, \"\\u2208\", \"\\\\in\", true);\ndefineSymbol(math, main, rel, \"\\ue020\", \"\\\\@not\");\ndefineSymbol(math, main, rel, \"\\u2282\", \"\\\\subset\", true);\ndefineSymbol(math, main, rel, \"\\u2283\", \"\\\\supset\", true);\ndefineSymbol(math, main, rel, \"\\u2286\", \"\\\\subseteq\", true);\ndefineSymbol(math, main, rel, \"\\u2287\", \"\\\\supseteq\", true);\ndefineSymbol(math, ams, rel, \"\\u2288\", \"\\\\nsubseteq\", true);\ndefineSymbol(math, ams, rel, \"\\u2289\", \"\\\\nsupseteq\", true);\ndefineSymbol(math, main, rel, \"\\u22a8\", \"\\\\models\");\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\leftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\le\");\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\leq\", true);\ndefineSymbol(math, main, rel, \"<\", \"\\\\lt\", true);\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\rightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\to\");\ndefineSymbol(math, ams, rel, \"\\u2271\", \"\\\\ngeq\", true);\ndefineSymbol(math, ams, rel, \"\\u2270\", \"\\\\nleq\", true);\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\space\"); // Ref: LaTeX Source 2e: \\DeclareRobustCommand{\\nobreakspace}{%\n\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\nobreakspace\");\ndefineSymbol(symbols_text, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(symbols_text, main, spacing, \"\\u00a0\", \" \");\ndefineSymbol(symbols_text, main, spacing, \"\\u00a0\", \"\\\\space\");\ndefineSymbol(symbols_text, main, spacing, \"\\u00a0\", \"\\\\nobreakspace\");\ndefineSymbol(math, main, spacing, null, \"\\\\nobreak\");\ndefineSymbol(math, main, spacing, null, \"\\\\allowbreak\");\ndefineSymbol(math, main, punct, \",\", \",\");\ndefineSymbol(math, main, punct, \";\", \";\");\ndefineSymbol(math, ams, bin, \"\\u22bc\", \"\\\\barwedge\", true);\ndefineSymbol(math, ams, bin, \"\\u22bb\", \"\\\\veebar\", true);\ndefineSymbol(math, main, bin, \"\\u2299\", \"\\\\odot\", true);\ndefineSymbol(math, main, bin, \"\\u2295\", \"\\\\oplus\", true);\ndefineSymbol(math, main, bin, \"\\u2297\", \"\\\\otimes\", true);\ndefineSymbol(math, main, textord, \"\\u2202\", \"\\\\partial\", true);\ndefineSymbol(math, main, bin, \"\\u2298\", \"\\\\oslash\", true);\ndefineSymbol(math, ams, bin, \"\\u229a\", \"\\\\circledcirc\", true);\ndefineSymbol(math, ams, bin, \"\\u22a1\", \"\\\\boxdot\", true);\ndefineSymbol(math, main, bin, \"\\u25b3\", \"\\\\bigtriangleup\");\ndefineSymbol(math, main, bin, \"\\u25bd\", \"\\\\bigtriangledown\");\ndefineSymbol(math, main, bin, \"\\u2020\", \"\\\\dagger\");\ndefineSymbol(math, main, bin, \"\\u22c4\", \"\\\\diamond\");\ndefineSymbol(math, main, bin, \"\\u22c6\", \"\\\\star\");\ndefineSymbol(math, main, bin, \"\\u25c3\", \"\\\\triangleleft\");\ndefineSymbol(math, main, bin, \"\\u25b9\", \"\\\\triangleright\");\ndefineSymbol(math, main, symbols_open, \"{\", \"\\\\{\");\ndefineSymbol(symbols_text, main, textord, \"{\", \"\\\\{\");\ndefineSymbol(symbols_text, main, textord, \"{\", \"\\\\textbraceleft\");\ndefineSymbol(math, main, symbols_close, \"}\", \"\\\\}\");\ndefineSymbol(symbols_text, main, textord, \"}\", \"\\\\}\");\ndefineSymbol(symbols_text, main, textord, \"}\", \"\\\\textbraceright\");\ndefineSymbol(math, main, symbols_open, \"{\", \"\\\\lbrace\");\ndefineSymbol(math, main, symbols_close, \"}\", \"\\\\rbrace\");\ndefineSymbol(math, main, symbols_open, \"[\", \"\\\\lbrack\", true);\ndefineSymbol(symbols_text, main, textord, \"[\", \"\\\\lbrack\", true);\ndefineSymbol(math, main, symbols_close, \"]\", \"\\\\rbrack\", true);\ndefineSymbol(symbols_text, main, textord, \"]\", \"\\\\rbrack\", true);\ndefineSymbol(math, main, symbols_open, \"(\", \"\\\\lparen\", true);\ndefineSymbol(math, main, symbols_close, \")\", \"\\\\rparen\", true);\ndefineSymbol(symbols_text, main, textord, \"<\", \"\\\\textless\", true); // in T1 fontenc\n\ndefineSymbol(symbols_text, main, textord, \">\", \"\\\\textgreater\", true); // in T1 fontenc\n\ndefineSymbol(math, main, symbols_open, \"\\u230a\", \"\\\\lfloor\", true);\ndefineSymbol(math, main, symbols_close, \"\\u230b\", \"\\\\rfloor\", true);\ndefineSymbol(math, main, symbols_open, \"\\u2308\", \"\\\\lceil\", true);\ndefineSymbol(math, main, symbols_close, \"\\u2309\", \"\\\\rceil\", true);\ndefineSymbol(math, main, textord, \"\\\\\", \"\\\\backslash\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"|\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"\\\\vert\");\ndefineSymbol(symbols_text, main, textord, \"|\", \"\\\\textbar\", true); // in T1 fontenc\n\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\|\");\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\Vert\");\ndefineSymbol(symbols_text, main, textord, \"\\u2225\", \"\\\\textbardbl\");\ndefineSymbol(symbols_text, main, textord, \"~\", \"\\\\textasciitilde\");\ndefineSymbol(symbols_text, main, textord, \"\\\\\", \"\\\\textbackslash\");\ndefineSymbol(symbols_text, main, textord, \"^\", \"\\\\textasciicircum\");\ndefineSymbol(math, main, rel, \"\\u2191\", \"\\\\uparrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d1\", \"\\\\Uparrow\", true);\ndefineSymbol(math, main, rel, \"\\u2193\", \"\\\\downarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d3\", \"\\\\Downarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2195\", \"\\\\updownarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d5\", \"\\\\Updownarrow\", true);\ndefineSymbol(math, main, op, \"\\u2210\", \"\\\\coprod\");\ndefineSymbol(math, main, op, \"\\u22c1\", \"\\\\bigvee\");\ndefineSymbol(math, main, op, \"\\u22c0\", \"\\\\bigwedge\");\ndefineSymbol(math, main, op, \"\\u2a04\", \"\\\\biguplus\");\ndefineSymbol(math, main, op, \"\\u22c2\", \"\\\\bigcap\");\ndefineSymbol(math, main, op, \"\\u22c3\", \"\\\\bigcup\");\ndefineSymbol(math, main, op, \"\\u222b\", \"\\\\int\");\ndefineSymbol(math, main, op, \"\\u222b\", \"\\\\intop\");\ndefineSymbol(math, main, op, \"\\u222c\", \"\\\\iint\");\ndefineSymbol(math, main, op, \"\\u222d\", \"\\\\iiint\");\ndefineSymbol(math, main, op, \"\\u220f\", \"\\\\prod\");\ndefineSymbol(math, main, op, \"\\u2211\", \"\\\\sum\");\ndefineSymbol(math, main, op, \"\\u2a02\", \"\\\\bigotimes\");\ndefineSymbol(math, main, op, \"\\u2a01\", \"\\\\bigoplus\");\ndefineSymbol(math, main, op, \"\\u2a00\", \"\\\\bigodot\");\ndefineSymbol(math, main, op, \"\\u222e\", \"\\\\oint\");\ndefineSymbol(math, main, op, \"\\u222f\", \"\\\\oiint\");\ndefineSymbol(math, main, op, \"\\u2230\", \"\\\\oiiint\");\ndefineSymbol(math, main, op, \"\\u2a06\", \"\\\\bigsqcup\");\ndefineSymbol(math, main, op, \"\\u222b\", \"\\\\smallint\");\ndefineSymbol(symbols_text, main, inner, \"\\u2026\", \"\\\\textellipsis\");\ndefineSymbol(math, main, inner, \"\\u2026\", \"\\\\mathellipsis\");\ndefineSymbol(symbols_text, main, inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(math, main, inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(math, main, inner, \"\\u22ef\", \"\\\\@cdots\", true);\ndefineSymbol(math, main, inner, \"\\u22f1\", \"\\\\ddots\", true); // \\vdots is a macro that uses one of these two symbols (with made-up names):\n\ndefineSymbol(math, main, textord, \"\\u22ee\", \"\\\\varvdots\");\ndefineSymbol(symbols_text, main, textord, \"\\u22ee\", \"\\\\varvdots\");\ndefineSymbol(math, main, accent, \"\\u02ca\", \"\\\\acute\");\ndefineSymbol(math, main, accent, \"\\u02cb\", \"\\\\grave\");\ndefineSymbol(math, main, accent, \"\\u00a8\", \"\\\\ddot\");\ndefineSymbol(math, main, accent, \"\\u007e\", \"\\\\tilde\");\ndefineSymbol(math, main, accent, \"\\u02c9\", \"\\\\bar\");\ndefineSymbol(math, main, accent, \"\\u02d8\", \"\\\\breve\");\ndefineSymbol(math, main, accent, \"\\u02c7\", \"\\\\check\");\ndefineSymbol(math, main, accent, \"\\u005e\", \"\\\\hat\");\ndefineSymbol(math, main, accent, \"\\u20d7\", \"\\\\vec\");\ndefineSymbol(math, main, accent, \"\\u02d9\", \"\\\\dot\");\ndefineSymbol(math, main, accent, \"\\u02da\", \"\\\\mathring\"); // \\imath and \\jmath should be invariant to \\mathrm, \\mathbf, etc., so use PUA\n\ndefineSymbol(math, main, mathord, \"\\ue131\", \"\\\\@imath\");\ndefineSymbol(math, main, mathord, \"\\ue237\", \"\\\\@jmath\");\ndefineSymbol(math, main, textord, \"\\u0131\", \"\\u0131\");\ndefineSymbol(math, main, textord, \"\\u0237\", \"\\u0237\");\ndefineSymbol(symbols_text, main, textord, \"\\u0131\", \"\\\\i\", true);\ndefineSymbol(symbols_text, main, textord, \"\\u0237\", \"\\\\j\", true);\ndefineSymbol(symbols_text, main, textord, \"\\u00df\", \"\\\\ss\", true);\ndefineSymbol(symbols_text, main, textord, \"\\u00e6\", \"\\\\ae\", true);\ndefineSymbol(symbols_text, main, textord, \"\\u0153\", \"\\\\oe\", true);\ndefineSymbol(symbols_text, main, textord, \"\\u00f8\", \"\\\\o\", true);\ndefineSymbol(symbols_text, main, textord, \"\\u00c6\", \"\\\\AE\", true);\ndefineSymbol(symbols_text, main, textord, \"\\u0152\", \"\\\\OE\", true);\ndefineSymbol(symbols_text, main, textord, \"\\u00d8\", \"\\\\O\", true);\ndefineSymbol(symbols_text, main, accent, \"\\u02ca\", \"\\\\'\"); // acute\n\ndefineSymbol(symbols_text, main, accent, \"\\u02cb\", \"\\\\`\"); // grave\n\ndefineSymbol(symbols_text, main, accent, \"\\u02c6\", \"\\\\^\"); // circumflex\n\ndefineSymbol(symbols_text, main, accent, \"\\u02dc\", \"\\\\~\"); // tilde\n\ndefineSymbol(symbols_text, main, accent, \"\\u02c9\", \"\\\\=\"); // macron\n\ndefineSymbol(symbols_text, main, accent, \"\\u02d8\", \"\\\\u\"); // breve\n\ndefineSymbol(symbols_text, main, accent, \"\\u02d9\", \"\\\\.\"); // dot above\n\ndefineSymbol(symbols_text, main, accent, \"\\u00b8\", \"\\\\c\"); // cedilla\n\ndefineSymbol(symbols_text, main, accent, \"\\u02da\", \"\\\\r\"); // ring above\n\ndefineSymbol(symbols_text, main, accent, \"\\u02c7\", \"\\\\v\"); // caron\n\ndefineSymbol(symbols_text, main, accent, \"\\u00a8\", '\\\\\"'); // diaresis\n\ndefineSymbol(symbols_text, main, accent, \"\\u02dd\", \"\\\\H\"); // double acute\n\ndefineSymbol(symbols_text, main, accent, \"\\u25ef\", \"\\\\textcircled\"); // \\bigcirc glyph\n// These ligatures are detected and created in Parser.js's `formLigatures`.\n\nconst ligatures = {\n  \"--\": true,\n  \"---\": true,\n  \"``\": true,\n  \"''\": true\n};\ndefineSymbol(symbols_text, main, textord, \"\\u2013\", \"--\", true);\ndefineSymbol(symbols_text, main, textord, \"\\u2013\", \"\\\\textendash\");\ndefineSymbol(symbols_text, main, textord, \"\\u2014\", \"---\", true);\ndefineSymbol(symbols_text, main, textord, \"\\u2014\", \"\\\\textemdash\");\ndefineSymbol(symbols_text, main, textord, \"\\u2018\", \"`\", true);\ndefineSymbol(symbols_text, main, textord, \"\\u2018\", \"\\\\textquoteleft\");\ndefineSymbol(symbols_text, main, textord, \"\\u2019\", \"'\", true);\ndefineSymbol(symbols_text, main, textord, \"\\u2019\", \"\\\\textquoteright\");\ndefineSymbol(symbols_text, main, textord, \"\\u201c\", \"``\", true);\ndefineSymbol(symbols_text, main, textord, \"\\u201c\", \"\\\\textquotedblleft\");\ndefineSymbol(symbols_text, main, textord, \"\\u201d\", \"''\", true);\ndefineSymbol(symbols_text, main, textord, \"\\u201d\", \"\\\\textquotedblright\"); //  \\degree from gensymb package\n\ndefineSymbol(math, main, textord, \"\\u00b0\", \"\\\\degree\", true);\ndefineSymbol(symbols_text, main, textord, \"\\u00b0\", \"\\\\degree\"); // \\textdegree from inputenc package\n\ndefineSymbol(symbols_text, main, textord, \"\\u00b0\", \"\\\\textdegree\", true); // TODO: In LaTeX, \\pounds can generate a different character in text and math\n// mode, but among our fonts, only Main-Regular defines this character \"163\".\n\ndefineSymbol(math, main, textord, \"\\u00a3\", \"\\\\pounds\");\ndefineSymbol(math, main, textord, \"\\u00a3\", \"\\\\mathsterling\", true);\ndefineSymbol(symbols_text, main, textord, \"\\u00a3\", \"\\\\pounds\");\ndefineSymbol(symbols_text, main, textord, \"\\u00a3\", \"\\\\textsterling\", true);\ndefineSymbol(math, ams, textord, \"\\u2720\", \"\\\\maltese\");\ndefineSymbol(symbols_text, ams, textord, \"\\u2720\", \"\\\\maltese\"); // There are lots of symbols which are the same, so we add them in afterwards.\n// All of these are textords in math mode\n\nconst mathTextSymbols = \"0123456789/@.\\\"\";\n\nfor (let i = 0; i < mathTextSymbols.length; i++) {\n  const ch = mathTextSymbols.charAt(i);\n  defineSymbol(math, main, textord, ch, ch);\n} // All of these are textords in text mode\n\n\nconst textSymbols = \"0123456789!@*()-=+\\\";:?/.,\";\n\nfor (let i = 0; i < textSymbols.length; i++) {\n  const ch = textSymbols.charAt(i);\n  defineSymbol(symbols_text, main, textord, ch, ch);\n} // All of these are textords in text mode, and mathords in math mode\n\n\nconst letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\nfor (let i = 0; i < letters.length; i++) {\n  const ch = letters.charAt(i);\n  defineSymbol(math, main, mathord, ch, ch);\n  defineSymbol(symbols_text, main, textord, ch, ch);\n} // Blackboard bold and script letters in Unicode range\n\n\ndefineSymbol(math, ams, textord, \"C\", \"\\u2102\"); // blackboard bold\n\ndefineSymbol(symbols_text, ams, textord, \"C\", \"\\u2102\");\ndefineSymbol(math, ams, textord, \"H\", \"\\u210D\");\ndefineSymbol(symbols_text, ams, textord, \"H\", \"\\u210D\");\ndefineSymbol(math, ams, textord, \"N\", \"\\u2115\");\ndefineSymbol(symbols_text, ams, textord, \"N\", \"\\u2115\");\ndefineSymbol(math, ams, textord, \"P\", \"\\u2119\");\ndefineSymbol(symbols_text, ams, textord, \"P\", \"\\u2119\");\ndefineSymbol(math, ams, textord, \"Q\", \"\\u211A\");\ndefineSymbol(symbols_text, ams, textord, \"Q\", \"\\u211A\");\ndefineSymbol(math, ams, textord, \"R\", \"\\u211D\");\ndefineSymbol(symbols_text, ams, textord, \"R\", \"\\u211D\");\ndefineSymbol(math, ams, textord, \"Z\", \"\\u2124\");\ndefineSymbol(symbols_text, ams, textord, \"Z\", \"\\u2124\");\ndefineSymbol(math, main, mathord, \"h\", \"\\u210E\"); // italic h, Planck constant\n\ndefineSymbol(symbols_text, main, mathord, \"h\", \"\\u210E\"); // The next loop loads wide (surrogate pair) characters.\n// We support some letters in the Unicode range U+1D400 to U+1D7FF,\n// Mathematical Alphanumeric Symbols.\n// Some editors do not deal well with wide characters. So don't write the\n// string into this file. Instead, create the string from the surrogate pair.\n\nlet wideChar = \"\";\n\nfor (let i = 0; i < letters.length; i++) {\n  const ch = letters.charAt(i); // The hex numbers in the next line are a surrogate pair.\n  // 0xD835 is the high surrogate for all letters in the range we support.\n  // 0xDC00 is the low surrogate for bold A.\n\n  wideChar = String.fromCharCode(0xD835, 0xDC00 + i); // A-Z a-z bold\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(symbols_text, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDC34 + i); // A-Z a-z italic\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(symbols_text, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDC68 + i); // A-Z a-z bold italic\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(symbols_text, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDD04 + i); // A-Z a-z Fraktur\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(symbols_text, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDD6C + i); // A-Z a-z bold Fraktur\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(symbols_text, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDDA0 + i); // A-Z a-z sans-serif\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(symbols_text, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDDD4 + i); // A-Z a-z sans bold\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(symbols_text, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDE08 + i); // A-Z a-z sans italic\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(symbols_text, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDE70 + i); // A-Z a-z monospace\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(symbols_text, main, textord, ch, wideChar);\n\n  if (i < 26) {\n    // KaTeX fonts have only capital letters for blackboard bold and script.\n    // See exception for k below.\n    wideChar = String.fromCharCode(0xD835, 0xDD38 + i); // A-Z double struck\n\n    defineSymbol(math, main, mathord, ch, wideChar);\n    defineSymbol(symbols_text, main, textord, ch, wideChar);\n    wideChar = String.fromCharCode(0xD835, 0xDC9C + i); // A-Z script\n\n    defineSymbol(math, main, mathord, ch, wideChar);\n    defineSymbol(symbols_text, main, textord, ch, wideChar);\n  } // TODO: Add bold script when it is supported by a KaTeX font.\n\n} // \"k\" is the only double struck lower case letter in the KaTeX fonts.\n\n\nwideChar = String.fromCharCode(0xD835, 0xDD5C); // k double struck\n\ndefineSymbol(math, main, mathord, \"k\", wideChar);\ndefineSymbol(symbols_text, main, textord, \"k\", wideChar); // Next, some wide character numerals\n\nfor (let i = 0; i < 10; i++) {\n  const ch = i.toString();\n  wideChar = String.fromCharCode(0xD835, 0xDFCE + i); // 0-9 bold\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(symbols_text, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDFE2 + i); // 0-9 sans serif\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(symbols_text, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDFEC + i); // 0-9 bold sans\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(symbols_text, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDFF6 + i); // 0-9 monospace\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(symbols_text, main, textord, ch, wideChar);\n} // We add these Latin-1 letters as symbols for backwards-compatibility,\n// but they are not actually in the font, nor are they supported by the\n// Unicode accent mechanism, so they fall back to Times font and look ugly.\n// TODO(edemaine): Fix this.\n\n\nconst extraLatin = \"\\u00d0\\u00de\\u00fe\";\n\nfor (let i = 0; i < extraLatin.length; i++) {\n  const ch = extraLatin.charAt(i);\n  defineSymbol(math, main, mathord, ch, ch);\n  defineSymbol(symbols_text, main, textord, ch, ch);\n}\n;// CONCATENATED MODULE: ./src/wide-character.js\n/**\n * This file provides support for Unicode range U+1D400 to U+1D7FF,\n * Mathematical Alphanumeric Symbols.\n *\n * Function wideCharacterFont takes a wide character as input and returns\n * the font information necessary to render it properly.\n */\n\n/**\n * Data below is from https://www.unicode.org/charts/PDF/U1D400.pdf\n * That document sorts characters into groups by font type, say bold or italic.\n *\n * In the arrays below, each subarray consists three elements:\n *      * The CSS class of that group when in math mode.\n *      * The CSS class of that group when in text mode.\n *      * The font name, so that KaTeX can get font metrics.\n */\n\nconst wideLatinLetterData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // A-Z bold upright\n[\"mathbf\", \"textbf\", \"Main-Bold\"], // a-z bold upright\n[\"mathnormal\", \"textit\", \"Math-Italic\"], // A-Z italic\n[\"mathnormal\", \"textit\", \"Math-Italic\"], // a-z italic\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // A-Z bold italic\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // a-z bold italic\n// Map fancy A-Z letters to script, not calligraphic.\n// This aligns with unicode-math and math fonts (except Cambria Math).\n[\"mathscr\", \"textscr\", \"Script-Regular\"], // A-Z script\n[\"\", \"\", \"\"], // a-z script.  No font\n[\"\", \"\", \"\"], // A-Z bold script. No font\n[\"\", \"\", \"\"], // a-z bold script. No font\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // A-Z Fraktur\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // a-z Fraktur\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // A-Z double-struck\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // k double-struck\n// Note that we are using a bold font, but font metrics for regular Fraktur.\n[\"mathboldfrak\", \"textboldfrak\", \"Fraktur-Regular\"], // A-Z bold Fraktur\n[\"mathboldfrak\", \"textboldfrak\", \"Fraktur-Regular\"], // a-z bold Fraktur\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // A-Z sans-serif\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // a-z sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // A-Z bold sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // a-z bold sans-serif\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // A-Z italic sans-serif\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // a-z italic sans-serif\n[\"\", \"\", \"\"], // A-Z bold italic sans. No font\n[\"\", \"\", \"\"], // a-z bold italic sans. No font\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"], // A-Z monospace\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"] // a-z monospace\n];\nconst wideNumeralData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // 0-9 bold\n[\"\", \"\", \"\"], // 0-9 double-struck. No KaTeX font.\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // 0-9 sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // 0-9 bold sans-serif\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"] // 0-9 monospace\n];\nconst wideCharacterFont = function (wideChar, mode) {\n  // IE doesn't support codePointAt(). So work with the surrogate pair.\n  const H = wideChar.charCodeAt(0); // high surrogate\n\n  const L = wideChar.charCodeAt(1); // low surrogate\n\n  const codePoint = (H - 0xD800) * 0x400 + (L - 0xDC00) + 0x10000;\n  const j = mode === \"math\" ? 0 : 1; // column index for CSS class.\n\n  if (0x1D400 <= codePoint && codePoint < 0x1D6A4) {\n    // wideLatinLetterData contains exactly 26 chars on each row.\n    // So we can calculate the relevant row. No traverse necessary.\n    const i = Math.floor((codePoint - 0x1D400) / 26);\n    return [wideLatinLetterData[i][2], wideLatinLetterData[i][j]];\n  } else if (0x1D7CE <= codePoint && codePoint <= 0x1D7FF) {\n    // Numerals, ten per row.\n    const i = Math.floor((codePoint - 0x1D7CE) / 10);\n    return [wideNumeralData[i][2], wideNumeralData[i][j]];\n  } else if (codePoint === 0x1D6A5 || codePoint === 0x1D6A6) {\n    // dotless i or j\n    return [wideLatinLetterData[0][2], wideLatinLetterData[0][j]];\n  } else if (0x1D6A6 < codePoint && codePoint < 0x1D7CE) {\n    // Greek letters. Not supported, yet.\n    return [\"\", \"\"];\n  } else {\n    // We don't support any wide characters outside 1D400–1D7FF.\n    throw new src_ParseError(\"Unsupported character: \" + wideChar);\n  }\n};\n;// CONCATENATED MODULE: ./src/buildCommon.js\n/* eslint no-console:0 */\n\n/**\n * This module contains general functions that can be used for building\n * different kinds of domTree nodes in a consistent manner.\n */\n\n\n\n\n\n\n\n/**\n * Looks up the given symbol in fontMetrics, after applying any symbol\n * replacements defined in symbol.js\n */\nconst lookupSymbol = function (value, // TODO(#963): Use a union type for this.\nfontName, mode) {\n  // Replace the value with its replaced value from symbol.js\n  if (src_symbols[mode][value] && src_symbols[mode][value].replace) {\n    value = src_symbols[mode][value].replace;\n  }\n\n  return {\n    value: value,\n    metrics: getCharacterMetrics(value, fontName, mode)\n  };\n};\n/**\n * Makes a symbolNode after translation via the list of symbols in symbols.js.\n * Correctly pulls out metrics for the character, and optionally takes a list of\n * classes to be attached to the node.\n *\n * TODO: make argument order closer to makeSpan\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n * TODO(#953): Make `options` mandatory and always pass it in.\n */\n\n\nconst makeSymbol = function (value, fontName, mode, options, classes) {\n  const lookup = lookupSymbol(value, fontName, mode);\n  const metrics = lookup.metrics;\n  value = lookup.value;\n  let symbolNode;\n\n  if (metrics) {\n    let italic = metrics.italic;\n\n    if (mode === \"text\" || options && options.font === \"mathit\") {\n      italic = 0;\n    }\n\n    symbolNode = new SymbolNode(value, metrics.height, metrics.depth, italic, metrics.skew, metrics.width, classes);\n  } else {\n    // TODO(emily): Figure out a good way to only print this in development\n    typeof console !== \"undefined\" && console.warn(\"No character metrics \" + (\"for '\" + value + \"' in style '\" + fontName + \"' and mode '\" + mode + \"'\"));\n    symbolNode = new SymbolNode(value, 0, 0, 0, 0, 0, classes);\n  }\n\n  if (options) {\n    symbolNode.maxFontSize = options.sizeMultiplier;\n\n    if (options.style.isTight()) {\n      symbolNode.classes.push(\"mtight\");\n    }\n\n    const color = options.getColor();\n\n    if (color) {\n      symbolNode.style.color = color;\n    }\n  }\n\n  return symbolNode;\n};\n/**\n * Makes a symbol in Main-Regular or AMS-Regular.\n * Used for rel, bin, open, close, inner, and punct.\n */\n\n\nconst mathsym = function (value, mode, options, classes) {\n  if (classes === void 0) {\n    classes = [];\n  }\n\n  // Decide what font to render the symbol in by its entry in the symbols\n  // table.\n  // Have a special case for when the value = \\ because the \\ is used as a\n  // textord in unsupported command errors but cannot be parsed as a regular\n  // text ordinal and is therefore not present as a symbol in the symbols\n  // table for text, as well as a special case for boldsymbol because it\n  // can be used for bold + and -\n  if (options.font === \"boldsymbol\" && lookupSymbol(value, \"Main-Bold\", mode).metrics) {\n    return makeSymbol(value, \"Main-Bold\", mode, options, classes.concat([\"mathbf\"]));\n  } else if (value === \"\\\\\" || src_symbols[mode][value].font === \"main\") {\n    return makeSymbol(value, \"Main-Regular\", mode, options, classes);\n  } else {\n    return makeSymbol(value, \"AMS-Regular\", mode, options, classes.concat([\"amsrm\"]));\n  }\n};\n/**\n * Determines which of the two font names (Main-Bold and Math-BoldItalic) and\n * corresponding style tags (mathbf or boldsymbol) to use for font \"boldsymbol\",\n * depending on the symbol.  Use this function instead of fontMap for font\n * \"boldsymbol\".\n */\n\n\nconst boldsymbol = function (value, mode, options, classes, type) {\n  if (type !== \"textord\" && lookupSymbol(value, \"Math-BoldItalic\", mode).metrics) {\n    return {\n      fontName: \"Math-BoldItalic\",\n      fontClass: \"boldsymbol\"\n    };\n  } else {\n    // Some glyphs do not exist in Math-BoldItalic so we need to use\n    // Main-Bold instead.\n    return {\n      fontName: \"Main-Bold\",\n      fontClass: \"mathbf\"\n    };\n  }\n};\n/**\n * Makes either a mathord or textord in the correct font and color.\n */\n\n\nconst makeOrd = function (group, options, type) {\n  const mode = group.mode;\n  const text = group.text;\n  const classes = [\"mord\"]; // Math mode or Old font (i.e. \\rm)\n\n  const isFont = mode === \"math\" || mode === \"text\" && options.font;\n  const fontOrFamily = isFont ? options.font : options.fontFamily;\n  let wideFontName = \"\";\n  let wideFontClass = \"\";\n\n  if (text.charCodeAt(0) === 0xD835) {\n    [wideFontName, wideFontClass] = wideCharacterFont(text, mode);\n  }\n\n  if (wideFontName.length > 0) {\n    // surrogate pairs get special treatment\n    return makeSymbol(text, wideFontName, mode, options, classes.concat(wideFontClass));\n  } else if (fontOrFamily) {\n    let fontName;\n    let fontClasses;\n\n    if (fontOrFamily === \"boldsymbol\") {\n      const fontData = boldsymbol(text, mode, options, classes, type);\n      fontName = fontData.fontName;\n      fontClasses = [fontData.fontClass];\n    } else if (isFont) {\n      fontName = fontMap[fontOrFamily].fontName;\n      fontClasses = [fontOrFamily];\n    } else {\n      fontName = retrieveTextFontName(fontOrFamily, options.fontWeight, options.fontShape);\n      fontClasses = [fontOrFamily, options.fontWeight, options.fontShape];\n    }\n\n    if (lookupSymbol(text, fontName, mode).metrics) {\n      return makeSymbol(text, fontName, mode, options, classes.concat(fontClasses));\n    } else if (ligatures.hasOwnProperty(text) && fontName.slice(0, 10) === \"Typewriter\") {\n      // Deconstruct ligatures in monospace fonts (\\texttt, \\tt).\n      const parts = [];\n\n      for (let i = 0; i < text.length; i++) {\n        parts.push(makeSymbol(text[i], fontName, mode, options, classes.concat(fontClasses)));\n      }\n\n      return makeFragment(parts);\n    }\n  } // Makes a symbol in the default font for mathords and textords.\n\n\n  if (type === \"mathord\") {\n    return makeSymbol(text, \"Math-Italic\", mode, options, classes.concat([\"mathnormal\"]));\n  } else if (type === \"textord\") {\n    const font = src_symbols[mode][text] && src_symbols[mode][text].font;\n\n    if (font === \"ams\") {\n      const fontName = retrieveTextFontName(\"amsrm\", options.fontWeight, options.fontShape);\n      return makeSymbol(text, fontName, mode, options, classes.concat(\"amsrm\", options.fontWeight, options.fontShape));\n    } else if (font === \"main\" || !font) {\n      const fontName = retrieveTextFontName(\"textrm\", options.fontWeight, options.fontShape);\n      return makeSymbol(text, fontName, mode, options, classes.concat(options.fontWeight, options.fontShape));\n    } else {\n      // fonts added by plugins\n      const fontName = retrieveTextFontName(font, options.fontWeight, options.fontShape); // We add font name as a css class\n\n      return makeSymbol(text, fontName, mode, options, classes.concat(fontName, options.fontWeight, options.fontShape));\n    }\n  } else {\n    throw new Error(\"unexpected type: \" + type + \" in makeOrd\");\n  }\n};\n/**\n * Returns true if subsequent symbolNodes have the same classes, skew, maxFont,\n * and styles.\n */\n\n\nconst canCombine = (prev, next) => {\n  if (createClass(prev.classes) !== createClass(next.classes) || prev.skew !== next.skew || prev.maxFontSize !== next.maxFontSize) {\n    return false;\n  } // If prev and next both are just \"mbin\"s or \"mord\"s we don't combine them\n  // so that the proper spacing can be preserved.\n\n\n  if (prev.classes.length === 1) {\n    const cls = prev.classes[0];\n\n    if (cls === \"mbin\" || cls === \"mord\") {\n      return false;\n    }\n  }\n\n  for (const style in prev.style) {\n    if (prev.style.hasOwnProperty(style) && prev.style[style] !== next.style[style]) {\n      return false;\n    }\n  }\n\n  for (const style in next.style) {\n    if (next.style.hasOwnProperty(style) && prev.style[style] !== next.style[style]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Combine consecutive domTree.symbolNodes into a single symbolNode.\n * Note: this function mutates the argument.\n */\n\n\nconst tryCombineChars = chars => {\n  for (let i = 0; i < chars.length - 1; i++) {\n    const prev = chars[i];\n    const next = chars[i + 1];\n\n    if (prev instanceof SymbolNode && next instanceof SymbolNode && canCombine(prev, next)) {\n      prev.text += next.text;\n      prev.height = Math.max(prev.height, next.height);\n      prev.depth = Math.max(prev.depth, next.depth); // Use the last character's italic correction since we use\n      // it to add padding to the right of the span created from\n      // the combined characters.\n\n      prev.italic = next.italic;\n      chars.splice(i + 1, 1);\n      i--;\n    }\n  }\n\n  return chars;\n};\n/**\n * Calculate the height, depth, and maxFontSize of an element based on its\n * children.\n */\n\n\nconst sizeElementFromChildren = function (elem) {\n  let height = 0;\n  let depth = 0;\n  let maxFontSize = 0;\n\n  for (let i = 0; i < elem.children.length; i++) {\n    const child = elem.children[i];\n\n    if (child.height > height) {\n      height = child.height;\n    }\n\n    if (child.depth > depth) {\n      depth = child.depth;\n    }\n\n    if (child.maxFontSize > maxFontSize) {\n      maxFontSize = child.maxFontSize;\n    }\n  }\n\n  elem.height = height;\n  elem.depth = depth;\n  elem.maxFontSize = maxFontSize;\n};\n/**\n * Makes a span with the given list of classes, list of children, and options.\n *\n * TODO(#953): Ensure that `options` is always provided (currently some call\n * sites don't pass it) and make the type below mandatory.\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n */\n\n\nconst makeSpan = function (classes, children, options, style) {\n  const span = new Span(classes, children, options, style);\n  sizeElementFromChildren(span);\n  return span;\n}; // SVG one is simpler -- doesn't require height, depth, max-font setting.\n// This is also a separate method for typesafety.\n\n\nconst makeSvgSpan = (classes, children, options, style) => new Span(classes, children, options, style);\n\nconst makeLineSpan = function (className, options, thickness) {\n  const line = makeSpan([className], [], options);\n  line.height = Math.max(thickness || options.fontMetrics().defaultRuleThickness, options.minRuleThickness);\n  line.style.borderBottomWidth = makeEm(line.height);\n  line.maxFontSize = 1.0;\n  return line;\n};\n/**\n * Makes an anchor with the given href, list of classes, list of children,\n * and options.\n */\n\n\nconst makeAnchor = function (href, classes, children, options) {\n  const anchor = new Anchor(href, classes, children, options);\n  sizeElementFromChildren(anchor);\n  return anchor;\n};\n/**\n * Makes a document fragment with the given list of children.\n */\n\n\nconst makeFragment = function (children) {\n  const fragment = new DocumentFragment(children);\n  sizeElementFromChildren(fragment);\n  return fragment;\n};\n/**\n * Wraps group in a span if it's a document fragment, allowing to apply classes\n * and styles\n */\n\n\nconst wrapFragment = function (group, options) {\n  if (group instanceof DocumentFragment) {\n    return makeSpan([], [group], options);\n  }\n\n  return group;\n}; // These are exact object types to catch typos in the names of the optional fields.\n\n\n// Computes the updated `children` list and the overall depth.\n//\n// This helper function for makeVList makes it easier to enforce type safety by\n// allowing early exits (returns) in the logic.\nconst getVListChildrenAndDepth = function (params) {\n  if (params.positionType === \"individualShift\") {\n    const oldChildren = params.children;\n    const children = [oldChildren[0]]; // Add in kerns to the list of params.children to get each element to be\n    // shifted to the correct specified shift\n\n    const depth = -oldChildren[0].shift - oldChildren[0].elem.depth;\n    let currPos = depth;\n\n    for (let i = 1; i < oldChildren.length; i++) {\n      const diff = -oldChildren[i].shift - currPos - oldChildren[i].elem.depth;\n      const size = diff - (oldChildren[i - 1].elem.height + oldChildren[i - 1].elem.depth);\n      currPos = currPos + diff;\n      children.push({\n        type: \"kern\",\n        size\n      });\n      children.push(oldChildren[i]);\n    }\n\n    return {\n      children,\n      depth\n    };\n  }\n\n  let depth;\n\n  if (params.positionType === \"top\") {\n    // We always start at the bottom, so calculate the bottom by adding up\n    // all the sizes\n    let bottom = params.positionData;\n\n    for (let i = 0; i < params.children.length; i++) {\n      const child = params.children[i];\n      bottom -= child.type === \"kern\" ? child.size : child.elem.height + child.elem.depth;\n    }\n\n    depth = bottom;\n  } else if (params.positionType === \"bottom\") {\n    depth = -params.positionData;\n  } else {\n    const firstChild = params.children[0];\n\n    if (firstChild.type !== \"elem\") {\n      throw new Error('First child must have type \"elem\".');\n    }\n\n    if (params.positionType === \"shift\") {\n      depth = -firstChild.elem.depth - params.positionData;\n    } else if (params.positionType === \"firstBaseline\") {\n      depth = -firstChild.elem.depth;\n    } else {\n      throw new Error(\"Invalid positionType \" + params.positionType + \".\");\n    }\n  }\n\n  return {\n    children: params.children,\n    depth\n  };\n};\n/**\n * Makes a vertical list by stacking elements and kerns on top of each other.\n * Allows for many different ways of specifying the positioning method.\n *\n * See VListParam documentation above.\n */\n\n\nconst makeVList = function (params, options) {\n  const {\n    children,\n    depth\n  } = getVListChildrenAndDepth(params); // Create a strut that is taller than any list item. The strut is added to\n  // each item, where it will determine the item's baseline. Since it has\n  // `overflow:hidden`, the strut's top edge will sit on the item's line box's\n  // top edge and the strut's bottom edge will sit on the item's baseline,\n  // with no additional line-height spacing. This allows the item baseline to\n  // be positioned precisely without worrying about font ascent and\n  // line-height.\n\n  let pstrutSize = 0;\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n\n    if (child.type === \"elem\") {\n      const elem = child.elem;\n      pstrutSize = Math.max(pstrutSize, elem.maxFontSize, elem.height);\n    }\n  }\n\n  pstrutSize += 2;\n  const pstrut = makeSpan([\"pstrut\"], []);\n  pstrut.style.height = makeEm(pstrutSize); // Create a new list of actual children at the correct offsets\n\n  const realChildren = [];\n  let minPos = depth;\n  let maxPos = depth;\n  let currPos = depth;\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n\n    if (child.type === \"kern\") {\n      currPos += child.size;\n    } else {\n      const elem = child.elem;\n      const classes = child.wrapperClasses || [];\n      const style = child.wrapperStyle || {};\n      const childWrap = makeSpan(classes, [pstrut, elem], undefined, style);\n      childWrap.style.top = makeEm(-pstrutSize - currPos - elem.depth);\n\n      if (child.marginLeft) {\n        childWrap.style.marginLeft = child.marginLeft;\n      }\n\n      if (child.marginRight) {\n        childWrap.style.marginRight = child.marginRight;\n      }\n\n      realChildren.push(childWrap);\n      currPos += elem.height + elem.depth;\n    }\n\n    minPos = Math.min(minPos, currPos);\n    maxPos = Math.max(maxPos, currPos);\n  } // The vlist contents go in a table-cell with `vertical-align:bottom`.\n  // This cell's bottom edge will determine the containing table's baseline\n  // without overly expanding the containing line-box.\n\n\n  const vlist = makeSpan([\"vlist\"], realChildren);\n  vlist.style.height = makeEm(maxPos); // A second row is used if necessary to represent the vlist's depth.\n\n  let rows;\n\n  if (minPos < 0) {\n    // We will define depth in an empty span with display: table-cell.\n    // It should render with the height that we define. But Chrome, in\n    // contenteditable mode only, treats that span as if it contains some\n    // text content. And that min-height over-rides our desired height.\n    // So we put another empty span inside the depth strut span.\n    const emptySpan = makeSpan([], []);\n    const depthStrut = makeSpan([\"vlist\"], [emptySpan]);\n    depthStrut.style.height = makeEm(-minPos); // Safari wants the first row to have inline content; otherwise it\n    // puts the bottom of the *second* row on the baseline.\n\n    const topStrut = makeSpan([\"vlist-s\"], [new SymbolNode(\"\\u200b\")]);\n    rows = [makeSpan([\"vlist-r\"], [vlist, topStrut]), makeSpan([\"vlist-r\"], [depthStrut])];\n  } else {\n    rows = [makeSpan([\"vlist-r\"], [vlist])];\n  }\n\n  const vtable = makeSpan([\"vlist-t\"], rows);\n\n  if (rows.length === 2) {\n    vtable.classes.push(\"vlist-t2\");\n  }\n\n  vtable.height = maxPos;\n  vtable.depth = -minPos;\n  return vtable;\n}; // Glue is a concept from TeX which is a flexible space between elements in\n// either a vertical or horizontal list. In KaTeX, at least for now, it's\n// static space between elements in a horizontal layout.\n\n\nconst makeGlue = (measurement, options) => {\n  // Make an empty span for the space\n  const rule = makeSpan([\"mspace\"], [], options);\n  const size = calculateSize(measurement, options);\n  rule.style.marginRight = makeEm(size);\n  return rule;\n}; // Takes font options, and returns the appropriate fontLookup name\n\n\nconst retrieveTextFontName = function (fontFamily, fontWeight, fontShape) {\n  let baseFontName = \"\";\n\n  switch (fontFamily) {\n    case \"amsrm\":\n      baseFontName = \"AMS\";\n      break;\n\n    case \"textrm\":\n      baseFontName = \"Main\";\n      break;\n\n    case \"textsf\":\n      baseFontName = \"SansSerif\";\n      break;\n\n    case \"texttt\":\n      baseFontName = \"Typewriter\";\n      break;\n\n    default:\n      baseFontName = fontFamily;\n    // use fonts added by a plugin\n  }\n\n  let fontStylesName;\n\n  if (fontWeight === \"textbf\" && fontShape === \"textit\") {\n    fontStylesName = \"BoldItalic\";\n  } else if (fontWeight === \"textbf\") {\n    fontStylesName = \"Bold\";\n  } else if (fontWeight === \"textit\") {\n    fontStylesName = \"Italic\";\n  } else {\n    fontStylesName = \"Regular\";\n  }\n\n  return baseFontName + \"-\" + fontStylesName;\n};\n/**\n * Maps TeX font commands to objects containing:\n * - variant: string used for \"mathvariant\" attribute in buildMathML.js\n * - fontName: the \"style\" parameter to fontMetrics.getCharacterMetrics\n */\n// A map between tex font commands an MathML mathvariant attribute values\n\n\nconst fontMap = {\n  // styles\n  \"mathbf\": {\n    variant: \"bold\",\n    fontName: \"Main-Bold\"\n  },\n  \"mathrm\": {\n    variant: \"normal\",\n    fontName: \"Main-Regular\"\n  },\n  \"textit\": {\n    variant: \"italic\",\n    fontName: \"Main-Italic\"\n  },\n  \"mathit\": {\n    variant: \"italic\",\n    fontName: \"Main-Italic\"\n  },\n  \"mathnormal\": {\n    variant: \"italic\",\n    fontName: \"Math-Italic\"\n  },\n  \"mathsfit\": {\n    variant: \"sans-serif-italic\",\n    fontName: \"SansSerif-Italic\"\n  },\n  // \"boldsymbol\" is missing because they require the use of multiple fonts:\n  // Math-BoldItalic and Main-Bold.  This is handled by a special case in\n  // makeOrd which ends up calling boldsymbol.\n  // families\n  \"mathbb\": {\n    variant: \"double-struck\",\n    fontName: \"AMS-Regular\"\n  },\n  \"mathcal\": {\n    variant: \"script\",\n    fontName: \"Caligraphic-Regular\"\n  },\n  \"mathfrak\": {\n    variant: \"fraktur\",\n    fontName: \"Fraktur-Regular\"\n  },\n  \"mathscr\": {\n    variant: \"script\",\n    fontName: \"Script-Regular\"\n  },\n  \"mathsf\": {\n    variant: \"sans-serif\",\n    fontName: \"SansSerif-Regular\"\n  },\n  \"mathtt\": {\n    variant: \"monospace\",\n    fontName: \"Typewriter-Regular\"\n  }\n};\nconst svgData = {\n  //   path, width, height\n  vec: [\"vec\", 0.471, 0.714],\n  // values from the font glyph\n  oiintSize1: [\"oiintSize1\", 0.957, 0.499],\n  // oval to overlay the integrand\n  oiintSize2: [\"oiintSize2\", 1.472, 0.659],\n  oiiintSize1: [\"oiiintSize1\", 1.304, 0.499],\n  oiiintSize2: [\"oiiintSize2\", 1.98, 0.659]\n};\n\nconst staticSvg = function (value, options) {\n  // Create a span with inline SVG for the element.\n  const [pathName, width, height] = svgData[value];\n  const path = new PathNode(pathName);\n  const svgNode = new SvgNode([path], {\n    \"width\": makeEm(width),\n    \"height\": makeEm(height),\n    // Override CSS rule `.katex svg { width: 100% }`\n    \"style\": \"width:\" + makeEm(width),\n    \"viewBox\": \"0 0 \" + 1000 * width + \" \" + 1000 * height,\n    \"preserveAspectRatio\": \"xMinYMin\"\n  });\n  const span = makeSvgSpan([\"overlay\"], [svgNode], options);\n  span.height = height;\n  span.style.height = makeEm(height);\n  span.style.width = makeEm(width);\n  return span;\n};\n\n/* harmony default export */ var buildCommon = ({\n  fontMap,\n  makeSymbol,\n  mathsym,\n  makeSpan,\n  makeSvgSpan,\n  makeLineSpan,\n  makeAnchor,\n  makeFragment,\n  wrapFragment,\n  makeVList,\n  makeOrd,\n  makeGlue,\n  staticSvg,\n  svgData,\n  tryCombineChars\n});\n;// CONCATENATED MODULE: ./src/spacingData.js\n/**\n * Describes spaces between different classes of atoms.\n */\nconst thinspace = {\n  number: 3,\n  unit: \"mu\"\n};\nconst mediumspace = {\n  number: 4,\n  unit: \"mu\"\n};\nconst thickspace = {\n  number: 5,\n  unit: \"mu\"\n}; // Making the type below exact with all optional fields doesn't work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n\n// Spacing relationships for display and text styles\nconst spacings = {\n  mord: {\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mop: {\n    mord: thinspace,\n    mop: thinspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mbin: {\n    mord: mediumspace,\n    mop: mediumspace,\n    mopen: mediumspace,\n    minner: mediumspace\n  },\n  mrel: {\n    mord: thickspace,\n    mop: thickspace,\n    mopen: thickspace,\n    minner: thickspace\n  },\n  mopen: {},\n  mclose: {\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mpunct: {\n    mord: thinspace,\n    mop: thinspace,\n    mrel: thickspace,\n    mopen: thinspace,\n    mclose: thinspace,\n    mpunct: thinspace,\n    minner: thinspace\n  },\n  minner: {\n    mord: thinspace,\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    mopen: thinspace,\n    mpunct: thinspace,\n    minner: thinspace\n  }\n}; // Spacing relationships for script and scriptscript styles\n\nconst tightSpacings = {\n  mord: {\n    mop: thinspace\n  },\n  mop: {\n    mord: thinspace,\n    mop: thinspace\n  },\n  mbin: {},\n  mrel: {},\n  mopen: {},\n  mclose: {\n    mop: thinspace\n  },\n  mpunct: {},\n  minner: {\n    mop: thinspace\n  }\n};\n;// CONCATENATED MODULE: ./src/defineFunction.js\n/** Context provided to function handlers for error messages. */\n// Note: reverse the order of the return type union will cause a flow error.\n// See https://github.com/facebook/flow/issues/3663.\n// More general version of `HtmlBuilder` for nodes (e.g. \\sum, accent types)\n// whose presence impacts super/subscripting. In this case, ParseNode<\"supsub\">\n// delegates its HTML building to the HtmlBuilder corresponding to these nodes.\n\n/**\n * Final function spec for use at parse time.\n * This is almost identical to `FunctionPropSpec`, except it\n * 1. includes the function handler, and\n * 2. requires all arguments except argTypes.\n * It is generated by `defineFunction()` below.\n */\n\n/**\n * All registered functions.\n * `functions.js` just exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary.\n */\nconst _functions = {};\n/**\n * All HTML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\n\nconst _htmlGroupBuilders = {};\n/**\n * All MathML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\n\nconst _mathmlGroupBuilders = {};\nfunction defineFunction(_ref) {\n  let {\n    type,\n    names,\n    props,\n    handler,\n    htmlBuilder,\n    mathmlBuilder\n  } = _ref;\n  // Set default values of functions\n  const data = {\n    type,\n    numArgs: props.numArgs,\n    argTypes: props.argTypes,\n    allowedInArgument: !!props.allowedInArgument,\n    allowedInText: !!props.allowedInText,\n    allowedInMath: props.allowedInMath === undefined ? true : props.allowedInMath,\n    numOptionalArgs: props.numOptionalArgs || 0,\n    infix: !!props.infix,\n    primitive: !!props.primitive,\n    handler: handler\n  };\n\n  for (let i = 0; i < names.length; ++i) {\n    _functions[names[i]] = data;\n  }\n\n  if (type) {\n    if (htmlBuilder) {\n      _htmlGroupBuilders[type] = htmlBuilder;\n    }\n\n    if (mathmlBuilder) {\n      _mathmlGroupBuilders[type] = mathmlBuilder;\n    }\n  }\n}\n/**\n * Use this to register only the HTML and MathML builders for a function (e.g.\n * if the function's ParseNode is generated in Parser.js rather than via a\n * stand-alone handler provided to `defineFunction`).\n */\n\nfunction defineFunctionBuilders(_ref2) {\n  let {\n    type,\n    htmlBuilder,\n    mathmlBuilder\n  } = _ref2;\n  defineFunction({\n    type,\n    names: [],\n    props: {\n      numArgs: 0\n    },\n\n    handler() {\n      throw new Error('Should never be called.');\n    },\n\n    htmlBuilder,\n    mathmlBuilder\n  });\n}\nconst normalizeArgument = function (arg) {\n  return arg.type === \"ordgroup\" && arg.body.length === 1 ? arg.body[0] : arg;\n}; // Since the corresponding buildHTML/buildMathML function expects a\n// list of elements, we normalize for different kinds of arguments\n\nconst ordargument = function (arg) {\n  return arg.type === \"ordgroup\" ? arg.body : [arg];\n};\n;// CONCATENATED MODULE: ./src/buildHTML.js\n/**\n * This file does the main work of building a domTree structure from a parse\n * tree. The entry point is the `buildHTML` function, which takes a parse tree.\n * Then, the buildExpression, buildGroup, and various groupBuilders functions\n * are called, to produce a final HTML tree.\n */\n\n\n\n\n\n\n\n\n\nconst buildHTML_makeSpan = buildCommon.makeSpan; // Binary atoms (first class `mbin`) change into ordinary atoms (`mord`)\n// depending on their surroundings. See TeXbook pg. 442-446, Rules 5 and 6,\n// and the text before Rule 19.\n\nconst binLeftCanceller = [\"leftmost\", \"mbin\", \"mopen\", \"mrel\", \"mop\", \"mpunct\"];\nconst binRightCanceller = [\"rightmost\", \"mrel\", \"mclose\", \"mpunct\"];\nconst styleMap = {\n  \"display\": src_Style.DISPLAY,\n  \"text\": src_Style.TEXT,\n  \"script\": src_Style.SCRIPT,\n  \"scriptscript\": src_Style.SCRIPTSCRIPT\n};\nconst DomEnum = {\n  mord: \"mord\",\n  mop: \"mop\",\n  mbin: \"mbin\",\n  mrel: \"mrel\",\n  mopen: \"mopen\",\n  mclose: \"mclose\",\n  mpunct: \"mpunct\",\n  minner: \"minner\"\n};\n\n/**\n * Take a list of nodes, build them in order, and return a list of the built\n * nodes. documentFragments are flattened into their contents, so the\n * returned list contains no fragments. `isRealGroup` is true if `expression`\n * is a real group (no atoms will be added on either side), as opposed to\n * a partial group (e.g. one created by \\color). `surrounding` is an array\n * consisting type of nodes that will be added to the left and right.\n */\nconst buildExpression = function (expression, options, isRealGroup, surrounding) {\n  if (surrounding === void 0) {\n    surrounding = [null, null];\n  }\n\n  // Parse expressions into `groups`.\n  const groups = [];\n\n  for (let i = 0; i < expression.length; i++) {\n    const output = buildGroup(expression[i], options);\n\n    if (output instanceof DocumentFragment) {\n      const children = output.children;\n      groups.push(...children);\n    } else {\n      groups.push(output);\n    }\n  } // Combine consecutive domTree.symbolNodes into a single symbolNode.\n\n\n  buildCommon.tryCombineChars(groups); // If `expression` is a partial group, let the parent handle spacings\n  // to avoid processing groups multiple times.\n\n  if (!isRealGroup) {\n    return groups;\n  }\n\n  let glueOptions = options;\n\n  if (expression.length === 1) {\n    const node = expression[0];\n\n    if (node.type === \"sizing\") {\n      glueOptions = options.havingSize(node.size);\n    } else if (node.type === \"styling\") {\n      glueOptions = options.havingStyle(styleMap[node.style]);\n    }\n  } // Dummy spans for determining spacings between surrounding atoms.\n  // If `expression` has no atoms on the left or right, class \"leftmost\"\n  // or \"rightmost\", respectively, is used to indicate it.\n\n\n  const dummyPrev = buildHTML_makeSpan([surrounding[0] || \"leftmost\"], [], options);\n  const dummyNext = buildHTML_makeSpan([surrounding[1] || \"rightmost\"], [], options); // TODO: These code assumes that a node's math class is the first element\n  // of its `classes` array. A later cleanup should ensure this, for\n  // instance by changing the signature of `makeSpan`.\n  // Before determining what spaces to insert, perform bin cancellation.\n  // Binary operators change to ordinary symbols in some contexts.\n\n  const isRoot = isRealGroup === \"root\";\n  traverseNonSpaceNodes(groups, (node, prev) => {\n    const prevType = prev.classes[0];\n    const type = node.classes[0];\n\n    if (prevType === \"mbin\" && utils.contains(binRightCanceller, type)) {\n      prev.classes[0] = \"mord\";\n    } else if (type === \"mbin\" && utils.contains(binLeftCanceller, prevType)) {\n      node.classes[0] = \"mord\";\n    }\n  }, {\n    node: dummyPrev\n  }, dummyNext, isRoot);\n  traverseNonSpaceNodes(groups, (node, prev) => {\n    const prevType = getTypeOfDomTree(prev);\n    const type = getTypeOfDomTree(node); // 'mtight' indicates that the node is script or scriptscript style.\n\n    const space = prevType && type ? node.hasClass(\"mtight\") ? tightSpacings[prevType][type] : spacings[prevType][type] : null;\n\n    if (space) {\n      // Insert glue (spacing) after the `prev`.\n      return buildCommon.makeGlue(space, glueOptions);\n    }\n  }, {\n    node: dummyPrev\n  }, dummyNext, isRoot);\n  return groups;\n}; // Depth-first traverse non-space `nodes`, calling `callback` with the current and\n// previous node as arguments, optionally returning a node to insert after the\n// previous node. `prev` is an object with the previous node and `insertAfter`\n// function to insert after it. `next` is a node that will be added to the right.\n// Used for bin cancellation and inserting spacings.\n\nconst traverseNonSpaceNodes = function (nodes, callback, prev, next, isRoot) {\n  if (next) {\n    // temporarily append the right node, if exists\n    nodes.push(next);\n  }\n\n  let i = 0;\n\n  for (; i < nodes.length; i++) {\n    const node = nodes[i];\n    const partialGroup = checkPartialGroup(node);\n\n    if (partialGroup) {\n      // Recursive DFS\n      // $FlowFixMe: make nodes a $ReadOnlyArray by returning a new array\n      traverseNonSpaceNodes(partialGroup.children, callback, prev, null, isRoot);\n      continue;\n    } // Ignore explicit spaces (e.g., \\;, \\,) when determining what implicit\n    // spacing should go between atoms of different classes\n\n\n    const nonspace = !node.hasClass(\"mspace\");\n\n    if (nonspace) {\n      const result = callback(node, prev.node);\n\n      if (result) {\n        if (prev.insertAfter) {\n          prev.insertAfter(result);\n        } else {\n          // insert at front\n          nodes.unshift(result);\n          i++;\n        }\n      }\n    }\n\n    if (nonspace) {\n      prev.node = node;\n    } else if (isRoot && node.hasClass(\"newline\")) {\n      prev.node = buildHTML_makeSpan([\"leftmost\"]); // treat like beginning of line\n    }\n\n    prev.insertAfter = (index => n => {\n      nodes.splice(index + 1, 0, n);\n      i++;\n    })(i);\n  }\n\n  if (next) {\n    nodes.pop();\n  }\n}; // Check if given node is a partial group, i.e., does not affect spacing around.\n\n\nconst checkPartialGroup = function (node) {\n  if (node instanceof DocumentFragment || node instanceof Anchor || node instanceof Span && node.hasClass(\"enclosing\")) {\n    return node;\n  }\n\n  return null;\n}; // Return the outermost node of a domTree.\n\n\nconst getOutermostNode = function (node, side) {\n  const partialGroup = checkPartialGroup(node);\n\n  if (partialGroup) {\n    const children = partialGroup.children;\n\n    if (children.length) {\n      if (side === \"right\") {\n        return getOutermostNode(children[children.length - 1], \"right\");\n      } else if (side === \"left\") {\n        return getOutermostNode(children[0], \"left\");\n      }\n    }\n  }\n\n  return node;\n}; // Return math atom class (mclass) of a domTree.\n// If `side` is given, it will get the type of the outermost node at given side.\n\n\nconst getTypeOfDomTree = function (node, side) {\n  if (!node) {\n    return null;\n  }\n\n  if (side) {\n    node = getOutermostNode(node, side);\n  } // This makes a lot of assumptions as to where the type of atom\n  // appears.  We should do a better job of enforcing this.\n\n\n  return DomEnum[node.classes[0]] || null;\n};\nconst makeNullDelimiter = function (options, classes) {\n  const moreClasses = [\"nulldelimiter\"].concat(options.baseSizingClasses());\n  return buildHTML_makeSpan(classes.concat(moreClasses));\n};\n/**\n * buildGroup is the function that takes a group and calls the correct groupType\n * function for it. It also handles the interaction of size and style changes\n * between parents and children.\n */\n\nconst buildGroup = function (group, options, baseOptions) {\n  if (!group) {\n    return buildHTML_makeSpan();\n  }\n\n  if (_htmlGroupBuilders[group.type]) {\n    // Call the groupBuilders function\n    // $FlowFixMe\n    let groupNode = _htmlGroupBuilders[group.type](group, options); // If the size changed between the parent and the current group, account\n    // for that size difference.\n\n    if (baseOptions && options.size !== baseOptions.size) {\n      groupNode = buildHTML_makeSpan(options.sizingClasses(baseOptions), [groupNode], options);\n      const multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier;\n      groupNode.height *= multiplier;\n      groupNode.depth *= multiplier;\n    }\n\n    return groupNode;\n  } else {\n    throw new src_ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n  }\n};\n/**\n * Combine an array of HTML DOM nodes (e.g., the output of `buildExpression`)\n * into an unbreakable HTML node of class .base, with proper struts to\n * guarantee correct vertical extent.  `buildHTML` calls this repeatedly to\n * make up the entire expression as a sequence of unbreakable units.\n */\n\nfunction buildHTMLUnbreakable(children, options) {\n  // Compute height and depth of this chunk.\n  const body = buildHTML_makeSpan([\"base\"], children, options); // Add strut, which ensures that the top of the HTML element falls at\n  // the height of the expression, and the bottom of the HTML element\n  // falls at the depth of the expression.\n\n  const strut = buildHTML_makeSpan([\"strut\"]);\n  strut.style.height = makeEm(body.height + body.depth);\n\n  if (body.depth) {\n    strut.style.verticalAlign = makeEm(-body.depth);\n  }\n\n  body.children.unshift(strut);\n  return body;\n}\n/**\n * Take an entire parse tree, and build it into an appropriate set of HTML\n * nodes.\n */\n\n\nfunction buildHTML(tree, options) {\n  // Strip off outer tag wrapper for processing below.\n  let tag = null;\n\n  if (tree.length === 1 && tree[0].type === \"tag\") {\n    tag = tree[0].tag;\n    tree = tree[0].body;\n  } // Build the expression contained in the tree\n\n\n  const expression = buildExpression(tree, options, \"root\");\n  let eqnNum;\n\n  if (expression.length === 2 && expression[1].hasClass(\"tag\")) {\n    // An environment with automatic equation numbers, e.g. {gather}.\n    eqnNum = expression.pop();\n  }\n\n  const children = []; // Create one base node for each chunk between potential line breaks.\n  // The TeXBook [p.173] says \"A formula will be broken only after a\n  // relation symbol like $=$ or $<$ or $\\rightarrow$, or after a binary\n  // operation symbol like $+$ or $-$ or $\\times$, where the relation or\n  // binary operation is on the ``outer level'' of the formula (i.e., not\n  // enclosed in {...} and not part of an \\over construction).\"\n\n  let parts = [];\n\n  for (let i = 0; i < expression.length; i++) {\n    parts.push(expression[i]);\n\n    if (expression[i].hasClass(\"mbin\") || expression[i].hasClass(\"mrel\") || expression[i].hasClass(\"allowbreak\")) {\n      // Put any post-operator glue on same line as operator.\n      // Watch for \\nobreak along the way, and stop at \\newline.\n      let nobreak = false;\n\n      while (i < expression.length - 1 && expression[i + 1].hasClass(\"mspace\") && !expression[i + 1].hasClass(\"newline\")) {\n        i++;\n        parts.push(expression[i]);\n\n        if (expression[i].hasClass(\"nobreak\")) {\n          nobreak = true;\n        }\n      } // Don't allow break if \\nobreak among the post-operator glue.\n\n\n      if (!nobreak) {\n        children.push(buildHTMLUnbreakable(parts, options));\n        parts = [];\n      }\n    } else if (expression[i].hasClass(\"newline\")) {\n      // Write the line except the newline\n      parts.pop();\n\n      if (parts.length > 0) {\n        children.push(buildHTMLUnbreakable(parts, options));\n        parts = [];\n      } // Put the newline at the top level\n\n\n      children.push(expression[i]);\n    }\n  }\n\n  if (parts.length > 0) {\n    children.push(buildHTMLUnbreakable(parts, options));\n  } // Now, if there was a tag, build it too and append it as a final child.\n\n\n  let tagChild;\n\n  if (tag) {\n    tagChild = buildHTMLUnbreakable(buildExpression(tag, options, true));\n    tagChild.classes = [\"tag\"];\n    children.push(tagChild);\n  } else if (eqnNum) {\n    children.push(eqnNum);\n  }\n\n  const htmlNode = buildHTML_makeSpan([\"katex-html\"], children);\n  htmlNode.setAttribute(\"aria-hidden\", \"true\"); // Adjust the strut of the tag to be the maximum height of all children\n  // (the height of the enclosing htmlNode) for proper vertical alignment.\n\n  if (tagChild) {\n    const strut = tagChild.children[0];\n    strut.style.height = makeEm(htmlNode.height + htmlNode.depth);\n\n    if (htmlNode.depth) {\n      strut.style.verticalAlign = makeEm(-htmlNode.depth);\n    }\n  }\n\n  return htmlNode;\n}\n;// CONCATENATED MODULE: ./src/mathMLTree.js\n/**\n * These objects store data about MathML nodes. This is the MathML equivalent\n * of the types in domTree.js. Since MathML handles its own rendering, and\n * since we're mainly using MathML to improve accessibility, we don't manage\n * any of the styling state that the plain DOM nodes do.\n *\n * The `toNode` and `toMarkup` functions work similarly to how they do in\n * domTree.js, creating namespaced DOM nodes and HTML text markup respectively.\n */\n\n\n\n\nfunction newDocumentFragment(children) {\n  return new DocumentFragment(children);\n}\n/**\n * This node represents a general purpose MathML node of any type. The\n * constructor requires the type of node to create (for example, `\"mo\"` or\n * `\"mspace\"`, corresponding to `<mo>` and `<mspace>` tags).\n */\n\nclass MathNode {\n  constructor(type, children, classes) {\n    this.type = void 0;\n    this.attributes = void 0;\n    this.children = void 0;\n    this.classes = void 0;\n    this.type = type;\n    this.attributes = {};\n    this.children = children || [];\n    this.classes = classes || [];\n  }\n  /**\n   * Sets an attribute on a MathML node. MathML depends on attributes to convey a\n   * semantic content, so this is used heavily.\n   */\n\n\n  setAttribute(name, value) {\n    this.attributes[name] = value;\n  }\n  /**\n   * Gets an attribute on a MathML node.\n   */\n\n\n  getAttribute(name) {\n    return this.attributes[name];\n  }\n  /**\n   * Converts the math node into a MathML-namespaced DOM element.\n   */\n\n\n  toNode() {\n    const node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", this.type);\n\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    if (this.classes.length > 0) {\n      node.className = createClass(this.classes);\n    }\n\n    for (let i = 0; i < this.children.length; i++) {\n      // Combine multiple TextNodes into one TextNode, to prevent\n      // screen readers from reading each as a separate word [#3995]\n      if (this.children[i] instanceof TextNode && this.children[i + 1] instanceof TextNode) {\n        let text = this.children[i].toText() + this.children[++i].toText();\n\n        while (this.children[i + 1] instanceof TextNode) {\n          text += this.children[++i].toText();\n        }\n\n        node.appendChild(new TextNode(text).toNode());\n      } else {\n        node.appendChild(this.children[i].toNode());\n      }\n    }\n\n    return node;\n  }\n  /**\n   * Converts the math node into an HTML markup string.\n   */\n\n\n  toMarkup() {\n    let markup = \"<\" + this.type; // Add the attributes\n\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"=\\\"\";\n        markup += utils.escape(this.attributes[attr]);\n        markup += \"\\\"\";\n      }\n    }\n\n    if (this.classes.length > 0) {\n      markup += \" class =\\\"\" + utils.escape(createClass(this.classes)) + \"\\\"\";\n    }\n\n    markup += \">\";\n\n    for (let i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</\" + this.type + \">\";\n    return markup;\n  }\n  /**\n   * Converts the math node into a string, similar to innerText, but escaped.\n   */\n\n\n  toText() {\n    return this.children.map(child => child.toText()).join(\"\");\n  }\n\n}\n/**\n * This node represents a piece of text.\n */\n\nclass TextNode {\n  constructor(text) {\n    this.text = void 0;\n    this.text = text;\n  }\n  /**\n   * Converts the text node into a DOM text node.\n   */\n\n\n  toNode() {\n    return document.createTextNode(this.text);\n  }\n  /**\n   * Converts the text node into escaped HTML markup\n   * (representing the text itself).\n   */\n\n\n  toMarkup() {\n    return utils.escape(this.toText());\n  }\n  /**\n   * Converts the text node into a string\n   * (representing the text itself).\n   */\n\n\n  toText() {\n    return this.text;\n  }\n\n}\n/**\n * This node represents a space, but may render as <mspace.../> or as text,\n * depending on the width.\n */\n\nclass SpaceNode {\n  /**\n   * Create a Space node with width given in CSS ems.\n   */\n  constructor(width) {\n    this.width = void 0;\n    this.character = void 0;\n    this.width = width; // See https://www.w3.org/TR/2000/WD-MathML2-20000328/chapter6.html\n    // for a table of space-like characters.  We use Unicode\n    // representations instead of &LongNames; as it's not clear how to\n    // make the latter via document.createTextNode.\n\n    if (width >= 0.05555 && width <= 0.05556) {\n      this.character = \"\\u200a\"; // &VeryThinSpace;\n    } else if (width >= 0.1666 && width <= 0.1667) {\n      this.character = \"\\u2009\"; // &ThinSpace;\n    } else if (width >= 0.2222 && width <= 0.2223) {\n      this.character = \"\\u2005\"; // &MediumSpace;\n    } else if (width >= 0.2777 && width <= 0.2778) {\n      this.character = \"\\u2005\\u200a\"; // &ThickSpace;\n    } else if (width >= -0.05556 && width <= -0.05555) {\n      this.character = \"\\u200a\\u2063\"; // &NegativeVeryThinSpace;\n    } else if (width >= -0.1667 && width <= -0.1666) {\n      this.character = \"\\u2009\\u2063\"; // &NegativeThinSpace;\n    } else if (width >= -0.2223 && width <= -0.2222) {\n      this.character = \"\\u205f\\u2063\"; // &NegativeMediumSpace;\n    } else if (width >= -0.2778 && width <= -0.2777) {\n      this.character = \"\\u2005\\u2063\"; // &NegativeThickSpace;\n    } else {\n      this.character = null;\n    }\n  }\n  /**\n   * Converts the math node into a MathML-namespaced DOM element.\n   */\n\n\n  toNode() {\n    if (this.character) {\n      return document.createTextNode(this.character);\n    } else {\n      const node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", \"mspace\");\n      node.setAttribute(\"width\", makeEm(this.width));\n      return node;\n    }\n  }\n  /**\n   * Converts the math node into an HTML markup string.\n   */\n\n\n  toMarkup() {\n    if (this.character) {\n      return \"<mtext>\" + this.character + \"</mtext>\";\n    } else {\n      return \"<mspace width=\\\"\" + makeEm(this.width) + \"\\\"/>\";\n    }\n  }\n  /**\n   * Converts the math node into a string, similar to innerText.\n   */\n\n\n  toText() {\n    if (this.character) {\n      return this.character;\n    } else {\n      return \" \";\n    }\n  }\n\n}\n\n/* harmony default export */ var mathMLTree = ({\n  MathNode,\n  TextNode,\n  SpaceNode,\n  newDocumentFragment\n});\n;// CONCATENATED MODULE: ./src/buildMathML.js\n/**\n * This file converts a parse tree into a corresponding MathML tree. The main\n * entry point is the `buildMathML` function, which takes a parse tree from the\n * parser.\n */\n\n\n\n\n\n\n\n\n\n/**\n * Takes a symbol and converts it into a MathML text node after performing\n * optional replacement from symbols.js.\n */\nconst makeText = function (text, mode, options) {\n  if (src_symbols[mode][text] && src_symbols[mode][text].replace && text.charCodeAt(0) !== 0xD835 && !(ligatures.hasOwnProperty(text) && options && (options.fontFamily && options.fontFamily.slice(4, 6) === \"tt\" || options.font && options.font.slice(4, 6) === \"tt\"))) {\n    text = src_symbols[mode][text].replace;\n  }\n\n  return new mathMLTree.TextNode(text);\n};\n/**\n * Wrap the given array of nodes in an <mrow> node if needed, i.e.,\n * unless the array has length 1.  Always returns a single node.\n */\n\nconst makeRow = function (body) {\n  if (body.length === 1) {\n    return body[0];\n  } else {\n    return new mathMLTree.MathNode(\"mrow\", body);\n  }\n};\n/**\n * Returns the math variant as a string or null if none is required.\n */\n\nconst getVariant = function (group, options) {\n  // Handle \\text... font specifiers as best we can.\n  // MathML has a limited list of allowable mathvariant specifiers; see\n  // https://www.w3.org/TR/MathML3/chapter3.html#presm.commatt\n  if (options.fontFamily === \"texttt\") {\n    return \"monospace\";\n  } else if (options.fontFamily === \"textsf\") {\n    if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n      return \"sans-serif-bold-italic\";\n    } else if (options.fontShape === \"textit\") {\n      return \"sans-serif-italic\";\n    } else if (options.fontWeight === \"textbf\") {\n      return \"bold-sans-serif\";\n    } else {\n      return \"sans-serif\";\n    }\n  } else if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n    return \"bold-italic\";\n  } else if (options.fontShape === \"textit\") {\n    return \"italic\";\n  } else if (options.fontWeight === \"textbf\") {\n    return \"bold\";\n  }\n\n  const font = options.font;\n\n  if (!font || font === \"mathnormal\") {\n    return null;\n  }\n\n  const mode = group.mode;\n\n  if (font === \"mathit\") {\n    return \"italic\";\n  } else if (font === \"boldsymbol\") {\n    return group.type === \"textord\" ? \"bold\" : \"bold-italic\";\n  } else if (font === \"mathbf\") {\n    return \"bold\";\n  } else if (font === \"mathbb\") {\n    return \"double-struck\";\n  } else if (font === \"mathsfit\") {\n    return \"sans-serif-italic\";\n  } else if (font === \"mathfrak\") {\n    return \"fraktur\";\n  } else if (font === \"mathscr\" || font === \"mathcal\") {\n    // MathML makes no distinction between script and calligraphic\n    return \"script\";\n  } else if (font === \"mathsf\") {\n    return \"sans-serif\";\n  } else if (font === \"mathtt\") {\n    return \"monospace\";\n  }\n\n  let text = group.text;\n\n  if (utils.contains([\"\\\\imath\", \"\\\\jmath\"], text)) {\n    return null;\n  }\n\n  if (src_symbols[mode][text] && src_symbols[mode][text].replace) {\n    text = src_symbols[mode][text].replace;\n  }\n\n  const fontName = buildCommon.fontMap[font].fontName;\n\n  if (getCharacterMetrics(text, fontName, mode)) {\n    return buildCommon.fontMap[font].variant;\n  }\n\n  return null;\n};\n/**\n * Check for <mi>.</mi> which is how a dot renders in MathML,\n * or <mo separator=\"true\" lspace=\"0em\" rspace=\"0em\">,</mo>\n * which is how a braced comma {,} renders in MathML\n */\n\nfunction isNumberPunctuation(group) {\n  if (!group) {\n    return false;\n  }\n\n  if (group.type === 'mi' && group.children.length === 1) {\n    const child = group.children[0];\n    return child instanceof TextNode && child.text === '.';\n  } else if (group.type === 'mo' && group.children.length === 1 && group.getAttribute('separator') === 'true' && group.getAttribute('lspace') === '0em' && group.getAttribute('rspace') === '0em') {\n    const child = group.children[0];\n    return child instanceof TextNode && child.text === ',';\n  } else {\n    return false;\n  }\n}\n/**\n * Takes a list of nodes, builds them, and returns a list of the generated\n * MathML nodes.  Also combine consecutive <mtext> outputs into a single\n * <mtext> tag.\n */\n\n\nconst buildMathML_buildExpression = function (expression, options, isOrdgroup) {\n  if (expression.length === 1) {\n    const group = buildMathML_buildGroup(expression[0], options);\n\n    if (isOrdgroup && group instanceof MathNode && group.type === \"mo\") {\n      // When TeX writers want to suppress spacing on an operator,\n      // they often put the operator by itself inside braces.\n      group.setAttribute(\"lspace\", \"0em\");\n      group.setAttribute(\"rspace\", \"0em\");\n    }\n\n    return [group];\n  }\n\n  const groups = [];\n  let lastGroup;\n\n  for (let i = 0; i < expression.length; i++) {\n    const group = buildMathML_buildGroup(expression[i], options);\n\n    if (group instanceof MathNode && lastGroup instanceof MathNode) {\n      // Concatenate adjacent <mtext>s\n      if (group.type === 'mtext' && lastGroup.type === 'mtext' && group.getAttribute('mathvariant') === lastGroup.getAttribute('mathvariant')) {\n        lastGroup.children.push(...group.children);\n        continue; // Concatenate adjacent <mn>s\n      } else if (group.type === 'mn' && lastGroup.type === 'mn') {\n        lastGroup.children.push(...group.children);\n        continue; // Concatenate <mn>...</mn> followed by <mi>.</mi>\n      } else if (isNumberPunctuation(group) && lastGroup.type === 'mn') {\n        lastGroup.children.push(...group.children);\n        continue; // Concatenate <mi>.</mi> followed by <mn>...</mn>\n      } else if (group.type === 'mn' && isNumberPunctuation(lastGroup)) {\n        group.children = [...lastGroup.children, ...group.children];\n        groups.pop(); // Put preceding <mn>...</mn> or <mi>.</mi> inside base of\n        // <msup><mn>...base...</mn>...exponent...</msup> (or <msub>)\n      } else if ((group.type === 'msup' || group.type === 'msub') && group.children.length >= 1 && (lastGroup.type === 'mn' || isNumberPunctuation(lastGroup))) {\n        const base = group.children[0];\n\n        if (base instanceof MathNode && base.type === 'mn') {\n          base.children = [...lastGroup.children, ...base.children];\n          groups.pop();\n        } // \\not\n\n      } else if (lastGroup.type === 'mi' && lastGroup.children.length === 1) {\n        const lastChild = lastGroup.children[0];\n\n        if (lastChild instanceof TextNode && lastChild.text === '\\u0338' && (group.type === 'mo' || group.type === 'mi' || group.type === 'mn')) {\n          const child = group.children[0];\n\n          if (child instanceof TextNode && child.text.length > 0) {\n            // Overlay with combining character long solidus\n            child.text = child.text.slice(0, 1) + \"\\u0338\" + child.text.slice(1);\n            groups.pop();\n          }\n        }\n      }\n    }\n\n    groups.push(group);\n    lastGroup = group;\n  }\n\n  return groups;\n};\n/**\n * Equivalent to buildExpression, but wraps the elements in an <mrow>\n * if there's more than one.  Returns a single node instead of an array.\n */\n\nconst buildExpressionRow = function (expression, options, isOrdgroup) {\n  return makeRow(buildMathML_buildExpression(expression, options, isOrdgroup));\n};\n/**\n * Takes a group from the parser and calls the appropriate groupBuilders function\n * on it to produce a MathML node.\n */\n\nconst buildMathML_buildGroup = function (group, options) {\n  if (!group) {\n    return new mathMLTree.MathNode(\"mrow\");\n  }\n\n  if (_mathmlGroupBuilders[group.type]) {\n    // Call the groupBuilders function\n    // $FlowFixMe\n    const result = _mathmlGroupBuilders[group.type](group, options); // $FlowFixMe\n\n    return result;\n  } else {\n    throw new src_ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n  }\n};\n/**\n * Takes a full parse tree and settings and builds a MathML representation of\n * it. In particular, we put the elements from building the parse tree into a\n * <semantics> tag so we can also include that TeX source as an annotation.\n *\n * Note that we actually return a domTree element with a `<math>` inside it so\n * we can do appropriate styling.\n */\n\nfunction buildMathML(tree, texExpression, options, isDisplayMode, forMathmlOnly) {\n  const expression = buildMathML_buildExpression(tree, options); // TODO: Make a pass thru the MathML similar to buildHTML.traverseNonSpaceNodes\n  // and add spacing nodes. This is necessary only adjacent to math operators\n  // like \\sin or \\lim or to subsup elements that contain math operators.\n  // MathML takes care of the other spacing issues.\n  // Wrap up the expression in an mrow so it is presented in the semantics\n  // tag correctly, unless it's a single <mrow> or <mtable>.\n\n  let wrapper;\n\n  if (expression.length === 1 && expression[0] instanceof MathNode && utils.contains([\"mrow\", \"mtable\"], expression[0].type)) {\n    wrapper = expression[0];\n  } else {\n    wrapper = new mathMLTree.MathNode(\"mrow\", expression);\n  } // Build a TeX annotation of the source\n\n\n  const annotation = new mathMLTree.MathNode(\"annotation\", [new mathMLTree.TextNode(texExpression)]);\n  annotation.setAttribute(\"encoding\", \"application/x-tex\");\n  const semantics = new mathMLTree.MathNode(\"semantics\", [wrapper, annotation]);\n  const math = new mathMLTree.MathNode(\"math\", [semantics]);\n  math.setAttribute(\"xmlns\", \"http://www.w3.org/1998/Math/MathML\");\n\n  if (isDisplayMode) {\n    math.setAttribute(\"display\", \"block\");\n  } // You can't style <math> nodes, so we wrap the node in a span.\n  // NOTE: The span class is not typed to have <math> nodes as children, and\n  // we don't want to make the children type more generic since the children\n  // of span are expected to have more fields in `buildHtml` contexts.\n\n\n  const wrapperClass = forMathmlOnly ? \"katex\" : \"katex-mathml\"; // $FlowFixMe\n\n  return buildCommon.makeSpan([wrapperClass], [math]);\n}\n;// CONCATENATED MODULE: ./src/buildTree.js\n\n\n\n\n\n\n\nconst optionsFromSettings = function (settings) {\n  return new src_Options({\n    style: settings.displayMode ? src_Style.DISPLAY : src_Style.TEXT,\n    maxSize: settings.maxSize,\n    minRuleThickness: settings.minRuleThickness\n  });\n};\n\nconst displayWrap = function (node, settings) {\n  if (settings.displayMode) {\n    const classes = [\"katex-display\"];\n\n    if (settings.leqno) {\n      classes.push(\"leqno\");\n    }\n\n    if (settings.fleqn) {\n      classes.push(\"fleqn\");\n    }\n\n    node = buildCommon.makeSpan(classes, [node]);\n  }\n\n  return node;\n};\n\nconst buildTree = function (tree, expression, settings) {\n  const options = optionsFromSettings(settings);\n  let katexNode;\n\n  if (settings.output === \"mathml\") {\n    return buildMathML(tree, expression, options, settings.displayMode, true);\n  } else if (settings.output === \"html\") {\n    const htmlNode = buildHTML(tree, options);\n    katexNode = buildCommon.makeSpan([\"katex\"], [htmlNode]);\n  } else {\n    const mathMLNode = buildMathML(tree, expression, options, settings.displayMode, false);\n    const htmlNode = buildHTML(tree, options);\n    katexNode = buildCommon.makeSpan([\"katex\"], [mathMLNode, htmlNode]);\n  }\n\n  return displayWrap(katexNode, settings);\n};\nconst buildHTMLTree = function (tree, expression, settings) {\n  const options = optionsFromSettings(settings);\n  const htmlNode = buildHTML(tree, options);\n  const katexNode = buildCommon.makeSpan([\"katex\"], [htmlNode]);\n  return displayWrap(katexNode, settings);\n};\n/* harmony default export */ var src_buildTree = ((/* unused pure expression or super */ null && (buildTree)));\n;// CONCATENATED MODULE: ./src/stretchy.js\n/**\n * This file provides support to buildMathML.js and buildHTML.js\n * for stretchy wide elements rendered from SVG files\n * and other CSS trickery.\n */\n\n\n\n\n\nconst stretchyCodePoint = {\n  widehat: \"^\",\n  widecheck: \"ˇ\",\n  widetilde: \"~\",\n  utilde: \"~\",\n  overleftarrow: \"\\u2190\",\n  underleftarrow: \"\\u2190\",\n  xleftarrow: \"\\u2190\",\n  overrightarrow: \"\\u2192\",\n  underrightarrow: \"\\u2192\",\n  xrightarrow: \"\\u2192\",\n  underbrace: \"\\u23df\",\n  overbrace: \"\\u23de\",\n  overgroup: \"\\u23e0\",\n  undergroup: \"\\u23e1\",\n  overleftrightarrow: \"\\u2194\",\n  underleftrightarrow: \"\\u2194\",\n  xleftrightarrow: \"\\u2194\",\n  Overrightarrow: \"\\u21d2\",\n  xRightarrow: \"\\u21d2\",\n  overleftharpoon: \"\\u21bc\",\n  xleftharpoonup: \"\\u21bc\",\n  overrightharpoon: \"\\u21c0\",\n  xrightharpoonup: \"\\u21c0\",\n  xLeftarrow: \"\\u21d0\",\n  xLeftrightarrow: \"\\u21d4\",\n  xhookleftarrow: \"\\u21a9\",\n  xhookrightarrow: \"\\u21aa\",\n  xmapsto: \"\\u21a6\",\n  xrightharpoondown: \"\\u21c1\",\n  xleftharpoondown: \"\\u21bd\",\n  xrightleftharpoons: \"\\u21cc\",\n  xleftrightharpoons: \"\\u21cb\",\n  xtwoheadleftarrow: \"\\u219e\",\n  xtwoheadrightarrow: \"\\u21a0\",\n  xlongequal: \"=\",\n  xtofrom: \"\\u21c4\",\n  xrightleftarrows: \"\\u21c4\",\n  xrightequilibrium: \"\\u21cc\",\n  // Not a perfect match.\n  xleftequilibrium: \"\\u21cb\",\n  // None better available.\n  \"\\\\cdrightarrow\": \"\\u2192\",\n  \"\\\\cdleftarrow\": \"\\u2190\",\n  \"\\\\cdlongequal\": \"=\"\n};\n\nconst mathMLnode = function (label) {\n  const node = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(stretchyCodePoint[label.replace(/^\\\\/, '')])]);\n  node.setAttribute(\"stretchy\", \"true\");\n  return node;\n}; // Many of the KaTeX SVG images have been adapted from glyphs in KaTeX fonts.\n// Copyright (c) 2009-2010, Design Science, Inc. (<www.mathjax.org>)\n// Copyright (c) 2014-2017 Khan Academy (<www.khanacademy.org>)\n// Licensed under the SIL Open Font License, Version 1.1.\n// See \\nhttp://scripts.sil.org/OFL\n// Very Long SVGs\n//    Many of the KaTeX stretchy wide elements use a long SVG image and an\n//    overflow: hidden tactic to achieve a stretchy image while avoiding\n//    distortion of arrowheads or brace corners.\n//    The SVG typically contains a very long (400 em) arrow.\n//    The SVG is in a container span that has overflow: hidden, so the span\n//    acts like a window that exposes only part of the  SVG.\n//    The SVG always has a longer, thinner aspect ratio than the container span.\n//    After the SVG fills 100% of the height of the container span,\n//    there is a long arrow shaft left over. That left-over shaft is not shown.\n//    Instead, it is sliced off because the span's CSS has overflow: hidden.\n//    Thus, the reader sees an arrow that matches the subject matter width\n//    without distortion.\n//    Some functions, such as \\cancel, need to vary their aspect ratio. These\n//    functions do not get the overflow SVG treatment.\n// Second Brush Stroke\n//    Low resolution monitors struggle to display images in fine detail.\n//    So browsers apply anti-aliasing. A long straight arrow shaft therefore\n//    will sometimes appear as if it has a blurred edge.\n//    To mitigate this, these SVG files contain a second \"brush-stroke\" on the\n//    arrow shafts. That is, a second long thin rectangular SVG path has been\n//    written directly on top of each arrow shaft. This reinforcement causes\n//    some of the screen pixels to display as black instead of the anti-aliased\n//    gray pixel that a  single path would generate. So we get arrow shafts\n//    whose edges appear to be sharper.\n// In the katexImagesData object just below, the dimensions all\n// correspond to path geometry inside the relevant SVG.\n// For example, \\overrightarrow uses the same arrowhead as glyph U+2192\n// from the KaTeX Main font. The scaling factor is 1000.\n// That is, inside the font, that arrowhead is 522 units tall, which\n// corresponds to 0.522 em inside the document.\n\n\nconst katexImagesData = {\n  //   path(s), minWidth, height, align\n  overrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n  overleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n  underrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n  underleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n  xrightarrow: [[\"rightarrow\"], 1.469, 522, \"xMaxYMin\"],\n  \"\\\\cdrightarrow\": [[\"rightarrow\"], 3.0, 522, \"xMaxYMin\"],\n  // CD minwwidth2.5pc\n  xleftarrow: [[\"leftarrow\"], 1.469, 522, \"xMinYMin\"],\n  \"\\\\cdleftarrow\": [[\"leftarrow\"], 3.0, 522, \"xMinYMin\"],\n  Overrightarrow: [[\"doublerightarrow\"], 0.888, 560, \"xMaxYMin\"],\n  xRightarrow: [[\"doublerightarrow\"], 1.526, 560, \"xMaxYMin\"],\n  xLeftarrow: [[\"doubleleftarrow\"], 1.526, 560, \"xMinYMin\"],\n  overleftharpoon: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n  xleftharpoonup: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n  xleftharpoondown: [[\"leftharpoondown\"], 0.888, 522, \"xMinYMin\"],\n  overrightharpoon: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n  xrightharpoonup: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n  xrightharpoondown: [[\"rightharpoondown\"], 0.888, 522, \"xMaxYMin\"],\n  xlongequal: [[\"longequal\"], 0.888, 334, \"xMinYMin\"],\n  \"\\\\cdlongequal\": [[\"longequal\"], 3.0, 334, \"xMinYMin\"],\n  xtwoheadleftarrow: [[\"twoheadleftarrow\"], 0.888, 334, \"xMinYMin\"],\n  xtwoheadrightarrow: [[\"twoheadrightarrow\"], 0.888, 334, \"xMaxYMin\"],\n  overleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n  overbrace: [[\"leftbrace\", \"midbrace\", \"rightbrace\"], 1.6, 548],\n  underbrace: [[\"leftbraceunder\", \"midbraceunder\", \"rightbraceunder\"], 1.6, 548],\n  underleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n  xleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 1.75, 522],\n  xLeftrightarrow: [[\"doubleleftarrow\", \"doublerightarrow\"], 1.75, 560],\n  xrightleftharpoons: [[\"leftharpoondownplus\", \"rightharpoonplus\"], 1.75, 716],\n  xleftrightharpoons: [[\"leftharpoonplus\", \"rightharpoondownplus\"], 1.75, 716],\n  xhookleftarrow: [[\"leftarrow\", \"righthook\"], 1.08, 522],\n  xhookrightarrow: [[\"lefthook\", \"rightarrow\"], 1.08, 522],\n  overlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n  underlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n  overgroup: [[\"leftgroup\", \"rightgroup\"], 0.888, 342],\n  undergroup: [[\"leftgroupunder\", \"rightgroupunder\"], 0.888, 342],\n  xmapsto: [[\"leftmapsto\", \"rightarrow\"], 1.5, 522],\n  xtofrom: [[\"leftToFrom\", \"rightToFrom\"], 1.75, 528],\n  // The next three arrows are from the mhchem package.\n  // In mhchem.sty, min-length is 2.0em. But these arrows might appear in the\n  // document as \\xrightarrow or \\xrightleftharpoons. Those have\n  // min-length = 1.75em, so we set min-length on these next three to match.\n  xrightleftarrows: [[\"baraboveleftarrow\", \"rightarrowabovebar\"], 1.75, 901],\n  xrightequilibrium: [[\"baraboveshortleftharpoon\", \"rightharpoonaboveshortbar\"], 1.75, 716],\n  xleftequilibrium: [[\"shortbaraboveleftharpoon\", \"shortrightharpoonabovebar\"], 1.75, 716]\n};\n\nconst groupLength = function (arg) {\n  if (arg.type === \"ordgroup\") {\n    return arg.body.length;\n  } else {\n    return 1;\n  }\n};\n\nconst svgSpan = function (group, options) {\n  // Create a span with inline SVG for the element.\n  function buildSvgSpan_() {\n    let viewBoxWidth = 400000; // default\n\n    const label = group.label.slice(1);\n\n    if (utils.contains([\"widehat\", \"widecheck\", \"widetilde\", \"utilde\"], label)) {\n      // Each type in the `if` statement corresponds to one of the ParseNode\n      // types below. This narrowing is required to access `grp.base`.\n      // $FlowFixMe\n      const grp = group; // There are four SVG images available for each function.\n      // Choose a taller image when there are more characters.\n\n      const numChars = groupLength(grp.base);\n      let viewBoxHeight;\n      let pathName;\n      let height;\n\n      if (numChars > 5) {\n        if (label === \"widehat\" || label === \"widecheck\") {\n          viewBoxHeight = 420;\n          viewBoxWidth = 2364;\n          height = 0.42;\n          pathName = label + \"4\";\n        } else {\n          viewBoxHeight = 312;\n          viewBoxWidth = 2340;\n          height = 0.34;\n          pathName = \"tilde4\";\n        }\n      } else {\n        const imgIndex = [1, 1, 2, 2, 3, 3][numChars];\n\n        if (label === \"widehat\" || label === \"widecheck\") {\n          viewBoxWidth = [0, 1062, 2364, 2364, 2364][imgIndex];\n          viewBoxHeight = [0, 239, 300, 360, 420][imgIndex];\n          height = [0, 0.24, 0.3, 0.3, 0.36, 0.42][imgIndex];\n          pathName = label + imgIndex;\n        } else {\n          viewBoxWidth = [0, 600, 1033, 2339, 2340][imgIndex];\n          viewBoxHeight = [0, 260, 286, 306, 312][imgIndex];\n          height = [0, 0.26, 0.286, 0.3, 0.306, 0.34][imgIndex];\n          pathName = \"tilde\" + imgIndex;\n        }\n      }\n\n      const path = new PathNode(pathName);\n      const svgNode = new SvgNode([path], {\n        \"width\": \"100%\",\n        \"height\": makeEm(height),\n        \"viewBox\": \"0 0 \" + viewBoxWidth + \" \" + viewBoxHeight,\n        \"preserveAspectRatio\": \"none\"\n      });\n      return {\n        span: buildCommon.makeSvgSpan([], [svgNode], options),\n        minWidth: 0,\n        height\n      };\n    } else {\n      const spans = [];\n      const data = katexImagesData[label];\n      const [paths, minWidth, viewBoxHeight] = data;\n      const height = viewBoxHeight / 1000;\n      const numSvgChildren = paths.length;\n      let widthClasses;\n      let aligns;\n\n      if (numSvgChildren === 1) {\n        // $FlowFixMe: All these cases must be of the 4-tuple type.\n        const align1 = data[3];\n        widthClasses = [\"hide-tail\"];\n        aligns = [align1];\n      } else if (numSvgChildren === 2) {\n        widthClasses = [\"halfarrow-left\", \"halfarrow-right\"];\n        aligns = [\"xMinYMin\", \"xMaxYMin\"];\n      } else if (numSvgChildren === 3) {\n        widthClasses = [\"brace-left\", \"brace-center\", \"brace-right\"];\n        aligns = [\"xMinYMin\", \"xMidYMin\", \"xMaxYMin\"];\n      } else {\n        throw new Error(\"Correct katexImagesData or update code here to support\\n                    \" + numSvgChildren + \" children.\");\n      }\n\n      for (let i = 0; i < numSvgChildren; i++) {\n        const path = new PathNode(paths[i]);\n        const svgNode = new SvgNode([path], {\n          \"width\": \"400em\",\n          \"height\": makeEm(height),\n          \"viewBox\": \"0 0 \" + viewBoxWidth + \" \" + viewBoxHeight,\n          \"preserveAspectRatio\": aligns[i] + \" slice\"\n        });\n        const span = buildCommon.makeSvgSpan([widthClasses[i]], [svgNode], options);\n\n        if (numSvgChildren === 1) {\n          return {\n            span,\n            minWidth,\n            height\n          };\n        } else {\n          span.style.height = makeEm(height);\n          spans.push(span);\n        }\n      }\n\n      return {\n        span: buildCommon.makeSpan([\"stretchy\"], spans, options),\n        minWidth,\n        height\n      };\n    }\n  } // buildSvgSpan_()\n\n\n  const {\n    span,\n    minWidth,\n    height\n  } = buildSvgSpan_(); // Note that we are returning span.depth = 0.\n  // Any adjustments relative to the baseline must be done in buildHTML.\n\n  span.height = height;\n  span.style.height = makeEm(height);\n\n  if (minWidth > 0) {\n    span.style.minWidth = makeEm(minWidth);\n  }\n\n  return span;\n};\n\nconst encloseSpan = function (inner, label, topPad, bottomPad, options) {\n  // Return an image span for \\cancel, \\bcancel, \\xcancel, \\fbox, or \\angl\n  let img;\n  const totalHeight = inner.height + inner.depth + topPad + bottomPad;\n\n  if (/fbox|color|angl/.test(label)) {\n    img = buildCommon.makeSpan([\"stretchy\", label], [], options);\n\n    if (label === \"fbox\") {\n      const color = options.color && options.getColor();\n\n      if (color) {\n        img.style.borderColor = color;\n      }\n    }\n  } else {\n    // \\cancel, \\bcancel, or \\xcancel\n    // Since \\cancel's SVG is inline and it omits the viewBox attribute,\n    // its stroke-width will not vary with span area.\n    const lines = [];\n\n    if (/^[bx]cancel$/.test(label)) {\n      lines.push(new LineNode({\n        \"x1\": \"0\",\n        \"y1\": \"0\",\n        \"x2\": \"100%\",\n        \"y2\": \"100%\",\n        \"stroke-width\": \"0.046em\"\n      }));\n    }\n\n    if (/^x?cancel$/.test(label)) {\n      lines.push(new LineNode({\n        \"x1\": \"0\",\n        \"y1\": \"100%\",\n        \"x2\": \"100%\",\n        \"y2\": \"0\",\n        \"stroke-width\": \"0.046em\"\n      }));\n    }\n\n    const svgNode = new SvgNode(lines, {\n      \"width\": \"100%\",\n      \"height\": makeEm(totalHeight)\n    });\n    img = buildCommon.makeSvgSpan([], [svgNode], options);\n  }\n\n  img.height = totalHeight;\n  img.style.height = makeEm(totalHeight);\n  return img;\n};\n\n/* harmony default export */ var stretchy = ({\n  encloseSpan,\n  mathMLnode,\n  svgSpan\n});\n;// CONCATENATED MODULE: ./src/parseNode.js\n\n\n/**\n * Asserts that the node is of the given type and returns it with stricter\n * typing. Throws if the node's type does not match.\n */\nfunction assertNodeType(node, type) {\n  if (!node || node.type !== type) {\n    throw new Error(\"Expected node of type \" + type + \", but got \" + (node ? \"node of type \" + node.type : String(node)));\n  } // $FlowFixMe, >=0.125\n\n\n  return node;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction assertSymbolNodeType(node) {\n  const typedNode = checkSymbolNodeType(node);\n\n  if (!typedNode) {\n    throw new Error(\"Expected node of symbol group type, but got \" + (node ? \"node of type \" + node.type : String(node)));\n  }\n\n  return typedNode;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction checkSymbolNodeType(node) {\n  if (node && (node.type === \"atom\" || NON_ATOMS.hasOwnProperty(node.type))) {\n    // $FlowFixMe\n    return node;\n  }\n\n  return null;\n}\n;// CONCATENATED MODULE: ./src/functions/accent.js\n\n\n\n\n\n\n\n\n\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"accent\", but\n// also \"supsub\" since an accent can affect super/subscripting.\nconst htmlBuilder = (grp, options) => {\n  // Accents are handled in the TeXbook pg. 443, rule 12.\n  let base;\n  let group;\n  let supSubGroup;\n\n  if (grp && grp.type === \"supsub\") {\n    // If our base is a character box, and we have superscripts and\n    // subscripts, the supsub will defer to us. In particular, we want\n    // to attach the superscripts and subscripts to the inner body (so\n    // that the position of the superscripts and subscripts won't be\n    // affected by the height of the accent). We accomplish this by\n    // sticking the base of the accent into the base of the supsub, and\n    // rendering that, while keeping track of where the accent is.\n    // The real accent group is the base of the supsub group\n    group = assertNodeType(grp.base, \"accent\"); // The character box is the base of the accent group\n\n    base = group.base; // Stick the character box into the base of the supsub group\n\n    grp.base = base; // Rerender the supsub group with its new base, and store that\n    // result.\n\n    supSubGroup = assertSpan(buildGroup(grp, options)); // reset original base\n\n    grp.base = group;\n  } else {\n    group = assertNodeType(grp, \"accent\");\n    base = group.base;\n  } // Build the base group\n\n\n  const body = buildGroup(base, options.havingCrampedStyle()); // Does the accent need to shift for the skew of a character?\n\n  const mustShift = group.isShifty && utils.isCharacterBox(base); // Calculate the skew of the accent. This is based on the line \"If the\n  // nucleus is not a single character, let s = 0; otherwise set s to the\n  // kern amount for the nucleus followed by the \\skewchar of its font.\"\n  // Note that our skew metrics are just the kern between each character\n  // and the skewchar.\n\n  let skew = 0;\n\n  if (mustShift) {\n    // If the base is a character box, then we want the skew of the\n    // innermost character. To do that, we find the innermost character:\n    const baseChar = utils.getBaseElem(base); // Then, we render its group to get the symbol inside it\n\n    const baseGroup = buildGroup(baseChar, options.havingCrampedStyle()); // Finally, we pull the skew off of the symbol.\n\n    skew = assertSymbolDomNode(baseGroup).skew; // Note that we now throw away baseGroup, because the layers we\n    // removed with getBaseElem might contain things like \\color which\n    // we can't get rid of.\n    // TODO(emily): Find a better way to get the skew\n  }\n\n  const accentBelow = group.label === \"\\\\c\"; // calculate the amount of space between the body and the accent\n\n  let clearance = accentBelow ? body.height + body.depth : Math.min(body.height, options.fontMetrics().xHeight); // Build the accent\n\n  let accentBody;\n\n  if (!group.isStretchy) {\n    let accent;\n    let width;\n\n    if (group.label === \"\\\\vec\") {\n      // Before version 0.9, \\vec used the combining font glyph U+20D7.\n      // But browsers, especially Safari, are not consistent in how they\n      // render combining characters when not preceded by a character.\n      // So now we use an SVG.\n      // If Safari reforms, we should consider reverting to the glyph.\n      accent = buildCommon.staticSvg(\"vec\", options);\n      width = buildCommon.svgData.vec[1];\n    } else {\n      accent = buildCommon.makeOrd({\n        mode: group.mode,\n        text: group.label\n      }, options, \"textord\");\n      accent = assertSymbolDomNode(accent); // Remove the italic correction of the accent, because it only serves to\n      // shift the accent over to a place we don't want.\n\n      accent.italic = 0;\n      width = accent.width;\n\n      if (accentBelow) {\n        clearance += accent.depth;\n      }\n    }\n\n    accentBody = buildCommon.makeSpan([\"accent-body\"], [accent]); // \"Full\" accents expand the width of the resulting symbol to be\n    // at least the width of the accent, and overlap directly onto the\n    // character without any vertical offset.\n\n    const accentFull = group.label === \"\\\\textcircled\";\n\n    if (accentFull) {\n      accentBody.classes.push('accent-full');\n      clearance = body.height;\n    } // Shift the accent over by the skew.\n\n\n    let left = skew; // CSS defines `.katex .accent .accent-body:not(.accent-full) { width: 0 }`\n    // so that the accent doesn't contribute to the bounding box.\n    // We need to shift the character by its width (effectively half\n    // its width) to compensate.\n\n    if (!accentFull) {\n      left -= width / 2;\n    }\n\n    accentBody.style.left = makeEm(left); // \\textcircled uses the \\bigcirc glyph, so it needs some\n    // vertical adjustment to match LaTeX.\n\n    if (group.label === \"\\\\textcircled\") {\n      accentBody.style.top = \".2em\";\n    }\n\n    accentBody = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"kern\",\n        size: -clearance\n      }, {\n        type: \"elem\",\n        elem: accentBody\n      }]\n    }, options);\n  } else {\n    accentBody = stretchy.svgSpan(group, options);\n    accentBody = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"elem\",\n        elem: accentBody,\n        wrapperClasses: [\"svg-align\"],\n        wrapperStyle: skew > 0 ? {\n          width: \"calc(100% - \" + makeEm(2 * skew) + \")\",\n          marginLeft: makeEm(2 * skew)\n        } : undefined\n      }]\n    }, options);\n  }\n\n  const accentWrap = buildCommon.makeSpan([\"mord\", \"accent\"], [accentBody], options);\n\n  if (supSubGroup) {\n    // Here, we replace the \"base\" child of the supsub with our newly\n    // generated accent.\n    supSubGroup.children[0] = accentWrap; // Since we don't rerun the height calculation after replacing the\n    // accent, we manually recalculate height.\n\n    supSubGroup.height = Math.max(accentWrap.height, supSubGroup.height); // Accents should always be ords, even when their innards are not.\n\n    supSubGroup.classes[0] = \"mord\";\n    return supSubGroup;\n  } else {\n    return accentWrap;\n  }\n};\n\nconst mathmlBuilder = (group, options) => {\n  const accentNode = group.isStretchy ? stretchy.mathMLnode(group.label) : new mathMLTree.MathNode(\"mo\", [makeText(group.label, group.mode)]);\n  const node = new mathMLTree.MathNode(\"mover\", [buildMathML_buildGroup(group.base, options), accentNode]);\n  node.setAttribute(\"accent\", \"true\");\n  return node;\n};\n\nconst NON_STRETCHY_ACCENT_REGEX = new RegExp([\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\"].map(accent => \"\\\\\" + accent).join(\"|\")); // Accents\n\ndefineFunction({\n  type: \"accent\",\n  names: [\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\", \"\\\\widecheck\", \"\\\\widehat\", \"\\\\widetilde\", \"\\\\overrightarrow\", \"\\\\overleftarrow\", \"\\\\Overrightarrow\", \"\\\\overleftrightarrow\", \"\\\\overgroup\", \"\\\\overlinesegment\", \"\\\\overleftharpoon\", \"\\\\overrightharpoon\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (context, args) => {\n    const base = normalizeArgument(args[0]);\n    const isStretchy = !NON_STRETCHY_ACCENT_REGEX.test(context.funcName);\n    const isShifty = !isStretchy || context.funcName === \"\\\\widehat\" || context.funcName === \"\\\\widetilde\" || context.funcName === \"\\\\widecheck\";\n    return {\n      type: \"accent\",\n      mode: context.parser.mode,\n      label: context.funcName,\n      isStretchy: isStretchy,\n      isShifty: isShifty,\n      base: base\n    };\n  },\n  htmlBuilder,\n  mathmlBuilder\n}); // Text-mode accents\n\ndefineFunction({\n  type: \"accent\",\n  names: [\"\\\\'\", \"\\\\`\", \"\\\\^\", \"\\\\~\", \"\\\\=\", \"\\\\u\", \"\\\\.\", '\\\\\"', \"\\\\c\", \"\\\\r\", \"\\\\H\", \"\\\\v\", \"\\\\textcircled\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    allowedInMath: true,\n    // unless in strict mode\n    argTypes: [\"primitive\"]\n  },\n  handler: (context, args) => {\n    const base = args[0];\n    let mode = context.parser.mode;\n\n    if (mode === \"math\") {\n      context.parser.settings.reportNonstrict(\"mathVsTextAccents\", \"LaTeX's accent \" + context.funcName + \" works only in text mode\");\n      mode = \"text\";\n    }\n\n    return {\n      type: \"accent\",\n      mode: mode,\n      label: context.funcName,\n      isStretchy: false,\n      isShifty: true,\n      base: base\n    };\n  },\n  htmlBuilder,\n  mathmlBuilder\n});\n;// CONCATENATED MODULE: ./src/functions/accentunder.js\n// Horizontal overlap functions\n\n\n\n\n\n\ndefineFunction({\n  type: \"accentUnder\",\n  names: [\"\\\\underleftarrow\", \"\\\\underrightarrow\", \"\\\\underleftrightarrow\", \"\\\\undergroup\", \"\\\\underlinesegment\", \"\\\\utilde\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (_ref, args) => {\n    let {\n      parser,\n      funcName\n    } = _ref;\n    const base = args[0];\n    return {\n      type: \"accentUnder\",\n      mode: parser.mode,\n      label: funcName,\n      base: base\n    };\n  },\n  htmlBuilder: (group, options) => {\n    // Treat under accents much like underlines.\n    const innerGroup = buildGroup(group.base, options);\n    const accentBody = stretchy.svgSpan(group, options);\n    const kern = group.label === \"\\\\utilde\" ? 0.12 : 0; // Generate the vlist, with the appropriate kerns\n\n    const vlist = buildCommon.makeVList({\n      positionType: \"top\",\n      positionData: innerGroup.height,\n      children: [{\n        type: \"elem\",\n        elem: accentBody,\n        wrapperClasses: [\"svg-align\"]\n      }, {\n        type: \"kern\",\n        size: kern\n      }, {\n        type: \"elem\",\n        elem: innerGroup\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"accentunder\"], [vlist], options);\n  },\n  mathmlBuilder: (group, options) => {\n    const accentNode = stretchy.mathMLnode(group.label);\n    const node = new mathMLTree.MathNode(\"munder\", [buildMathML_buildGroup(group.base, options), accentNode]);\n    node.setAttribute(\"accentunder\", \"true\");\n    return node;\n  }\n});\n;// CONCATENATED MODULE: ./src/functions/arrow.js\n\n\n\n\n\n\n\n// Helper function\nconst paddedNode = group => {\n  const node = new mathMLTree.MathNode(\"mpadded\", group ? [group] : []);\n  node.setAttribute(\"width\", \"+0.6em\");\n  node.setAttribute(\"lspace\", \"0.3em\");\n  return node;\n}; // Stretchy arrows with an optional argument\n\n\ndefineFunction({\n  type: \"xArrow\",\n  names: [\"\\\\xleftarrow\", \"\\\\xrightarrow\", \"\\\\xLeftarrow\", \"\\\\xRightarrow\", \"\\\\xleftrightarrow\", \"\\\\xLeftrightarrow\", \"\\\\xhookleftarrow\", \"\\\\xhookrightarrow\", \"\\\\xmapsto\", \"\\\\xrightharpoondown\", \"\\\\xrightharpoonup\", \"\\\\xleftharpoondown\", \"\\\\xleftharpoonup\", \"\\\\xrightleftharpoons\", \"\\\\xleftrightharpoons\", \"\\\\xlongequal\", \"\\\\xtwoheadrightarrow\", \"\\\\xtwoheadleftarrow\", \"\\\\xtofrom\", // The next 3 functions are here to support the mhchem extension.\n  // Direct use of these functions is discouraged and may break someday.\n  \"\\\\xrightleftarrows\", \"\\\\xrightequilibrium\", \"\\\\xleftequilibrium\", // The next 3 functions are here only to support the {CD} environment.\n  \"\\\\\\\\cdrightarrow\", \"\\\\\\\\cdleftarrow\", \"\\\\\\\\cdlongequal\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n\n  handler(_ref, args, optArgs) {\n    let {\n      parser,\n      funcName\n    } = _ref;\n    return {\n      type: \"xArrow\",\n      mode: parser.mode,\n      label: funcName,\n      body: args[0],\n      below: optArgs[0]\n    };\n  },\n\n  // Flow is unable to correctly infer the type of `group`, even though it's\n  // unambiguously determined from the passed-in `type` above.\n  htmlBuilder(group, options) {\n    const style = options.style; // Build the argument groups in the appropriate style.\n    // Ref: amsmath.dtx:   \\hbox{$\\scriptstyle\\mkern#3mu{#6}\\mkern#4mu$}%\n    // Some groups can return document fragments.  Handle those by wrapping\n    // them in a span.\n\n    let newOptions = options.havingStyle(style.sup());\n    const upperGroup = buildCommon.wrapFragment(buildGroup(group.body, newOptions, options), options);\n    const arrowPrefix = group.label.slice(0, 2) === \"\\\\x\" ? \"x\" : \"cd\";\n    upperGroup.classes.push(arrowPrefix + \"-arrow-pad\");\n    let lowerGroup;\n\n    if (group.below) {\n      // Build the lower group\n      newOptions = options.havingStyle(style.sub());\n      lowerGroup = buildCommon.wrapFragment(buildGroup(group.below, newOptions, options), options);\n      lowerGroup.classes.push(arrowPrefix + \"-arrow-pad\");\n    }\n\n    const arrowBody = stretchy.svgSpan(group, options); // Re shift: Note that stretchy.svgSpan returned arrowBody.depth = 0.\n    // The point we want on the math axis is at 0.5 * arrowBody.height.\n\n    const arrowShift = -options.fontMetrics().axisHeight + 0.5 * arrowBody.height; // 2 mu kern. Ref: amsmath.dtx: #7\\if0#2\\else\\mkern#2mu\\fi\n\n    let upperShift = -options.fontMetrics().axisHeight - 0.5 * arrowBody.height - 0.111; // 0.111 em = 2 mu\n\n    if (upperGroup.depth > 0.25 || group.label === \"\\\\xleftequilibrium\") {\n      upperShift -= upperGroup.depth; // shift up if depth encroaches\n    } // Generate the vlist\n\n\n    let vlist;\n\n    if (lowerGroup) {\n      const lowerShift = -options.fontMetrics().axisHeight + lowerGroup.height + 0.5 * arrowBody.height + 0.111;\n      vlist = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: upperGroup,\n          shift: upperShift\n        }, {\n          type: \"elem\",\n          elem: arrowBody,\n          shift: arrowShift\n        }, {\n          type: \"elem\",\n          elem: lowerGroup,\n          shift: lowerShift\n        }]\n      }, options);\n    } else {\n      vlist = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: upperGroup,\n          shift: upperShift\n        }, {\n          type: \"elem\",\n          elem: arrowBody,\n          shift: arrowShift\n        }]\n      }, options);\n    } // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n\n    vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n    return buildCommon.makeSpan([\"mrel\", \"x-arrow\"], [vlist], options);\n  },\n\n  mathmlBuilder(group, options) {\n    const arrowNode = stretchy.mathMLnode(group.label);\n    arrowNode.setAttribute(\"minsize\", group.label.charAt(0) === \"x\" ? \"1.75em\" : \"3.0em\");\n    let node;\n\n    if (group.body) {\n      const upperNode = paddedNode(buildMathML_buildGroup(group.body, options));\n\n      if (group.below) {\n        const lowerNode = paddedNode(buildMathML_buildGroup(group.below, options));\n        node = new mathMLTree.MathNode(\"munderover\", [arrowNode, lowerNode, upperNode]);\n      } else {\n        node = new mathMLTree.MathNode(\"mover\", [arrowNode, upperNode]);\n      }\n    } else if (group.below) {\n      const lowerNode = paddedNode(buildMathML_buildGroup(group.below, options));\n      node = new mathMLTree.MathNode(\"munder\", [arrowNode, lowerNode]);\n    } else {\n      // This should never happen.\n      // Parser.js throws an error if there is no argument.\n      node = paddedNode();\n      node = new mathMLTree.MathNode(\"mover\", [arrowNode, node]);\n    }\n\n    return node;\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/mclass.js\n\n\n\n\n\n\nconst mclass_makeSpan = buildCommon.makeSpan;\n\nfunction mclass_htmlBuilder(group, options) {\n  const elements = buildExpression(group.body, options, true);\n  return mclass_makeSpan([group.mclass], elements, options);\n}\n\nfunction mclass_mathmlBuilder(group, options) {\n  let node;\n  const inner = buildMathML_buildExpression(group.body, options);\n\n  if (group.mclass === \"minner\") {\n    node = new mathMLTree.MathNode(\"mpadded\", inner);\n  } else if (group.mclass === \"mord\") {\n    if (group.isCharacterBox) {\n      node = inner[0];\n      node.type = \"mi\";\n    } else {\n      node = new mathMLTree.MathNode(\"mi\", inner);\n    }\n  } else {\n    if (group.isCharacterBox) {\n      node = inner[0];\n      node.type = \"mo\";\n    } else {\n      node = new mathMLTree.MathNode(\"mo\", inner);\n    } // Set spacing based on what is the most likely adjacent atom type.\n    // See TeXbook p170.\n\n\n    if (group.mclass === \"mbin\") {\n      node.attributes.lspace = \"0.22em\"; // medium space\n\n      node.attributes.rspace = \"0.22em\";\n    } else if (group.mclass === \"mpunct\") {\n      node.attributes.lspace = \"0em\";\n      node.attributes.rspace = \"0.17em\"; // thinspace\n    } else if (group.mclass === \"mopen\" || group.mclass === \"mclose\") {\n      node.attributes.lspace = \"0em\";\n      node.attributes.rspace = \"0em\";\n    } else if (group.mclass === \"minner\") {\n      node.attributes.lspace = \"0.0556em\"; // 1 mu is the most likely option\n\n      node.attributes.width = \"+0.1111em\";\n    } // MathML <mo> default space is 5/18 em, so <mrel> needs no action.\n    // Ref: https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mo\n\n  }\n\n  return node;\n} // Math class commands except \\mathop\n\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\mathord\", \"\\\\mathbin\", \"\\\\mathrel\", \"\\\\mathopen\", \"\\\\mathclose\", \"\\\\mathpunct\", \"\\\\mathinner\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n\n  handler(_ref, args) {\n    let {\n      parser,\n      funcName\n    } = _ref;\n    const body = args[0];\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: \"m\" + funcName.slice(5),\n      // TODO(kevinb): don't prefix with 'm'\n      body: ordargument(body),\n      isCharacterBox: utils.isCharacterBox(body)\n    };\n  },\n\n  htmlBuilder: mclass_htmlBuilder,\n  mathmlBuilder: mclass_mathmlBuilder\n});\nconst binrelClass = arg => {\n  // \\binrel@ spacing varies with (bin|rel|ord) of the atom in the argument.\n  // (by rendering separately and with {}s before and after, and measuring\n  // the change in spacing).  We'll do roughly the same by detecting the\n  // atom type directly.\n  const atom = arg.type === \"ordgroup\" && arg.body.length ? arg.body[0] : arg;\n\n  if (atom.type === \"atom\" && (atom.family === \"bin\" || atom.family === \"rel\")) {\n    return \"m\" + atom.family;\n  } else {\n    return \"mord\";\n  }\n}; // \\@binrel{x}{y} renders like y but as mbin/mrel/mord if x is mbin/mrel/mord.\n// This is equivalent to \\binrel@{x}\\binrel@@{y} in AMSTeX.\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\@binrel\"],\n  props: {\n    numArgs: 2\n  },\n\n  handler(_ref2, args) {\n    let {\n      parser\n    } = _ref2;\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: binrelClass(args[0]),\n      body: ordargument(args[1]),\n      isCharacterBox: utils.isCharacterBox(args[1])\n    };\n  }\n\n}); // Build a relation or stacked op by placing one symbol on top of another\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\stackrel\", \"\\\\overset\", \"\\\\underset\"],\n  props: {\n    numArgs: 2\n  },\n\n  handler(_ref3, args) {\n    let {\n      parser,\n      funcName\n    } = _ref3;\n    const baseArg = args[1];\n    const shiftedArg = args[0];\n    let mclass;\n\n    if (funcName !== \"\\\\stackrel\") {\n      // LaTeX applies \\binrel spacing to \\overset and \\underset.\n      mclass = binrelClass(baseArg);\n    } else {\n      mclass = \"mrel\"; // for \\stackrel\n    }\n\n    const baseOp = {\n      type: \"op\",\n      mode: baseArg.mode,\n      limits: true,\n      alwaysHandleSupSub: true,\n      parentIsSupSub: false,\n      symbol: false,\n      suppressBaseShift: funcName !== \"\\\\stackrel\",\n      body: ordargument(baseArg)\n    };\n    const supsub = {\n      type: \"supsub\",\n      mode: shiftedArg.mode,\n      base: baseOp,\n      sup: funcName === \"\\\\underset\" ? null : shiftedArg,\n      sub: funcName === \"\\\\underset\" ? shiftedArg : null\n    };\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass,\n      body: [supsub],\n      isCharacterBox: utils.isCharacterBox(supsub)\n    };\n  },\n\n  htmlBuilder: mclass_htmlBuilder,\n  mathmlBuilder: mclass_mathmlBuilder\n});\n;// CONCATENATED MODULE: ./src/functions/pmb.js\n\n\n\n\n\n\n// \\pmb is a simulation of bold font.\n// The version of \\pmb in ambsy.sty works by typesetting three copies\n// with small offsets. We use CSS text-shadow.\n// It's a hack. Not as good as a real bold font. Better than nothing.\ndefineFunction({\n  type: \"pmb\",\n  names: [\"\\\\pmb\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    let {\n      parser\n    } = _ref;\n    return {\n      type: \"pmb\",\n      mode: parser.mode,\n      mclass: binrelClass(args[0]),\n      body: ordargument(args[0])\n    };\n  },\n\n  htmlBuilder(group, options) {\n    const elements = buildExpression(group.body, options, true);\n    const node = buildCommon.makeSpan([group.mclass], elements, options);\n    node.style.textShadow = \"0.02em 0.01em 0.04px\";\n    return node;\n  },\n\n  mathmlBuilder(group, style) {\n    const inner = buildMathML_buildExpression(group.body, style); // Wrap with an <mstyle> element.\n\n    const node = new mathMLTree.MathNode(\"mstyle\", inner);\n    node.setAttribute(\"style\", \"text-shadow: 0.02em 0.01em 0.04px\");\n    return node;\n  }\n\n});\n;// CONCATENATED MODULE: ./src/environments/cd.js\n\n\n\n\n\n\n\n\nconst cdArrowFunctionName = {\n  \">\": \"\\\\\\\\cdrightarrow\",\n  \"<\": \"\\\\\\\\cdleftarrow\",\n  \"=\": \"\\\\\\\\cdlongequal\",\n  \"A\": \"\\\\uparrow\",\n  \"V\": \"\\\\downarrow\",\n  \"|\": \"\\\\Vert\",\n  \".\": \"no arrow\"\n};\n\nconst newCell = () => {\n  // Create an empty cell, to be filled below with parse nodes.\n  // The parseTree from this module must be constructed like the\n  // one created by parseArray(), so an empty CD cell must\n  // be a ParseNode<\"styling\">. And CD is always displaystyle.\n  // So these values are fixed and flow can do implicit typing.\n  return {\n    type: \"styling\",\n    body: [],\n    mode: \"math\",\n    style: \"display\"\n  };\n};\n\nconst isStartOfArrow = node => {\n  return node.type === \"textord\" && node.text === \"@\";\n};\n\nconst isLabelEnd = (node, endChar) => {\n  return (node.type === \"mathord\" || node.type === \"atom\") && node.text === endChar;\n};\n\nfunction cdArrow(arrowChar, labels, parser) {\n  // Return a parse tree of an arrow and its labels.\n  // This acts in a way similar to a macro expansion.\n  const funcName = cdArrowFunctionName[arrowChar];\n\n  switch (funcName) {\n    case \"\\\\\\\\cdrightarrow\":\n    case \"\\\\\\\\cdleftarrow\":\n      return parser.callFunction(funcName, [labels[0]], [labels[1]]);\n\n    case \"\\\\uparrow\":\n    case \"\\\\downarrow\":\n      {\n        const leftLabel = parser.callFunction(\"\\\\\\\\cdleft\", [labels[0]], []);\n        const bareArrow = {\n          type: \"atom\",\n          text: funcName,\n          mode: \"math\",\n          family: \"rel\"\n        };\n        const sizedArrow = parser.callFunction(\"\\\\Big\", [bareArrow], []);\n        const rightLabel = parser.callFunction(\"\\\\\\\\cdright\", [labels[1]], []);\n        const arrowGroup = {\n          type: \"ordgroup\",\n          mode: \"math\",\n          body: [leftLabel, sizedArrow, rightLabel]\n        };\n        return parser.callFunction(\"\\\\\\\\cdparent\", [arrowGroup], []);\n      }\n\n    case \"\\\\\\\\cdlongequal\":\n      return parser.callFunction(\"\\\\\\\\cdlongequal\", [], []);\n\n    case \"\\\\Vert\":\n      {\n        const arrow = {\n          type: \"textord\",\n          text: \"\\\\Vert\",\n          mode: \"math\"\n        };\n        return parser.callFunction(\"\\\\Big\", [arrow], []);\n      }\n\n    default:\n      return {\n        type: \"textord\",\n        text: \" \",\n        mode: \"math\"\n      };\n  }\n}\n\nfunction parseCD(parser) {\n  // Get the array's parse nodes with \\\\ temporarily mapped to \\cr.\n  const parsedRows = [];\n  parser.gullet.beginGroup();\n  parser.gullet.macros.set(\"\\\\cr\", \"\\\\\\\\\\\\relax\");\n  parser.gullet.beginGroup();\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    // Get the parse nodes for the next row.\n    parsedRows.push(parser.parseExpression(false, \"\\\\\\\\\"));\n    parser.gullet.endGroup();\n    parser.gullet.beginGroup();\n    const next = parser.fetch().text;\n\n    if (next === \"&\" || next === \"\\\\\\\\\") {\n      parser.consume();\n    } else if (next === \"\\\\end\") {\n      if (parsedRows[parsedRows.length - 1].length === 0) {\n        parsedRows.pop(); // final row ended in \\\\\n      }\n\n      break;\n    } else {\n      throw new src_ParseError(\"Expected \\\\\\\\ or \\\\cr or \\\\end\", parser.nextToken);\n    }\n  }\n\n  let row = [];\n  const body = [row]; // Loop thru the parse nodes. Collect them into cells and arrows.\n\n  for (let i = 0; i < parsedRows.length; i++) {\n    // Start a new row.\n    const rowNodes = parsedRows[i]; // Create the first cell.\n\n    let cell = newCell();\n\n    for (let j = 0; j < rowNodes.length; j++) {\n      if (!isStartOfArrow(rowNodes[j])) {\n        // If a parseNode is not an arrow, it goes into a cell.\n        cell.body.push(rowNodes[j]);\n      } else {\n        // Parse node j is an \"@\", the start of an arrow.\n        // Before starting on the arrow, push the cell into `row`.\n        row.push(cell); // Now collect parseNodes into an arrow.\n        // The character after \"@\" defines the arrow type.\n\n        j += 1;\n        const arrowChar = assertSymbolNodeType(rowNodes[j]).text; // Create two empty label nodes. We may or may not use them.\n\n        const labels = new Array(2);\n        labels[0] = {\n          type: \"ordgroup\",\n          mode: \"math\",\n          body: []\n        };\n        labels[1] = {\n          type: \"ordgroup\",\n          mode: \"math\",\n          body: []\n        }; // Process the arrow.\n\n        if (\"=|.\".indexOf(arrowChar) > -1) {// Three \"arrows\", ``@=`, `@|`, and `@.`, do not take labels.\n          // Do nothing here.\n        } else if (\"<>AV\".indexOf(arrowChar) > -1) {\n          // Four arrows, `@>>>`, `@<<<`, `@AAA`, and `@VVV`, each take\n          // two optional labels. E.g. the right-point arrow syntax is\n          // really:  @>{optional label}>{optional label}>\n          // Collect parseNodes into labels.\n          for (let labelNum = 0; labelNum < 2; labelNum++) {\n            let inLabel = true;\n\n            for (let k = j + 1; k < rowNodes.length; k++) {\n              if (isLabelEnd(rowNodes[k], arrowChar)) {\n                inLabel = false;\n                j = k;\n                break;\n              }\n\n              if (isStartOfArrow(rowNodes[k])) {\n                throw new src_ParseError(\"Missing a \" + arrowChar + \" character to complete a CD arrow.\", rowNodes[k]);\n              }\n\n              labels[labelNum].body.push(rowNodes[k]);\n            }\n\n            if (inLabel) {\n              // isLabelEnd never returned a true.\n              throw new src_ParseError(\"Missing a \" + arrowChar + \" character to complete a CD arrow.\", rowNodes[j]);\n            }\n          }\n        } else {\n          throw new src_ParseError(\"Expected one of \\\"<>AV=|.\\\" after @\", rowNodes[j]);\n        } // Now join the arrow to its labels.\n\n\n        const arrow = cdArrow(arrowChar, labels, parser); // Wrap the arrow in  ParseNode<\"styling\">.\n        // This is done to match parseArray() behavior.\n\n        const wrappedArrow = {\n          type: \"styling\",\n          body: [arrow],\n          mode: \"math\",\n          style: \"display\" // CD is always displaystyle.\n\n        };\n        row.push(wrappedArrow); // In CD's syntax, cells are implicit. That is, everything that\n        // is not an arrow gets collected into a cell. So create an empty\n        // cell now. It will collect upcoming parseNodes.\n\n        cell = newCell();\n      }\n    }\n\n    if (i % 2 === 0) {\n      // Even-numbered rows consist of: cell, arrow, cell, arrow, ... cell\n      // The last cell is not yet pushed into `row`, so:\n      row.push(cell);\n    } else {\n      // Odd-numbered rows consist of: vert arrow, empty cell, ... vert arrow\n      // Remove the empty cell that was placed at the beginning of `row`.\n      row.shift();\n    }\n\n    row = [];\n    body.push(row);\n  } // End row group\n\n\n  parser.gullet.endGroup(); // End array group defining \\\\\n\n  parser.gullet.endGroup(); // define column separation.\n\n  const cols = new Array(body[0].length).fill({\n    type: \"align\",\n    align: \"c\",\n    pregap: 0.25,\n    // CD package sets \\enskip between columns.\n    postgap: 0.25 // So pre and post each get half an \\enskip, i.e. 0.25em.\n\n  });\n  return {\n    type: \"array\",\n    mode: \"math\",\n    body,\n    arraystretch: 1,\n    addJot: true,\n    rowGaps: [null],\n    cols,\n    colSeparationType: \"CD\",\n    hLinesBeforeRow: new Array(body.length + 1).fill([])\n  };\n} // The functions below are not available for general use.\n// They are here only for internal use by the {CD} environment in placing labels\n// next to vertical arrows.\n// We don't need any such functions for horizontal arrows because we can reuse\n// the functionality that already exists for extensible arrows.\n\ndefineFunction({\n  type: \"cdlabel\",\n  names: [\"\\\\\\\\cdleft\", \"\\\\\\\\cdright\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref, args) {\n    let {\n      parser,\n      funcName\n    } = _ref;\n    return {\n      type: \"cdlabel\",\n      mode: parser.mode,\n      side: funcName.slice(4),\n      label: args[0]\n    };\n  },\n\n  htmlBuilder(group, options) {\n    const newOptions = options.havingStyle(options.style.sup());\n    const label = buildCommon.wrapFragment(buildGroup(group.label, newOptions, options), options);\n    label.classes.push(\"cd-label-\" + group.side);\n    label.style.bottom = makeEm(0.8 - label.depth); // Zero out label height & depth, so vertical align of arrow is set\n    // by the arrow height, not by the label.\n\n    label.height = 0;\n    label.depth = 0;\n    return label;\n  },\n\n  mathmlBuilder(group, options) {\n    let label = new mathMLTree.MathNode(\"mrow\", [buildMathML_buildGroup(group.label, options)]);\n    label = new mathMLTree.MathNode(\"mpadded\", [label]);\n    label.setAttribute(\"width\", \"0\");\n\n    if (group.side === \"left\") {\n      label.setAttribute(\"lspace\", \"-1width\");\n    } // We have to guess at vertical alignment. We know the arrow is 1.8em tall,\n    // But we don't know the height or depth of the label.\n\n\n    label.setAttribute(\"voffset\", \"0.7em\");\n    label = new mathMLTree.MathNode(\"mstyle\", [label]);\n    label.setAttribute(\"displaystyle\", \"false\");\n    label.setAttribute(\"scriptlevel\", \"1\");\n    return label;\n  }\n\n});\ndefineFunction({\n  type: \"cdlabelparent\",\n  names: [\"\\\\\\\\cdparent\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref2, args) {\n    let {\n      parser\n    } = _ref2;\n    return {\n      type: \"cdlabelparent\",\n      mode: parser.mode,\n      fragment: args[0]\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Wrap the vertical arrow and its labels.\n    // The parent gets position: relative. The child gets position: absolute.\n    // So CSS can locate the label correctly.\n    const parent = buildCommon.wrapFragment(buildGroup(group.fragment, options), options);\n    parent.classes.push(\"cd-vert-arrow\");\n    return parent;\n  },\n\n  mathmlBuilder(group, options) {\n    return new mathMLTree.MathNode(\"mrow\", [buildMathML_buildGroup(group.fragment, options)]);\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/char.js\n\n\n // \\@char is an internal function that takes a grouped decimal argument like\n// {123} and converts into symbol with code 123.  It is used by the *macro*\n// \\char defined in macros.js.\n\ndefineFunction({\n  type: \"textord\",\n  names: [\"\\\\@char\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    let {\n      parser\n    } = _ref;\n    const arg = assertNodeType(args[0], \"ordgroup\");\n    const group = arg.body;\n    let number = \"\";\n\n    for (let i = 0; i < group.length; i++) {\n      const node = assertNodeType(group[i], \"textord\");\n      number += node.text;\n    }\n\n    let code = parseInt(number);\n    let text;\n\n    if (isNaN(code)) {\n      throw new src_ParseError(\"\\\\@char has non-numeric argument \" + number); // If we drop IE support, the following code could be replaced with\n      // text = String.fromCodePoint(code)\n    } else if (code < 0 || code >= 0x10ffff) {\n      throw new src_ParseError(\"\\\\@char with invalid code point \" + number);\n    } else if (code <= 0xffff) {\n      text = String.fromCharCode(code);\n    } else {\n      // Astral code point; split into surrogate halves\n      code -= 0x10000;\n      text = String.fromCharCode((code >> 10) + 0xd800, (code & 0x3ff) + 0xdc00);\n    }\n\n    return {\n      type: \"textord\",\n      mode: parser.mode,\n      text: text\n    };\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/color.js\n\n\n\n\n\n\n\nconst color_htmlBuilder = (group, options) => {\n  const elements = buildExpression(group.body, options.withColor(group.color), false); // \\color isn't supposed to affect the type of the elements it contains.\n  // To accomplish this, we wrap the results in a fragment, so the inner\n  // elements will be able to directly interact with their neighbors. For\n  // example, `\\color{red}{2 +} 3` has the same spacing as `2 + 3`\n\n  return buildCommon.makeFragment(elements);\n};\n\nconst color_mathmlBuilder = (group, options) => {\n  const inner = buildMathML_buildExpression(group.body, options.withColor(group.color));\n  const node = new mathMLTree.MathNode(\"mstyle\", inner);\n  node.setAttribute(\"mathcolor\", group.color);\n  return node;\n};\n\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\textcolor\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true,\n    argTypes: [\"color\", \"original\"]\n  },\n\n  handler(_ref, args) {\n    let {\n      parser\n    } = _ref;\n    const color = assertNodeType(args[0], \"color-token\").color;\n    const body = args[1];\n    return {\n      type: \"color\",\n      mode: parser.mode,\n      color,\n      body: ordargument(body)\n    };\n  },\n\n  htmlBuilder: color_htmlBuilder,\n  mathmlBuilder: color_mathmlBuilder\n});\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\color\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    argTypes: [\"color\"]\n  },\n\n  handler(_ref2, args) {\n    let {\n      parser,\n      breakOnTokenText\n    } = _ref2;\n    const color = assertNodeType(args[0], \"color-token\").color; // Set macro \\current@color in current namespace to store the current\n    // color, mimicking the behavior of color.sty.\n    // This is currently used just to correctly color a \\right\n    // that follows a \\color command.\n\n    parser.gullet.macros.set(\"\\\\current@color\", color); // Parse out the implicit body that should be colored.\n\n    const body = parser.parseExpression(true, breakOnTokenText);\n    return {\n      type: \"color\",\n      mode: parser.mode,\n      color,\n      body\n    };\n  },\n\n  htmlBuilder: color_htmlBuilder,\n  mathmlBuilder: color_mathmlBuilder\n});\n;// CONCATENATED MODULE: ./src/functions/cr.js\n// Row breaks within tabular environments, and line breaks at top level\n\n\n\n\n // \\DeclareRobustCommand\\\\{...\\@xnewline}\n\ndefineFunction({\n  type: \"cr\",\n  names: [\"\\\\\\\\\"],\n  props: {\n    numArgs: 0,\n    numOptionalArgs: 0,\n    allowedInText: true\n  },\n\n  handler(_ref, args, optArgs) {\n    let {\n      parser\n    } = _ref;\n    const size = parser.gullet.future().text === \"[\" ? parser.parseSizeGroup(true) : null;\n    const newLine = !parser.settings.displayMode || !parser.settings.useStrictBehavior(\"newLineInDisplayMode\", \"In LaTeX, \\\\\\\\ or \\\\newline \" + \"does nothing in display mode\");\n    return {\n      type: \"cr\",\n      mode: parser.mode,\n      newLine,\n      size: size && assertNodeType(size, \"size\").value\n    };\n  },\n\n  // The following builders are called only at the top level,\n  // not within tabular/array environments.\n  htmlBuilder(group, options) {\n    const span = buildCommon.makeSpan([\"mspace\"], [], options);\n\n    if (group.newLine) {\n      span.classes.push(\"newline\");\n\n      if (group.size) {\n        span.style.marginTop = makeEm(calculateSize(group.size, options));\n      }\n    }\n\n    return span;\n  },\n\n  mathmlBuilder(group, options) {\n    const node = new mathMLTree.MathNode(\"mspace\");\n\n    if (group.newLine) {\n      node.setAttribute(\"linebreak\", \"newline\");\n\n      if (group.size) {\n        node.setAttribute(\"height\", makeEm(calculateSize(group.size, options)));\n      }\n    }\n\n    return node;\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/def.js\n\n\n\nconst globalMap = {\n  \"\\\\global\": \"\\\\global\",\n  \"\\\\long\": \"\\\\\\\\globallong\",\n  \"\\\\\\\\globallong\": \"\\\\\\\\globallong\",\n  \"\\\\def\": \"\\\\gdef\",\n  \"\\\\gdef\": \"\\\\gdef\",\n  \"\\\\edef\": \"\\\\xdef\",\n  \"\\\\xdef\": \"\\\\xdef\",\n  \"\\\\let\": \"\\\\\\\\globallet\",\n  \"\\\\futurelet\": \"\\\\\\\\globalfuture\"\n};\n\nconst checkControlSequence = tok => {\n  const name = tok.text;\n\n  if (/^(?:[\\\\{}$&#^_]|EOF)$/.test(name)) {\n    throw new src_ParseError(\"Expected a control sequence\", tok);\n  }\n\n  return name;\n};\n\nconst getRHS = parser => {\n  let tok = parser.gullet.popToken();\n\n  if (tok.text === \"=\") {\n    // consume optional equals\n    tok = parser.gullet.popToken();\n\n    if (tok.text === \" \") {\n      // consume one optional space\n      tok = parser.gullet.popToken();\n    }\n  }\n\n  return tok;\n};\n\nconst letCommand = (parser, name, tok, global) => {\n  let macro = parser.gullet.macros.get(tok.text);\n\n  if (macro == null) {\n    // don't expand it later even if a macro with the same name is defined\n    // e.g., \\let\\foo=\\frac \\def\\frac{\\relax} \\frac12\n    tok.noexpand = true;\n    macro = {\n      tokens: [tok],\n      numArgs: 0,\n      // reproduce the same behavior in expansion\n      unexpandable: !parser.gullet.isExpandable(tok.text)\n    };\n  }\n\n  parser.gullet.macros.set(name, macro, global);\n}; // <assignment> -> <non-macro assignment>|<macro assignment>\n// <non-macro assignment> -> <simple assignment>|\\global<non-macro assignment>\n// <macro assignment> -> <definition>|<prefix><macro assignment>\n// <prefix> -> \\global|\\long|\\outer\n\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\global\", \"\\\\long\", \"\\\\\\\\globallong\" // can’t be entered directly\n  ],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n\n  handler(_ref) {\n    let {\n      parser,\n      funcName\n    } = _ref;\n    parser.consumeSpaces();\n    const token = parser.fetch();\n\n    if (globalMap[token.text]) {\n      // KaTeX doesn't have \\par, so ignore \\long\n      if (funcName === \"\\\\global\" || funcName === \"\\\\\\\\globallong\") {\n        token.text = globalMap[token.text];\n      }\n\n      return assertNodeType(parser.parseFunction(), \"internal\");\n    }\n\n    throw new src_ParseError(\"Invalid token after macro prefix\", token);\n  }\n\n}); // Basic support for macro definitions: \\def, \\gdef, \\edef, \\xdef\n// <definition> -> <def><control sequence><definition text>\n// <def> -> \\def|\\gdef|\\edef|\\xdef\n// <definition text> -> <parameter text><left brace><balanced text><right brace>\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\def\", \"\\\\gdef\", \"\\\\edef\", \"\\\\xdef\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref2) {\n    let {\n      parser,\n      funcName\n    } = _ref2;\n    let tok = parser.gullet.popToken();\n    const name = tok.text;\n\n    if (/^(?:[\\\\{}$&#^_]|EOF)$/.test(name)) {\n      throw new src_ParseError(\"Expected a control sequence\", tok);\n    }\n\n    let numArgs = 0;\n    let insert;\n    const delimiters = [[]]; // <parameter text> contains no braces\n\n    while (parser.gullet.future().text !== \"{\") {\n      tok = parser.gullet.popToken();\n\n      if (tok.text === \"#\") {\n        // If the very last character of the <parameter text> is #, so that\n        // this # is immediately followed by {, TeX will behave as if the {\n        // had been inserted at the right end of both the parameter text\n        // and the replacement text.\n        if (parser.gullet.future().text === \"{\") {\n          insert = parser.gullet.future();\n          delimiters[numArgs].push(\"{\");\n          break;\n        } // A parameter, the first appearance of # must be followed by 1,\n        // the next by 2, and so on; up to nine #’s are allowed\n\n\n        tok = parser.gullet.popToken();\n\n        if (!/^[1-9]$/.test(tok.text)) {\n          throw new src_ParseError(\"Invalid argument number \\\"\" + tok.text + \"\\\"\");\n        }\n\n        if (parseInt(tok.text) !== numArgs + 1) {\n          throw new src_ParseError(\"Argument number \\\"\" + tok.text + \"\\\" out of order\");\n        }\n\n        numArgs++;\n        delimiters.push([]);\n      } else if (tok.text === \"EOF\") {\n        throw new src_ParseError(\"Expected a macro definition\");\n      } else {\n        delimiters[numArgs].push(tok.text);\n      }\n    } // replacement text, enclosed in '{' and '}' and properly nested\n\n\n    let {\n      tokens\n    } = parser.gullet.consumeArg();\n\n    if (insert) {\n      tokens.unshift(insert);\n    }\n\n    if (funcName === \"\\\\edef\" || funcName === \"\\\\xdef\") {\n      tokens = parser.gullet.expandTokens(tokens);\n      tokens.reverse(); // to fit in with stack order\n    } // Final arg is the expansion of the macro\n\n\n    parser.gullet.macros.set(name, {\n      tokens,\n      numArgs,\n      delimiters\n    }, funcName === globalMap[funcName]);\n    return {\n      type: \"internal\",\n      mode: parser.mode\n    };\n  }\n\n}); // <simple assignment> -> <let assignment>\n// <let assignment> -> \\futurelet<control sequence><token><token>\n//     | \\let<control sequence><equals><one optional space><token>\n// <equals> -> <optional spaces>|<optional spaces>=\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\let\", \"\\\\\\\\globallet\" // can’t be entered directly\n  ],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref3) {\n    let {\n      parser,\n      funcName\n    } = _ref3;\n    const name = checkControlSequence(parser.gullet.popToken());\n    parser.gullet.consumeSpaces();\n    const tok = getRHS(parser);\n    letCommand(parser, name, tok, funcName === \"\\\\\\\\globallet\");\n    return {\n      type: \"internal\",\n      mode: parser.mode\n    };\n  }\n\n}); // ref: https://www.tug.org/TUGboat/tb09-3/tb22bechtolsheim.pdf\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\futurelet\", \"\\\\\\\\globalfuture\" // can’t be entered directly\n  ],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref4) {\n    let {\n      parser,\n      funcName\n    } = _ref4;\n    const name = checkControlSequence(parser.gullet.popToken());\n    const middle = parser.gullet.popToken();\n    const tok = parser.gullet.popToken();\n    letCommand(parser, name, tok, funcName === \"\\\\\\\\globalfuture\");\n    parser.gullet.pushToken(tok);\n    parser.gullet.pushToken(middle);\n    return {\n      type: \"internal\",\n      mode: parser.mode\n    };\n  }\n\n});\n;// CONCATENATED MODULE: ./src/delimiter.js\n/**\n * This file deals with creating delimiters of various sizes. The TeXbook\n * discusses these routines on page 441-442, in the \"Another subroutine sets box\n * x to a specified variable delimiter\" paragraph.\n *\n * There are three main routines here. `makeSmallDelim` makes a delimiter in the\n * normal font, but in either text, script, or scriptscript style.\n * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,\n * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of\n * smaller pieces that are stacked on top of one another.\n *\n * The functions take a parameter `center`, which determines if the delimiter\n * should be centered around the axis.\n *\n * Then, there are three exposed functions. `sizedDelim` makes a delimiter in\n * one of the given sizes. This is used for things like `\\bigl`.\n * `customSizedDelim` makes a delimiter with a given total height+depth. It is\n * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate\n * delimiter which surrounds an expression of a given height an depth. It is\n * used in `\\left` and `\\right`.\n */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Get the metrics for a given symbol and font, after transformation (i.e.\n * after following replacement from symbols.js)\n */\nconst getMetrics = function (symbol, font, mode) {\n  const replace = src_symbols.math[symbol] && src_symbols.math[symbol].replace;\n  const metrics = getCharacterMetrics(replace || symbol, font, mode);\n\n  if (!metrics) {\n    throw new Error(\"Unsupported symbol \" + symbol + \" and font size \" + font + \".\");\n  }\n\n  return metrics;\n};\n/**\n * Puts a delimiter span in a given style, and adds appropriate height, depth,\n * and maxFontSizes.\n */\n\n\nconst styleWrap = function (delim, toStyle, options, classes) {\n  const newOptions = options.havingBaseStyle(toStyle);\n  const span = buildCommon.makeSpan(classes.concat(newOptions.sizingClasses(options)), [delim], options);\n  const delimSizeMultiplier = newOptions.sizeMultiplier / options.sizeMultiplier;\n  span.height *= delimSizeMultiplier;\n  span.depth *= delimSizeMultiplier;\n  span.maxFontSize = newOptions.sizeMultiplier;\n  return span;\n};\n\nconst centerSpan = function (span, options, style) {\n  const newOptions = options.havingBaseStyle(style);\n  const shift = (1 - options.sizeMultiplier / newOptions.sizeMultiplier) * options.fontMetrics().axisHeight;\n  span.classes.push(\"delimcenter\");\n  span.style.top = makeEm(shift);\n  span.height -= shift;\n  span.depth += shift;\n};\n/**\n * Makes a small delimiter. This is a delimiter that comes in the Main-Regular\n * font, but is restyled to either be in textstyle, scriptstyle, or\n * scriptscriptstyle.\n */\n\n\nconst makeSmallDelim = function (delim, style, center, options, mode, classes) {\n  const text = buildCommon.makeSymbol(delim, \"Main-Regular\", mode, options);\n  const span = styleWrap(text, style, options, classes);\n\n  if (center) {\n    centerSpan(span, options, style);\n  }\n\n  return span;\n};\n/**\n * Builds a symbol in the given font size (note size is an integer)\n */\n\n\nconst mathrmSize = function (value, size, mode, options) {\n  return buildCommon.makeSymbol(value, \"Size\" + size + \"-Regular\", mode, options);\n};\n/**\n * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,\n * Size3, or Size4 fonts. It is always rendered in textstyle.\n */\n\n\nconst makeLargeDelim = function (delim, size, center, options, mode, classes) {\n  const inner = mathrmSize(delim, size, mode, options);\n  const span = styleWrap(buildCommon.makeSpan([\"delimsizing\", \"size\" + size], [inner], options), src_Style.TEXT, options, classes);\n\n  if (center) {\n    centerSpan(span, options, src_Style.TEXT);\n  }\n\n  return span;\n};\n/**\n * Make a span from a font glyph with the given offset and in the given font.\n * This is used in makeStackedDelim to make the stacking pieces for the delimiter.\n */\n\n\nconst makeGlyphSpan = function (symbol, font, mode) {\n  let sizeClass; // Apply the correct CSS class to choose the right font.\n\n  if (font === \"Size1-Regular\") {\n    sizeClass = \"delim-size1\";\n  } else\n    /* if (font === \"Size4-Regular\") */\n    {\n      sizeClass = \"delim-size4\";\n    }\n\n  const corner = buildCommon.makeSpan([\"delimsizinginner\", sizeClass], [buildCommon.makeSpan([], [buildCommon.makeSymbol(symbol, font, mode)])]); // Since this will be passed into `makeVList` in the end, wrap the element\n  // in the appropriate tag that VList uses.\n\n  return {\n    type: \"elem\",\n    elem: corner\n  };\n};\n\nconst makeInner = function (ch, height, options) {\n  // Create a span with inline SVG for the inner part of a tall stacked delimiter.\n  const width = fontMetricsData['Size4-Regular'][ch.charCodeAt(0)] ? fontMetricsData['Size4-Regular'][ch.charCodeAt(0)][4] : fontMetricsData['Size1-Regular'][ch.charCodeAt(0)][4];\n  const path = new PathNode(\"inner\", innerPath(ch, Math.round(1000 * height)));\n  const svgNode = new SvgNode([path], {\n    \"width\": makeEm(width),\n    \"height\": makeEm(height),\n    // Override CSS rule `.katex svg { width: 100% }`\n    \"style\": \"width:\" + makeEm(width),\n    \"viewBox\": \"0 0 \" + 1000 * width + \" \" + Math.round(1000 * height),\n    \"preserveAspectRatio\": \"xMinYMin\"\n  });\n  const span = buildCommon.makeSvgSpan([], [svgNode], options);\n  span.height = height;\n  span.style.height = makeEm(height);\n  span.style.width = makeEm(width);\n  return {\n    type: \"elem\",\n    elem: span\n  };\n}; // Helpers for makeStackedDelim\n\n\nconst lapInEms = 0.008;\nconst lap = {\n  type: \"kern\",\n  size: -1 * lapInEms\n};\nconst verts = [\"|\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\vert\"];\nconst doubleVerts = [\"\\\\|\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\Vert\"];\n/**\n * Make a stacked delimiter out of a given delimiter, with the total height at\n * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.\n */\n\nconst makeStackedDelim = function (delim, heightTotal, center, options, mode, classes) {\n  // There are four parts, the top, an optional middle, a repeated part, and a\n  // bottom.\n  let top;\n  let middle;\n  let repeat;\n  let bottom;\n  let svgLabel = \"\";\n  let viewBoxWidth = 0;\n  top = repeat = bottom = delim;\n  middle = null; // Also keep track of what font the delimiters are in\n\n  let font = \"Size1-Regular\"; // We set the parts and font based on the symbol. Note that we use\n  // '\\u23d0' instead of '|' and '\\u2016' instead of '\\\\|' for the\n  // repeats of the arrows\n\n  if (delim === \"\\\\uparrow\") {\n    repeat = bottom = \"\\u23d0\";\n  } else if (delim === \"\\\\Uparrow\") {\n    repeat = bottom = \"\\u2016\";\n  } else if (delim === \"\\\\downarrow\") {\n    top = repeat = \"\\u23d0\";\n  } else if (delim === \"\\\\Downarrow\") {\n    top = repeat = \"\\u2016\";\n  } else if (delim === \"\\\\updownarrow\") {\n    top = \"\\\\uparrow\";\n    repeat = \"\\u23d0\";\n    bottom = \"\\\\downarrow\";\n  } else if (delim === \"\\\\Updownarrow\") {\n    top = \"\\\\Uparrow\";\n    repeat = \"\\u2016\";\n    bottom = \"\\\\Downarrow\";\n  } else if (utils.contains(verts, delim)) {\n    repeat = \"\\u2223\";\n    svgLabel = \"vert\";\n    viewBoxWidth = 333;\n  } else if (utils.contains(doubleVerts, delim)) {\n    repeat = \"\\u2225\";\n    svgLabel = \"doublevert\";\n    viewBoxWidth = 556;\n  } else if (delim === \"[\" || delim === \"\\\\lbrack\") {\n    top = \"\\u23a1\";\n    repeat = \"\\u23a2\";\n    bottom = \"\\u23a3\";\n    font = \"Size4-Regular\";\n    svgLabel = \"lbrack\";\n    viewBoxWidth = 667;\n  } else if (delim === \"]\" || delim === \"\\\\rbrack\") {\n    top = \"\\u23a4\";\n    repeat = \"\\u23a5\";\n    bottom = \"\\u23a6\";\n    font = \"Size4-Regular\";\n    svgLabel = \"rbrack\";\n    viewBoxWidth = 667;\n  } else if (delim === \"\\\\lfloor\" || delim === \"\\u230a\") {\n    repeat = top = \"\\u23a2\";\n    bottom = \"\\u23a3\";\n    font = \"Size4-Regular\";\n    svgLabel = \"lfloor\";\n    viewBoxWidth = 667;\n  } else if (delim === \"\\\\lceil\" || delim === \"\\u2308\") {\n    top = \"\\u23a1\";\n    repeat = bottom = \"\\u23a2\";\n    font = \"Size4-Regular\";\n    svgLabel = \"lceil\";\n    viewBoxWidth = 667;\n  } else if (delim === \"\\\\rfloor\" || delim === \"\\u230b\") {\n    repeat = top = \"\\u23a5\";\n    bottom = \"\\u23a6\";\n    font = \"Size4-Regular\";\n    svgLabel = \"rfloor\";\n    viewBoxWidth = 667;\n  } else if (delim === \"\\\\rceil\" || delim === \"\\u2309\") {\n    top = \"\\u23a4\";\n    repeat = bottom = \"\\u23a5\";\n    font = \"Size4-Regular\";\n    svgLabel = \"rceil\";\n    viewBoxWidth = 667;\n  } else if (delim === \"(\" || delim === \"\\\\lparen\") {\n    top = \"\\u239b\";\n    repeat = \"\\u239c\";\n    bottom = \"\\u239d\";\n    font = \"Size4-Regular\";\n    svgLabel = \"lparen\";\n    viewBoxWidth = 875;\n  } else if (delim === \")\" || delim === \"\\\\rparen\") {\n    top = \"\\u239e\";\n    repeat = \"\\u239f\";\n    bottom = \"\\u23a0\";\n    font = \"Size4-Regular\";\n    svgLabel = \"rparen\";\n    viewBoxWidth = 875;\n  } else if (delim === \"\\\\{\" || delim === \"\\\\lbrace\") {\n    top = \"\\u23a7\";\n    middle = \"\\u23a8\";\n    bottom = \"\\u23a9\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\}\" || delim === \"\\\\rbrace\") {\n    top = \"\\u23ab\";\n    middle = \"\\u23ac\";\n    bottom = \"\\u23ad\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lgroup\" || delim === \"\\u27ee\") {\n    top = \"\\u23a7\";\n    bottom = \"\\u23a9\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rgroup\" || delim === \"\\u27ef\") {\n    top = \"\\u23ab\";\n    bottom = \"\\u23ad\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lmoustache\" || delim === \"\\u23b0\") {\n    top = \"\\u23a7\";\n    bottom = \"\\u23ad\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rmoustache\" || delim === \"\\u23b1\") {\n    top = \"\\u23ab\";\n    bottom = \"\\u23a9\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } // Get the metrics of the four sections\n\n\n  const topMetrics = getMetrics(top, font, mode);\n  const topHeightTotal = topMetrics.height + topMetrics.depth;\n  const repeatMetrics = getMetrics(repeat, font, mode);\n  const repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;\n  const bottomMetrics = getMetrics(bottom, font, mode);\n  const bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;\n  let middleHeightTotal = 0;\n  let middleFactor = 1;\n\n  if (middle !== null) {\n    const middleMetrics = getMetrics(middle, font, mode);\n    middleHeightTotal = middleMetrics.height + middleMetrics.depth;\n    middleFactor = 2; // repeat symmetrically above and below middle\n  } // Calculate the minimal height that the delimiter can have.\n  // It is at least the size of the top, bottom, and optional middle combined.\n\n\n  const minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal; // Compute the number of copies of the repeat symbol we will need\n\n  const repeatCount = Math.max(0, Math.ceil((heightTotal - minHeight) / (middleFactor * repeatHeightTotal))); // Compute the total height of the delimiter including all the symbols\n\n  const realHeightTotal = minHeight + repeatCount * middleFactor * repeatHeightTotal; // The center of the delimiter is placed at the center of the axis. Note\n  // that in this context, \"center\" means that the delimiter should be\n  // centered around the axis in the current style, while normally it is\n  // centered around the axis in textstyle.\n\n  let axisHeight = options.fontMetrics().axisHeight;\n\n  if (center) {\n    axisHeight *= options.sizeMultiplier;\n  } // Calculate the depth\n\n\n  const depth = realHeightTotal / 2 - axisHeight; // Now, we start building the pieces that will go into the vlist\n  // Keep a list of the pieces of the stacked delimiter\n\n  const stack = [];\n\n  if (svgLabel.length > 0) {\n    // Instead of stacking glyphs, create a single SVG.\n    // This evades browser problems with imprecise positioning of spans.\n    const midHeight = realHeightTotal - topHeightTotal - bottomHeightTotal;\n    const viewBoxHeight = Math.round(realHeightTotal * 1000);\n    const pathStr = tallDelim(svgLabel, Math.round(midHeight * 1000));\n    const path = new PathNode(svgLabel, pathStr);\n    const width = (viewBoxWidth / 1000).toFixed(3) + \"em\";\n    const height = (viewBoxHeight / 1000).toFixed(3) + \"em\";\n    const svg = new SvgNode([path], {\n      \"width\": width,\n      \"height\": height,\n      \"viewBox\": \"0 0 \" + viewBoxWidth + \" \" + viewBoxHeight\n    });\n    const wrapper = buildCommon.makeSvgSpan([], [svg], options);\n    wrapper.height = viewBoxHeight / 1000;\n    wrapper.style.width = width;\n    wrapper.style.height = height;\n    stack.push({\n      type: \"elem\",\n      elem: wrapper\n    });\n  } else {\n    // Stack glyphs\n    // Start by adding the bottom symbol\n    stack.push(makeGlyphSpan(bottom, font, mode));\n    stack.push(lap); // overlap\n\n    if (middle === null) {\n      // The middle section will be an SVG. Make it an extra 0.016em tall.\n      // We'll overlap by 0.008em at top and bottom.\n      const innerHeight = realHeightTotal - topHeightTotal - bottomHeightTotal + 2 * lapInEms;\n      stack.push(makeInner(repeat, innerHeight, options));\n    } else {\n      // When there is a middle bit, we need the middle part and two repeated\n      // sections\n      const innerHeight = (realHeightTotal - topHeightTotal - bottomHeightTotal - middleHeightTotal) / 2 + 2 * lapInEms;\n      stack.push(makeInner(repeat, innerHeight, options)); // Now insert the middle of the brace.\n\n      stack.push(lap);\n      stack.push(makeGlyphSpan(middle, font, mode));\n      stack.push(lap);\n      stack.push(makeInner(repeat, innerHeight, options));\n    } // Add the top symbol\n\n\n    stack.push(lap);\n    stack.push(makeGlyphSpan(top, font, mode));\n  } // Finally, build the vlist\n\n\n  const newOptions = options.havingBaseStyle(src_Style.TEXT);\n  const inner = buildCommon.makeVList({\n    positionType: \"bottom\",\n    positionData: depth,\n    children: stack\n  }, newOptions);\n  return styleWrap(buildCommon.makeSpan([\"delimsizing\", \"mult\"], [inner], newOptions), src_Style.TEXT, options, classes);\n}; // All surds have 0.08em padding above the vinculum inside the SVG.\n// That keeps browser span height rounding error from pinching the line.\n\n\nconst vbPad = 80; // padding above the surd, measured inside the viewBox.\n\nconst emPad = 0.08; // padding, in ems, measured in the document.\n\nconst sqrtSvg = function (sqrtName, height, viewBoxHeight, extraVinculum, options) {\n  const path = sqrtPath(sqrtName, extraVinculum, viewBoxHeight);\n  const pathNode = new PathNode(sqrtName, path);\n  const svg = new SvgNode([pathNode], {\n    // Note: 1000:1 ratio of viewBox to document em width.\n    \"width\": \"400em\",\n    \"height\": makeEm(height),\n    \"viewBox\": \"0 0 400000 \" + viewBoxHeight,\n    \"preserveAspectRatio\": \"xMinYMin slice\"\n  });\n  return buildCommon.makeSvgSpan([\"hide-tail\"], [svg], options);\n};\n/**\n * Make a sqrt image of the given height,\n */\n\n\nconst makeSqrtImage = function (height, options) {\n  // Define a newOptions that removes the effect of size changes such as \\Huge.\n  // We don't pick different a height surd for \\Huge. For it, we scale up.\n  const newOptions = options.havingBaseSizing(); // Pick the desired surd glyph from a sequence of surds.\n\n  const delim = traverseSequence(\"\\\\surd\", height * newOptions.sizeMultiplier, stackLargeDelimiterSequence, newOptions);\n  let sizeMultiplier = newOptions.sizeMultiplier; // default\n  // The standard sqrt SVGs each have a 0.04em thick vinculum.\n  // If Settings.minRuleThickness is larger than that, we add extraVinculum.\n\n  const extraVinculum = Math.max(0, options.minRuleThickness - options.fontMetrics().sqrtRuleThickness); // Create a span containing an SVG image of a sqrt symbol.\n\n  let span;\n  let spanHeight = 0;\n  let texHeight = 0;\n  let viewBoxHeight = 0;\n  let advanceWidth; // We create viewBoxes with 80 units of \"padding\" above each surd.\n  // Then browser rounding error on the parent span height will not\n  // encroach on the ink of the vinculum. But that padding is not\n  // included in the TeX-like `height` used for calculation of\n  // vertical alignment. So texHeight = span.height < span.style.height.\n\n  if (delim.type === \"small\") {\n    // Get an SVG that is derived from glyph U+221A in font KaTeX-Main.\n    // 1000 unit normal glyph height.\n    viewBoxHeight = 1000 + 1000 * extraVinculum + vbPad;\n\n    if (height < 1.0) {\n      sizeMultiplier = 1.0; // mimic a \\textfont radical\n    } else if (height < 1.4) {\n      sizeMultiplier = 0.7; // mimic a \\scriptfont radical\n    }\n\n    spanHeight = (1.0 + extraVinculum + emPad) / sizeMultiplier;\n    texHeight = (1.00 + extraVinculum) / sizeMultiplier;\n    span = sqrtSvg(\"sqrtMain\", spanHeight, viewBoxHeight, extraVinculum, options);\n    span.style.minWidth = \"0.853em\";\n    advanceWidth = 0.833 / sizeMultiplier; // from the font.\n  } else if (delim.type === \"large\") {\n    // These SVGs come from fonts: KaTeX_Size1, _Size2, etc.\n    viewBoxHeight = (1000 + vbPad) * sizeToMaxHeight[delim.size];\n    texHeight = (sizeToMaxHeight[delim.size] + extraVinculum) / sizeMultiplier;\n    spanHeight = (sizeToMaxHeight[delim.size] + extraVinculum + emPad) / sizeMultiplier;\n    span = sqrtSvg(\"sqrtSize\" + delim.size, spanHeight, viewBoxHeight, extraVinculum, options);\n    span.style.minWidth = \"1.02em\";\n    advanceWidth = 1.0 / sizeMultiplier; // 1.0 from the font.\n  } else {\n    // Tall sqrt. In TeX, this would be stacked using multiple glyphs.\n    // We'll use a single SVG to accomplish the same thing.\n    spanHeight = height + extraVinculum + emPad;\n    texHeight = height + extraVinculum;\n    viewBoxHeight = Math.floor(1000 * height + extraVinculum) + vbPad;\n    span = sqrtSvg(\"sqrtTall\", spanHeight, viewBoxHeight, extraVinculum, options);\n    span.style.minWidth = \"0.742em\";\n    advanceWidth = 1.056;\n  }\n\n  span.height = texHeight;\n  span.style.height = makeEm(spanHeight);\n  return {\n    span,\n    advanceWidth,\n    // Calculate the actual line width.\n    // This actually should depend on the chosen font -- e.g. \\boldmath\n    // should use the thicker surd symbols from e.g. KaTeX_Main-Bold, and\n    // have thicker rules.\n    ruleWidth: (options.fontMetrics().sqrtRuleThickness + extraVinculum) * sizeMultiplier\n  };\n}; // There are three kinds of delimiters, delimiters that stack when they become\n// too large\n\n\nconst stackLargeDelimiters = [\"(\", \"\\\\lparen\", \")\", \"\\\\rparen\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230a\", \"\\u230b\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"\\\\surd\"]; // delimiters that always stack\n\nconst stackAlwaysDelimiters = [\"\\\\uparrow\", \"\\\\downarrow\", \"\\\\updownarrow\", \"\\\\Uparrow\", \"\\\\Downarrow\", \"\\\\Updownarrow\", \"|\", \"\\\\|\", \"\\\\vert\", \"\\\\Vert\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27ee\", \"\\u27ef\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23b0\", \"\\u23b1\"]; // and delimiters that never stack\n\nconst stackNeverDelimiters = [\"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"/\", \"\\\\backslash\", \"\\\\lt\", \"\\\\gt\"]; // Metrics of the different sizes. Found by looking at TeX's output of\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\n\nconst sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\n/**\n * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.\n */\n\nconst makeSizedDelim = function (delim, size, options, mode, classes) {\n  // < and > turn into \\langle and \\rangle in delimiters\n  if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27e8\") {\n    delim = \"\\\\langle\";\n  } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27e9\") {\n    delim = \"\\\\rangle\";\n  } // Sized delimiters are never centered.\n\n\n  if (utils.contains(stackLargeDelimiters, delim) || utils.contains(stackNeverDelimiters, delim)) {\n    return makeLargeDelim(delim, size, false, options, mode, classes);\n  } else if (utils.contains(stackAlwaysDelimiters, delim)) {\n    return makeStackedDelim(delim, sizeToMaxHeight[size], false, options, mode, classes);\n  } else {\n    throw new src_ParseError(\"Illegal delimiter: '\" + delim + \"'\");\n  }\n};\n/**\n * There are three different sequences of delimiter sizes that the delimiters\n * follow depending on the kind of delimiter. This is used when creating custom\n * sized delimiters to decide whether to create a small, large, or stacked\n * delimiter.\n *\n * In real TeX, these sequences aren't explicitly defined, but are instead\n * defined inside the font metrics. Since there are only three sequences that\n * are possible for the delimiters that TeX defines, it is easier to just encode\n * them explicitly here.\n */\n\n\n// Delimiters that never stack try small delimiters and large delimiters only\nconst stackNeverDelimiterSequence = [{\n  type: \"small\",\n  style: src_Style.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: src_Style.SCRIPT\n}, {\n  type: \"small\",\n  style: src_Style.TEXT\n}, {\n  type: \"large\",\n  size: 1\n}, {\n  type: \"large\",\n  size: 2\n}, {\n  type: \"large\",\n  size: 3\n}, {\n  type: \"large\",\n  size: 4\n}]; // Delimiters that always stack try the small delimiters first, then stack\n\nconst stackAlwaysDelimiterSequence = [{\n  type: \"small\",\n  style: src_Style.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: src_Style.SCRIPT\n}, {\n  type: \"small\",\n  style: src_Style.TEXT\n}, {\n  type: \"stack\"\n}]; // Delimiters that stack when large try the small and then large delimiters, and\n// stack afterwards\n\nconst stackLargeDelimiterSequence = [{\n  type: \"small\",\n  style: src_Style.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: src_Style.SCRIPT\n}, {\n  type: \"small\",\n  style: src_Style.TEXT\n}, {\n  type: \"large\",\n  size: 1\n}, {\n  type: \"large\",\n  size: 2\n}, {\n  type: \"large\",\n  size: 3\n}, {\n  type: \"large\",\n  size: 4\n}, {\n  type: \"stack\"\n}];\n/**\n * Get the font used in a delimiter based on what kind of delimiter it is.\n * TODO(#963) Use more specific font family return type once that is introduced.\n */\n\nconst delimTypeToFont = function (type) {\n  if (type.type === \"small\") {\n    return \"Main-Regular\";\n  } else if (type.type === \"large\") {\n    return \"Size\" + type.size + \"-Regular\";\n  } else if (type.type === \"stack\") {\n    return \"Size4-Regular\";\n  } else {\n    throw new Error(\"Add support for delim type '\" + type.type + \"' here.\");\n  }\n};\n/**\n * Traverse a sequence of types of delimiters to decide what kind of delimiter\n * should be used to create a delimiter of the given height+depth.\n */\n\n\nconst traverseSequence = function (delim, height, sequence, options) {\n  // Here, we choose the index we should start at in the sequences. In smaller\n  // sizes (which correspond to larger numbers in style.size) we start earlier\n  // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts\n  // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2\n  const start = Math.min(2, 3 - options.style.size);\n\n  for (let i = start; i < sequence.length; i++) {\n    if (sequence[i].type === \"stack\") {\n      // This is always the last delimiter, so we just break the loop now.\n      break;\n    }\n\n    const metrics = getMetrics(delim, delimTypeToFont(sequence[i]), \"math\");\n    let heightDepth = metrics.height + metrics.depth; // Small delimiters are scaled down versions of the same font, so we\n    // account for the style change size.\n\n    if (sequence[i].type === \"small\") {\n      const newOptions = options.havingBaseStyle(sequence[i].style);\n      heightDepth *= newOptions.sizeMultiplier;\n    } // Check if the delimiter at this size works for the given height.\n\n\n    if (heightDepth > height) {\n      return sequence[i];\n    }\n  } // If we reached the end of the sequence, return the last sequence element.\n\n\n  return sequence[sequence.length - 1];\n};\n/**\n * Make a delimiter of a given height+depth, with optional centering. Here, we\n * traverse the sequences, and create a delimiter that the sequence tells us to.\n */\n\n\nconst makeCustomSizedDelim = function (delim, height, center, options, mode, classes) {\n  if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27e8\") {\n    delim = \"\\\\langle\";\n  } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27e9\") {\n    delim = \"\\\\rangle\";\n  } // Decide what sequence to use\n\n\n  let sequence;\n\n  if (utils.contains(stackNeverDelimiters, delim)) {\n    sequence = stackNeverDelimiterSequence;\n  } else if (utils.contains(stackLargeDelimiters, delim)) {\n    sequence = stackLargeDelimiterSequence;\n  } else {\n    sequence = stackAlwaysDelimiterSequence;\n  } // Look through the sequence\n\n\n  const delimType = traverseSequence(delim, height, sequence, options); // Get the delimiter from font glyphs.\n  // Depending on the sequence element we decided on, call the\n  // appropriate function.\n\n  if (delimType.type === \"small\") {\n    return makeSmallDelim(delim, delimType.style, center, options, mode, classes);\n  } else if (delimType.type === \"large\") {\n    return makeLargeDelim(delim, delimType.size, center, options, mode, classes);\n  } else\n    /* if (delimType.type === \"stack\") */\n    {\n      return makeStackedDelim(delim, height, center, options, mode, classes);\n    }\n};\n/**\n * Make a delimiter for use with `\\left` and `\\right`, given a height and depth\n * of an expression that the delimiters surround.\n */\n\n\nconst makeLeftRightDelim = function (delim, height, depth, options, mode, classes) {\n  // We always center \\left/\\right delimiters, so the axis is always shifted\n  const axisHeight = options.fontMetrics().axisHeight * options.sizeMultiplier; // Taken from TeX source, tex.web, function make_left_right\n\n  const delimiterFactor = 901;\n  const delimiterExtend = 5.0 / options.fontMetrics().ptPerEm;\n  const maxDistFromAxis = Math.max(height - axisHeight, depth + axisHeight);\n  const totalHeight = Math.max( // In real TeX, calculations are done using integral values which are\n  // 65536 per pt, or 655360 per em. So, the division here truncates in\n  // TeX but doesn't here, producing different results. If we wanted to\n  // exactly match TeX's calculation, we could do\n  //   Math.floor(655360 * maxDistFromAxis / 500) *\n  //    delimiterFactor / 655360\n  // (To see the difference, compare\n  //    x^{x^{\\left(\\rule{0.1em}{0.68em}\\right)}}\n  // in TeX and KaTeX)\n  maxDistFromAxis / 500 * delimiterFactor, 2 * maxDistFromAxis - delimiterExtend); // Finally, we defer to `makeCustomSizedDelim` with our calculated total\n  // height\n\n  return makeCustomSizedDelim(delim, totalHeight, true, options, mode, classes);\n};\n\n/* harmony default export */ var delimiter = ({\n  sqrtImage: makeSqrtImage,\n  sizedDelim: makeSizedDelim,\n  sizeToMaxHeight: sizeToMaxHeight,\n  customSizedDelim: makeCustomSizedDelim,\n  leftRightDelim: makeLeftRightDelim\n});\n;// CONCATENATED MODULE: ./src/functions/delimsizing.js\n\n\n\n\n\n\n\n\n\n\n// Extra data needed for the delimiter handler down below\nconst delimiterSizes = {\n  \"\\\\bigl\": {\n    mclass: \"mopen\",\n    size: 1\n  },\n  \"\\\\Bigl\": {\n    mclass: \"mopen\",\n    size: 2\n  },\n  \"\\\\biggl\": {\n    mclass: \"mopen\",\n    size: 3\n  },\n  \"\\\\Biggl\": {\n    mclass: \"mopen\",\n    size: 4\n  },\n  \"\\\\bigr\": {\n    mclass: \"mclose\",\n    size: 1\n  },\n  \"\\\\Bigr\": {\n    mclass: \"mclose\",\n    size: 2\n  },\n  \"\\\\biggr\": {\n    mclass: \"mclose\",\n    size: 3\n  },\n  \"\\\\Biggr\": {\n    mclass: \"mclose\",\n    size: 4\n  },\n  \"\\\\bigm\": {\n    mclass: \"mrel\",\n    size: 1\n  },\n  \"\\\\Bigm\": {\n    mclass: \"mrel\",\n    size: 2\n  },\n  \"\\\\biggm\": {\n    mclass: \"mrel\",\n    size: 3\n  },\n  \"\\\\Biggm\": {\n    mclass: \"mrel\",\n    size: 4\n  },\n  \"\\\\big\": {\n    mclass: \"mord\",\n    size: 1\n  },\n  \"\\\\Big\": {\n    mclass: \"mord\",\n    size: 2\n  },\n  \"\\\\bigg\": {\n    mclass: \"mord\",\n    size: 3\n  },\n  \"\\\\Bigg\": {\n    mclass: \"mord\",\n    size: 4\n  }\n};\nconst delimiters = [\"(\", \"\\\\lparen\", \")\", \"\\\\rparen\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230a\", \"\\u230b\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"<\", \">\", \"\\\\langle\", \"\\u27e8\", \"\\\\rangle\", \"\\u27e9\", \"\\\\lt\", \"\\\\gt\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27ee\", \"\\u27ef\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23b0\", \"\\u23b1\", \"/\", \"\\\\backslash\", \"|\", \"\\\\vert\", \"\\\\|\", \"\\\\Vert\", \"\\\\uparrow\", \"\\\\Uparrow\", \"\\\\downarrow\", \"\\\\Downarrow\", \"\\\\updownarrow\", \"\\\\Updownarrow\", \".\"];\n\n// Delimiter functions\nfunction checkDelimiter(delim, context) {\n  const symDelim = checkSymbolNodeType(delim);\n\n  if (symDelim && utils.contains(delimiters, symDelim.text)) {\n    return symDelim;\n  } else if (symDelim) {\n    throw new src_ParseError(\"Invalid delimiter '\" + symDelim.text + \"' after '\" + context.funcName + \"'\", delim);\n  } else {\n    throw new src_ParseError(\"Invalid delimiter type '\" + delim.type + \"'\", delim);\n  }\n}\n\ndefineFunction({\n  type: \"delimsizing\",\n  names: [\"\\\\bigl\", \"\\\\Bigl\", \"\\\\biggl\", \"\\\\Biggl\", \"\\\\bigr\", \"\\\\Bigr\", \"\\\\biggr\", \"\\\\Biggr\", \"\\\\bigm\", \"\\\\Bigm\", \"\\\\biggm\", \"\\\\Biggm\", \"\\\\big\", \"\\\\Big\", \"\\\\bigg\", \"\\\\Bigg\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"primitive\"]\n  },\n  handler: (context, args) => {\n    const delim = checkDelimiter(args[0], context);\n    return {\n      type: \"delimsizing\",\n      mode: context.parser.mode,\n      size: delimiterSizes[context.funcName].size,\n      mclass: delimiterSizes[context.funcName].mclass,\n      delim: delim.text\n    };\n  },\n  htmlBuilder: (group, options) => {\n    if (group.delim === \".\") {\n      // Empty delimiters still count as elements, even though they don't\n      // show anything.\n      return buildCommon.makeSpan([group.mclass]);\n    } // Use delimiter.sizedDelim to generate the delimiter.\n\n\n    return delimiter.sizedDelim(group.delim, group.size, options, group.mode, [group.mclass]);\n  },\n  mathmlBuilder: group => {\n    const children = [];\n\n    if (group.delim !== \".\") {\n      children.push(makeText(group.delim, group.mode));\n    }\n\n    const node = new mathMLTree.MathNode(\"mo\", children);\n\n    if (group.mclass === \"mopen\" || group.mclass === \"mclose\") {\n      // Only some of the delimsizing functions act as fences, and they\n      // return \"mopen\" or \"mclose\" mclass.\n      node.setAttribute(\"fence\", \"true\");\n    } else {\n      // Explicitly disable fencing if it's not a fence, to override the\n      // defaults.\n      node.setAttribute(\"fence\", \"false\");\n    }\n\n    node.setAttribute(\"stretchy\", \"true\");\n    const size = makeEm(delimiter.sizeToMaxHeight[group.size]);\n    node.setAttribute(\"minsize\", size);\n    node.setAttribute(\"maxsize\", size);\n    return node;\n  }\n});\n\nfunction assertParsed(group) {\n  if (!group.body) {\n    throw new Error(\"Bug: The leftright ParseNode wasn't fully parsed.\");\n  }\n}\n\ndefineFunction({\n  type: \"leftright-right\",\n  names: [\"\\\\right\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n  handler: (context, args) => {\n    // \\left case below triggers parsing of \\right in\n    //   `const right = parser.parseFunction();`\n    // uses this return value.\n    const color = context.parser.gullet.macros.get(\"\\\\current@color\");\n\n    if (color && typeof color !== \"string\") {\n      throw new src_ParseError(\"\\\\current@color set to non-string in \\\\right\");\n    }\n\n    return {\n      type: \"leftright-right\",\n      mode: context.parser.mode,\n      delim: checkDelimiter(args[0], context).text,\n      color // undefined if not set via \\color\n\n    };\n  }\n});\ndefineFunction({\n  type: \"leftright\",\n  names: [\"\\\\left\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n  handler: (context, args) => {\n    const delim = checkDelimiter(args[0], context);\n    const parser = context.parser; // Parse out the implicit body\n\n    ++parser.leftrightDepth; // parseExpression stops before '\\\\right'\n\n    const body = parser.parseExpression(false);\n    --parser.leftrightDepth; // Check the next token\n\n    parser.expect(\"\\\\right\", false);\n    const right = assertNodeType(parser.parseFunction(), \"leftright-right\");\n    return {\n      type: \"leftright\",\n      mode: parser.mode,\n      body,\n      left: delim.text,\n      right: right.delim,\n      rightColor: right.color\n    };\n  },\n  htmlBuilder: (group, options) => {\n    assertParsed(group); // Build the inner expression\n\n    const inner = buildExpression(group.body, options, true, [\"mopen\", \"mclose\"]);\n    let innerHeight = 0;\n    let innerDepth = 0;\n    let hadMiddle = false; // Calculate its height and depth\n\n    for (let i = 0; i < inner.length; i++) {\n      // Property `isMiddle` not defined on `span`. See comment in\n      // \"middle\"'s htmlBuilder.\n      // $FlowFixMe\n      if (inner[i].isMiddle) {\n        hadMiddle = true;\n      } else {\n        innerHeight = Math.max(inner[i].height, innerHeight);\n        innerDepth = Math.max(inner[i].depth, innerDepth);\n      }\n    } // The size of delimiters is the same, regardless of what style we are\n    // in. Thus, to correctly calculate the size of delimiter we need around\n    // a group, we scale down the inner size based on the size.\n\n\n    innerHeight *= options.sizeMultiplier;\n    innerDepth *= options.sizeMultiplier;\n    let leftDelim;\n\n    if (group.left === \".\") {\n      // Empty delimiters in \\left and \\right make null delimiter spaces.\n      leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n    } else {\n      // Otherwise, use leftRightDelim to generate the correct sized\n      // delimiter.\n      leftDelim = delimiter.leftRightDelim(group.left, innerHeight, innerDepth, options, group.mode, [\"mopen\"]);\n    } // Add it to the beginning of the expression\n\n\n    inner.unshift(leftDelim); // Handle middle delimiters\n\n    if (hadMiddle) {\n      for (let i = 1; i < inner.length; i++) {\n        const middleDelim = inner[i]; // Property `isMiddle` not defined on `span`. See comment in\n        // \"middle\"'s htmlBuilder.\n        // $FlowFixMe\n\n        const isMiddle = middleDelim.isMiddle;\n\n        if (isMiddle) {\n          // Apply the options that were active when \\middle was called\n          inner[i] = delimiter.leftRightDelim(isMiddle.delim, innerHeight, innerDepth, isMiddle.options, group.mode, []);\n        }\n      }\n    }\n\n    let rightDelim; // Same for the right delimiter, but using color specified by \\color\n\n    if (group.right === \".\") {\n      rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n    } else {\n      const colorOptions = group.rightColor ? options.withColor(group.rightColor) : options;\n      rightDelim = delimiter.leftRightDelim(group.right, innerHeight, innerDepth, colorOptions, group.mode, [\"mclose\"]);\n    } // Add it to the end of the expression.\n\n\n    inner.push(rightDelim);\n    return buildCommon.makeSpan([\"minner\"], inner, options);\n  },\n  mathmlBuilder: (group, options) => {\n    assertParsed(group);\n    const inner = buildMathML_buildExpression(group.body, options);\n\n    if (group.left !== \".\") {\n      const leftNode = new mathMLTree.MathNode(\"mo\", [makeText(group.left, group.mode)]);\n      leftNode.setAttribute(\"fence\", \"true\");\n      inner.unshift(leftNode);\n    }\n\n    if (group.right !== \".\") {\n      const rightNode = new mathMLTree.MathNode(\"mo\", [makeText(group.right, group.mode)]);\n      rightNode.setAttribute(\"fence\", \"true\");\n\n      if (group.rightColor) {\n        rightNode.setAttribute(\"mathcolor\", group.rightColor);\n      }\n\n      inner.push(rightNode);\n    }\n\n    return makeRow(inner);\n  }\n});\ndefineFunction({\n  type: \"middle\",\n  names: [\"\\\\middle\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n  handler: (context, args) => {\n    const delim = checkDelimiter(args[0], context);\n\n    if (!context.parser.leftrightDepth) {\n      throw new src_ParseError(\"\\\\middle without preceding \\\\left\", delim);\n    }\n\n    return {\n      type: \"middle\",\n      mode: context.parser.mode,\n      delim: delim.text\n    };\n  },\n  htmlBuilder: (group, options) => {\n    let middleDelim;\n\n    if (group.delim === \".\") {\n      middleDelim = makeNullDelimiter(options, []);\n    } else {\n      middleDelim = delimiter.sizedDelim(group.delim, 1, options, group.mode, []);\n      const isMiddle = {\n        delim: group.delim,\n        options\n      }; // Property `isMiddle` not defined on `span`. It is only used in\n      // this file above.\n      // TODO: Fix this violation of the `span` type and possibly rename\n      // things since `isMiddle` sounds like a boolean, but is a struct.\n      // $FlowFixMe\n\n      middleDelim.isMiddle = isMiddle;\n    }\n\n    return middleDelim;\n  },\n  mathmlBuilder: (group, options) => {\n    // A Firefox \\middle will stretch a character vertically only if it\n    // is in the fence part of the operator dictionary at:\n    // https://www.w3.org/TR/MathML3/appendixc.html.\n    // So we need to avoid U+2223 and use plain \"|\" instead.\n    const textNode = group.delim === \"\\\\vert\" || group.delim === \"|\" ? makeText(\"|\", \"text\") : makeText(group.delim, group.mode);\n    const middleNode = new mathMLTree.MathNode(\"mo\", [textNode]);\n    middleNode.setAttribute(\"fence\", \"true\"); // MathML gives 5/18em spacing to each <mo> element.\n    // \\middle should get delimiter spacing instead.\n\n    middleNode.setAttribute(\"lspace\", \"0.05em\");\n    middleNode.setAttribute(\"rspace\", \"0.05em\");\n    return middleNode;\n  }\n});\n;// CONCATENATED MODULE: ./src/functions/enclose.js\n\n\n\n\n\n\n\n\n\n\n\n\nconst enclose_htmlBuilder = (group, options) => {\n  // \\cancel, \\bcancel, \\xcancel, \\sout, \\fbox, \\colorbox, \\fcolorbox, \\phase\n  // Some groups can return document fragments.  Handle those by wrapping\n  // them in a span.\n  const inner = buildCommon.wrapFragment(buildGroup(group.body, options), options);\n  const label = group.label.slice(1);\n  let scale = options.sizeMultiplier;\n  let img;\n  let imgShift = 0; // In the LaTeX cancel package, line geometry is slightly different\n  // depending on whether the subject is wider than it is tall, or vice versa.\n  // We don't know the width of a group, so as a proxy, we test if\n  // the subject is a single character. This captures most of the\n  // subjects that should get the \"tall\" treatment.\n\n  const isSingleChar = utils.isCharacterBox(group.body);\n\n  if (label === \"sout\") {\n    img = buildCommon.makeSpan([\"stretchy\", \"sout\"]);\n    img.height = options.fontMetrics().defaultRuleThickness / scale;\n    imgShift = -0.5 * options.fontMetrics().xHeight;\n  } else if (label === \"phase\") {\n    // Set a couple of dimensions from the steinmetz package.\n    const lineWeight = calculateSize({\n      number: 0.6,\n      unit: \"pt\"\n    }, options);\n    const clearance = calculateSize({\n      number: 0.35,\n      unit: \"ex\"\n    }, options); // Prevent size changes like \\Huge from affecting line thickness\n\n    const newOptions = options.havingBaseSizing();\n    scale = scale / newOptions.sizeMultiplier;\n    const angleHeight = inner.height + inner.depth + lineWeight + clearance; // Reserve a left pad for the angle.\n\n    inner.style.paddingLeft = makeEm(angleHeight / 2 + lineWeight); // Create an SVG\n\n    const viewBoxHeight = Math.floor(1000 * angleHeight * scale);\n    const path = phasePath(viewBoxHeight);\n    const svgNode = new SvgNode([new PathNode(\"phase\", path)], {\n      \"width\": \"400em\",\n      \"height\": makeEm(viewBoxHeight / 1000),\n      \"viewBox\": \"0 0 400000 \" + viewBoxHeight,\n      \"preserveAspectRatio\": \"xMinYMin slice\"\n    }); // Wrap it in a span with overflow: hidden.\n\n    img = buildCommon.makeSvgSpan([\"hide-tail\"], [svgNode], options);\n    img.style.height = makeEm(angleHeight);\n    imgShift = inner.depth + lineWeight + clearance;\n  } else {\n    // Add horizontal padding\n    if (/cancel/.test(label)) {\n      if (!isSingleChar) {\n        inner.classes.push(\"cancel-pad\");\n      }\n    } else if (label === \"angl\") {\n      inner.classes.push(\"anglpad\");\n    } else {\n      inner.classes.push(\"boxpad\");\n    } // Add vertical padding\n\n\n    let topPad = 0;\n    let bottomPad = 0;\n    let ruleThickness = 0; // ref: cancel package: \\advance\\totalheight2\\p@ % \"+2\"\n\n    if (/box/.test(label)) {\n      ruleThickness = Math.max(options.fontMetrics().fboxrule, // default\n      options.minRuleThickness // User override.\n      );\n      topPad = options.fontMetrics().fboxsep + (label === \"colorbox\" ? 0 : ruleThickness);\n      bottomPad = topPad;\n    } else if (label === \"angl\") {\n      ruleThickness = Math.max(options.fontMetrics().defaultRuleThickness, options.minRuleThickness);\n      topPad = 4 * ruleThickness; // gap = 3 × line, plus the line itself.\n\n      bottomPad = Math.max(0, 0.25 - inner.depth);\n    } else {\n      topPad = isSingleChar ? 0.2 : 0;\n      bottomPad = topPad;\n    }\n\n    img = stretchy.encloseSpan(inner, label, topPad, bottomPad, options);\n\n    if (/fbox|boxed|fcolorbox/.test(label)) {\n      img.style.borderStyle = \"solid\";\n      img.style.borderWidth = makeEm(ruleThickness);\n    } else if (label === \"angl\" && ruleThickness !== 0.049) {\n      img.style.borderTopWidth = makeEm(ruleThickness);\n      img.style.borderRightWidth = makeEm(ruleThickness);\n    }\n\n    imgShift = inner.depth + bottomPad;\n\n    if (group.backgroundColor) {\n      img.style.backgroundColor = group.backgroundColor;\n\n      if (group.borderColor) {\n        img.style.borderColor = group.borderColor;\n      }\n    }\n  }\n\n  let vlist;\n\n  if (group.backgroundColor) {\n    vlist = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [// Put the color background behind inner;\n      {\n        type: \"elem\",\n        elem: img,\n        shift: imgShift\n      }, {\n        type: \"elem\",\n        elem: inner,\n        shift: 0\n      }]\n    }, options);\n  } else {\n    const classes = /cancel|phase/.test(label) ? [\"svg-align\"] : [];\n    vlist = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [// Write the \\cancel stroke on top of inner.\n      {\n        type: \"elem\",\n        elem: inner,\n        shift: 0\n      }, {\n        type: \"elem\",\n        elem: img,\n        shift: imgShift,\n        wrapperClasses: classes\n      }]\n    }, options);\n  }\n\n  if (/cancel/.test(label)) {\n    // The cancel package documentation says that cancel lines add their height\n    // to the expression, but tests show that isn't how it actually works.\n    vlist.height = inner.height;\n    vlist.depth = inner.depth;\n  }\n\n  if (/cancel/.test(label) && !isSingleChar) {\n    // cancel does not create horiz space for its line extension.\n    return buildCommon.makeSpan([\"mord\", \"cancel-lap\"], [vlist], options);\n  } else {\n    return buildCommon.makeSpan([\"mord\"], [vlist], options);\n  }\n};\n\nconst enclose_mathmlBuilder = (group, options) => {\n  let fboxsep = 0;\n  const node = new mathMLTree.MathNode(group.label.indexOf(\"colorbox\") > -1 ? \"mpadded\" : \"menclose\", [buildMathML_buildGroup(group.body, options)]);\n\n  switch (group.label) {\n    case \"\\\\cancel\":\n      node.setAttribute(\"notation\", \"updiagonalstrike\");\n      break;\n\n    case \"\\\\bcancel\":\n      node.setAttribute(\"notation\", \"downdiagonalstrike\");\n      break;\n\n    case \"\\\\phase\":\n      node.setAttribute(\"notation\", \"phasorangle\");\n      break;\n\n    case \"\\\\sout\":\n      node.setAttribute(\"notation\", \"horizontalstrike\");\n      break;\n\n    case \"\\\\fbox\":\n      node.setAttribute(\"notation\", \"box\");\n      break;\n\n    case \"\\\\angl\":\n      node.setAttribute(\"notation\", \"actuarial\");\n      break;\n\n    case \"\\\\fcolorbox\":\n    case \"\\\\colorbox\":\n      // <menclose> doesn't have a good notation option. So use <mpadded>\n      // instead. Set some attributes that come included with <menclose>.\n      fboxsep = options.fontMetrics().fboxsep * options.fontMetrics().ptPerEm;\n      node.setAttribute(\"width\", \"+\" + 2 * fboxsep + \"pt\");\n      node.setAttribute(\"height\", \"+\" + 2 * fboxsep + \"pt\");\n      node.setAttribute(\"lspace\", fboxsep + \"pt\"); //\n\n      node.setAttribute(\"voffset\", fboxsep + \"pt\");\n\n      if (group.label === \"\\\\fcolorbox\") {\n        const thk = Math.max(options.fontMetrics().fboxrule, // default\n        options.minRuleThickness // user override\n        );\n        node.setAttribute(\"style\", \"border: \" + thk + \"em solid \" + String(group.borderColor));\n      }\n\n      break;\n\n    case \"\\\\xcancel\":\n      node.setAttribute(\"notation\", \"updiagonalstrike downdiagonalstrike\");\n      break;\n  }\n\n  if (group.backgroundColor) {\n    node.setAttribute(\"mathbackground\", group.backgroundColor);\n  }\n\n  return node;\n};\n\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\colorbox\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true,\n    argTypes: [\"color\", \"text\"]\n  },\n\n  handler(_ref, args, optArgs) {\n    let {\n      parser,\n      funcName\n    } = _ref;\n    const color = assertNodeType(args[0], \"color-token\").color;\n    const body = args[1];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor: color,\n      body\n    };\n  },\n\n  htmlBuilder: enclose_htmlBuilder,\n  mathmlBuilder: enclose_mathmlBuilder\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\fcolorbox\"],\n  props: {\n    numArgs: 3,\n    allowedInText: true,\n    argTypes: [\"color\", \"color\", \"text\"]\n  },\n\n  handler(_ref2, args, optArgs) {\n    let {\n      parser,\n      funcName\n    } = _ref2;\n    const borderColor = assertNodeType(args[0], \"color-token\").color;\n    const backgroundColor = assertNodeType(args[1], \"color-token\").color;\n    const body = args[2];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor,\n      borderColor,\n      body\n    };\n  },\n\n  htmlBuilder: enclose_htmlBuilder,\n  mathmlBuilder: enclose_mathmlBuilder\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\fbox\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"hbox\"],\n    allowedInText: true\n  },\n\n  handler(_ref3, args) {\n    let {\n      parser\n    } = _ref3;\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: \"\\\\fbox\",\n      body: args[0]\n    };\n  }\n\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\cancel\", \"\\\\bcancel\", \"\\\\xcancel\", \"\\\\sout\", \"\\\\phase\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref4, args) {\n    let {\n      parser,\n      funcName\n    } = _ref4;\n    const body = args[0];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      body\n    };\n  },\n\n  htmlBuilder: enclose_htmlBuilder,\n  mathmlBuilder: enclose_mathmlBuilder\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\angl\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"hbox\"],\n    allowedInText: false\n  },\n\n  handler(_ref5, args) {\n    let {\n      parser\n    } = _ref5;\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: \"\\\\angl\",\n      body: args[0]\n    };\n  }\n\n});\n;// CONCATENATED MODULE: ./src/defineEnvironment.js\n\n\n/**\n * All registered environments.\n * `environments.js` exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary via `environments.js`.\n */\nconst _environments = {};\nfunction defineEnvironment(_ref) {\n  let {\n    type,\n    names,\n    props,\n    handler,\n    htmlBuilder,\n    mathmlBuilder\n  } = _ref;\n  // Set default values of environments.\n  const data = {\n    type,\n    numArgs: props.numArgs || 0,\n    allowedInText: false,\n    numOptionalArgs: 0,\n    handler\n  };\n\n  for (let i = 0; i < names.length; ++i) {\n    // TODO: The value type of _environments should be a type union of all\n    // possible `EnvSpec<>` possibilities instead of `EnvSpec<*>`, which is\n    // an existential type.\n    _environments[names[i]] = data;\n  }\n\n  if (htmlBuilder) {\n    _htmlGroupBuilders[type] = htmlBuilder;\n  }\n\n  if (mathmlBuilder) {\n    _mathmlGroupBuilders[type] = mathmlBuilder;\n  }\n}\n;// CONCATENATED MODULE: ./src/defineMacro.js\n\n\n/**\n * All registered global/built-in macros.\n * `macros.js` exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary via `macros.js`.\n */\nconst _macros = {}; // This function might one day accept an additional argument and do more things.\n\nfunction defineMacro(name, body) {\n  _macros[name] = body;\n}\n;// CONCATENATED MODULE: ./src/SourceLocation.js\n/**\n * Lexing or parsing positional information for error reporting.\n * This object is immutable.\n */\nclass SourceLocation {\n  // The + prefix indicates that these fields aren't writeable\n  // Lexer holding the input string.\n  // Start offset, zero-based inclusive.\n  // End offset, zero-based exclusive.\n  constructor(lexer, start, end) {\n    this.lexer = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.lexer = lexer;\n    this.start = start;\n    this.end = end;\n  }\n  /**\n   * Merges two `SourceLocation`s from location providers, given they are\n   * provided in order of appearance.\n   * - Returns the first one's location if only the first is provided.\n   * - Returns a merged range of the first and the last if both are provided\n   *   and their lexers match.\n   * - Otherwise, returns null.\n   */\n\n\n  static range(first, second) {\n    if (!second) {\n      return first && first.loc;\n    } else if (!first || !first.loc || !second.loc || first.loc.lexer !== second.loc.lexer) {\n      return null;\n    } else {\n      return new SourceLocation(first.loc.lexer, first.loc.start, second.loc.end);\n    }\n  }\n\n}\n;// CONCATENATED MODULE: ./src/Token.js\n\n/**\n * Interface required to break circular dependency between Token, Lexer, and\n * ParseError.\n */\n\n/**\n * The resulting token returned from `lex`.\n *\n * It consists of the token text plus some position information.\n * The position information is essentially a range in an input string,\n * but instead of referencing the bare input string, we refer to the lexer.\n * That way it is possible to attach extra metadata to the input string,\n * like for example a file name or similar.\n *\n * The position information is optional, so it is OK to construct synthetic\n * tokens if appropriate. Not providing available position information may\n * lead to degraded error reporting, though.\n */\nclass Token {\n  // don't expand the token\n  // used in \\noexpand\n  constructor(text, // the text of this token\n  loc) {\n    this.text = void 0;\n    this.loc = void 0;\n    this.noexpand = void 0;\n    this.treatAsRelax = void 0;\n    this.text = text;\n    this.loc = loc;\n  }\n  /**\n   * Given a pair of tokens (this and endToken), compute a `Token` encompassing\n   * the whole input range enclosed by these two.\n   */\n\n\n  range(endToken, // last token of the range, inclusive\n  text // the text of the newly constructed token\n  ) {\n    return new Token(text, SourceLocation.range(this, endToken));\n  }\n\n}\n;// CONCATENATED MODULE: ./src/environments/array.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Helper functions\nfunction getHLines(parser) {\n  // Return an array. The array length = number of hlines.\n  // Each element in the array tells if the line is dashed.\n  const hlineInfo = [];\n  parser.consumeSpaces();\n  let nxt = parser.fetch().text;\n\n  if (nxt === \"\\\\relax\") {\n    // \\relax is an artifact of the \\cr macro below\n    parser.consume();\n    parser.consumeSpaces();\n    nxt = parser.fetch().text;\n  }\n\n  while (nxt === \"\\\\hline\" || nxt === \"\\\\hdashline\") {\n    parser.consume();\n    hlineInfo.push(nxt === \"\\\\hdashline\");\n    parser.consumeSpaces();\n    nxt = parser.fetch().text;\n  }\n\n  return hlineInfo;\n}\n\nconst validateAmsEnvironmentContext = context => {\n  const settings = context.parser.settings;\n\n  if (!settings.displayMode) {\n    throw new src_ParseError(\"{\" + context.envName + \"} can be used only in\" + \" display mode.\");\n  }\n}; // autoTag (an argument to parseArray) can be one of three values:\n// * undefined: Regular (not-top-level) array; no tags on each row\n// * true: Automatic equation numbering, overridable by \\tag\n// * false: Tags allowed on each row, but no automatic numbering\n// This function *doesn't* work with the \"split\" environment name.\n\n\nfunction getAutoTag(name) {\n  if (name.indexOf(\"ed\") === -1) {\n    return name.indexOf(\"*\") === -1;\n  } // return undefined;\n\n}\n/**\n * Parse the body of the environment, with rows delimited by \\\\ and\n * columns delimited by &, and create a nested list in row-major order\n * with one group per cell.  If given an optional argument style\n * (\"text\", \"display\", etc.), then each cell is cast into that style.\n */\n\n\nfunction parseArray(parser, _ref, style) {\n  let {\n    hskipBeforeAndAfter,\n    addJot,\n    cols,\n    arraystretch,\n    colSeparationType,\n    autoTag,\n    singleRow,\n    emptySingleRow,\n    maxNumCols,\n    leqno\n  } = _ref;\n  parser.gullet.beginGroup();\n\n  if (!singleRow) {\n    // \\cr is equivalent to \\\\ without the optional size argument (see below)\n    // TODO: provide helpful error when \\cr is used outside array environment\n    parser.gullet.macros.set(\"\\\\cr\", \"\\\\\\\\\\\\relax\");\n  } // Get current arraystretch if it's not set by the environment\n\n\n  if (!arraystretch) {\n    const stretch = parser.gullet.expandMacroAsText(\"\\\\arraystretch\");\n\n    if (stretch == null) {\n      // Default \\arraystretch from lttab.dtx\n      arraystretch = 1;\n    } else {\n      arraystretch = parseFloat(stretch);\n\n      if (!arraystretch || arraystretch < 0) {\n        throw new src_ParseError(\"Invalid \\\\arraystretch: \" + stretch);\n      }\n    }\n  } // Start group for first cell\n\n\n  parser.gullet.beginGroup();\n  let row = [];\n  const body = [row];\n  const rowGaps = [];\n  const hLinesBeforeRow = [];\n  const tags = autoTag != null ? [] : undefined; // amsmath uses \\global\\@eqnswtrue and \\global\\@eqnswfalse to represent\n  // whether this row should have an equation number.  Simulate this with\n  // a \\@eqnsw macro set to 1 or 0.\n\n  function beginRow() {\n    if (autoTag) {\n      parser.gullet.macros.set(\"\\\\@eqnsw\", \"1\", true);\n    }\n  }\n\n  function endRow() {\n    if (tags) {\n      if (parser.gullet.macros.get(\"\\\\df@tag\")) {\n        tags.push(parser.subparse([new Token(\"\\\\df@tag\")]));\n        parser.gullet.macros.set(\"\\\\df@tag\", undefined, true);\n      } else {\n        tags.push(Boolean(autoTag) && parser.gullet.macros.get(\"\\\\@eqnsw\") === \"1\");\n      }\n    }\n  }\n\n  beginRow(); // Test for \\hline at the top of the array.\n\n  hLinesBeforeRow.push(getHLines(parser));\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    // Parse each cell in its own group (namespace)\n    let cell = parser.parseExpression(false, singleRow ? \"\\\\end\" : \"\\\\\\\\\");\n    parser.gullet.endGroup();\n    parser.gullet.beginGroup();\n    cell = {\n      type: \"ordgroup\",\n      mode: parser.mode,\n      body: cell\n    };\n\n    if (style) {\n      cell = {\n        type: \"styling\",\n        mode: parser.mode,\n        style,\n        body: [cell]\n      };\n    }\n\n    row.push(cell);\n    const next = parser.fetch().text;\n\n    if (next === \"&\") {\n      if (maxNumCols && row.length === maxNumCols) {\n        if (singleRow || colSeparationType) {\n          // {equation} or {split}\n          throw new src_ParseError(\"Too many tab characters: &\", parser.nextToken);\n        } else {\n          // {array} environment\n          parser.settings.reportNonstrict(\"textEnv\", \"Too few columns \" + \"specified in the {array} column argument.\");\n        }\n      }\n\n      parser.consume();\n    } else if (next === \"\\\\end\") {\n      endRow(); // Arrays terminate newlines with `\\crcr` which consumes a `\\cr` if\n      // the last line is empty.  However, AMS environments keep the\n      // empty row if it's the only one.\n      // NOTE: Currently, `cell` is the last item added into `row`.\n\n      if (row.length === 1 && cell.type === \"styling\" && cell.body[0].body.length === 0 && (body.length > 1 || !emptySingleRow)) {\n        body.pop();\n      }\n\n      if (hLinesBeforeRow.length < body.length + 1) {\n        hLinesBeforeRow.push([]);\n      }\n\n      break;\n    } else if (next === \"\\\\\\\\\") {\n      parser.consume();\n      let size; // \\def\\Let@{\\let\\\\\\math@cr}\n      // \\def\\math@cr{...\\math@cr@}\n      // \\def\\math@cr@{\\new@ifnextchar[\\math@cr@@{\\math@cr@@[\\z@]}}\n      // \\def\\math@cr@@[#1]{...\\math@cr@@@...}\n      // \\def\\math@cr@@@{\\cr}\n\n      if (parser.gullet.future().text !== \" \") {\n        size = parser.parseSizeGroup(true);\n      }\n\n      rowGaps.push(size ? size.value : null);\n      endRow(); // check for \\hline(s) following the row separator\n\n      hLinesBeforeRow.push(getHLines(parser));\n      row = [];\n      body.push(row);\n      beginRow();\n    } else {\n      throw new src_ParseError(\"Expected & or \\\\\\\\ or \\\\cr or \\\\end\", parser.nextToken);\n    }\n  } // End cell group\n\n\n  parser.gullet.endGroup(); // End array group defining \\cr\n\n  parser.gullet.endGroup();\n  return {\n    type: \"array\",\n    mode: parser.mode,\n    addJot,\n    arraystretch,\n    body,\n    cols,\n    rowGaps,\n    hskipBeforeAndAfter,\n    hLinesBeforeRow,\n    colSeparationType,\n    tags,\n    leqno\n  };\n} // Decides on a style for cells in an array according to whether the given\n// environment name starts with the letter 'd'.\n\n\nfunction dCellStyle(envName) {\n  if (envName.slice(0, 1) === \"d\") {\n    return \"display\";\n  } else {\n    return \"text\";\n  }\n}\n\nconst array_htmlBuilder = function (group, options) {\n  let r;\n  let c;\n  const nr = group.body.length;\n  const hLinesBeforeRow = group.hLinesBeforeRow;\n  let nc = 0;\n  let body = new Array(nr);\n  const hlines = [];\n  const ruleThickness = Math.max( // From LaTeX \\showthe\\arrayrulewidth. Equals 0.04 em.\n  options.fontMetrics().arrayRuleWidth, options.minRuleThickness // User override.\n  ); // Horizontal spacing\n\n  const pt = 1 / options.fontMetrics().ptPerEm;\n  let arraycolsep = 5 * pt; // default value, i.e. \\arraycolsep in article.cls\n\n  if (group.colSeparationType && group.colSeparationType === \"small\") {\n    // We're in a {smallmatrix}. Default column space is \\thickspace,\n    // i.e. 5/18em = 0.2778em, per amsmath.dtx for {smallmatrix}.\n    // But that needs adjustment because LaTeX applies \\scriptstyle to the\n    // entire array, including the colspace, but this function applies\n    // \\scriptstyle only inside each element.\n    const localMultiplier = options.havingStyle(src_Style.SCRIPT).sizeMultiplier;\n    arraycolsep = 0.2778 * (localMultiplier / options.sizeMultiplier);\n  } // Vertical spacing\n\n\n  const baselineskip = group.colSeparationType === \"CD\" ? calculateSize({\n    number: 3,\n    unit: \"ex\"\n  }, options) : 12 * pt; // see size10.clo\n  // Default \\jot from ltmath.dtx\n  // TODO(edemaine): allow overriding \\jot via \\setlength (#687)\n\n  const jot = 3 * pt;\n  const arrayskip = group.arraystretch * baselineskip;\n  const arstrutHeight = 0.7 * arrayskip; // \\strutbox in ltfsstrc.dtx and\n\n  const arstrutDepth = 0.3 * arrayskip; // \\@arstrutbox in lttab.dtx\n\n  let totalHeight = 0; // Set a position for \\hline(s) at the top of the array, if any.\n\n  function setHLinePos(hlinesInGap) {\n    for (let i = 0; i < hlinesInGap.length; ++i) {\n      if (i > 0) {\n        totalHeight += 0.25;\n      }\n\n      hlines.push({\n        pos: totalHeight,\n        isDashed: hlinesInGap[i]\n      });\n    }\n  }\n\n  setHLinePos(hLinesBeforeRow[0]);\n\n  for (r = 0; r < group.body.length; ++r) {\n    const inrow = group.body[r];\n    let height = arstrutHeight; // \\@array adds an \\@arstrut\n\n    let depth = arstrutDepth; // to each tow (via the template)\n\n    if (nc < inrow.length) {\n      nc = inrow.length;\n    }\n\n    const outrow = new Array(inrow.length);\n\n    for (c = 0; c < inrow.length; ++c) {\n      const elt = buildGroup(inrow[c], options);\n\n      if (depth < elt.depth) {\n        depth = elt.depth;\n      }\n\n      if (height < elt.height) {\n        height = elt.height;\n      }\n\n      outrow[c] = elt;\n    }\n\n    const rowGap = group.rowGaps[r];\n    let gap = 0;\n\n    if (rowGap) {\n      gap = calculateSize(rowGap, options);\n\n      if (gap > 0) {\n        // \\@argarraycr\n        gap += arstrutDepth;\n\n        if (depth < gap) {\n          depth = gap; // \\@xargarraycr\n        }\n\n        gap = 0;\n      }\n    } // In AMS multiline environments such as aligned and gathered, rows\n    // correspond to lines that have additional \\jot added to the\n    // \\baselineskip via \\openup.\n\n\n    if (group.addJot) {\n      depth += jot;\n    }\n\n    outrow.height = height;\n    outrow.depth = depth;\n    totalHeight += height;\n    outrow.pos = totalHeight;\n    totalHeight += depth + gap; // \\@yargarraycr\n\n    body[r] = outrow; // Set a position for \\hline(s), if any.\n\n    setHLinePos(hLinesBeforeRow[r + 1]);\n  }\n\n  const offset = totalHeight / 2 + options.fontMetrics().axisHeight;\n  const colDescriptions = group.cols || [];\n  const cols = [];\n  let colSep;\n  let colDescrNum;\n  const tagSpans = [];\n\n  if (group.tags && group.tags.some(tag => tag)) {\n    // An environment with manual tags and/or automatic equation numbers.\n    // Create node(s), the latter of which trigger CSS counter increment.\n    for (r = 0; r < nr; ++r) {\n      const rw = body[r];\n      const shift = rw.pos - offset;\n      const tag = group.tags[r];\n      let tagSpan;\n\n      if (tag === true) {\n        // automatic numbering\n        tagSpan = buildCommon.makeSpan([\"eqn-num\"], [], options);\n      } else if (tag === false) {\n        // \\nonumber/\\notag or starred environment\n        tagSpan = buildCommon.makeSpan([], [], options);\n      } else {\n        // manual \\tag\n        tagSpan = buildCommon.makeSpan([], buildExpression(tag, options, true), options);\n      }\n\n      tagSpan.depth = rw.depth;\n      tagSpan.height = rw.height;\n      tagSpans.push({\n        type: \"elem\",\n        elem: tagSpan,\n        shift\n      });\n    }\n  }\n\n  for (c = 0, colDescrNum = 0; // Continue while either there are more columns or more column\n  // descriptions, so trailing separators don't get lost.\n  c < nc || colDescrNum < colDescriptions.length; ++c, ++colDescrNum) {\n    let colDescr = colDescriptions[colDescrNum] || {};\n    let firstSeparator = true;\n\n    while (colDescr.type === \"separator\") {\n      // If there is more than one separator in a row, add a space\n      // between them.\n      if (!firstSeparator) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = makeEm(options.fontMetrics().doubleRuleSep);\n        cols.push(colSep);\n      }\n\n      if (colDescr.separator === \"|\" || colDescr.separator === \":\") {\n        const lineType = colDescr.separator === \"|\" ? \"solid\" : \"dashed\";\n        const separator = buildCommon.makeSpan([\"vertical-separator\"], [], options);\n        separator.style.height = makeEm(totalHeight);\n        separator.style.borderRightWidth = makeEm(ruleThickness);\n        separator.style.borderRightStyle = lineType;\n        separator.style.margin = \"0 \" + makeEm(-ruleThickness / 2);\n        const shift = totalHeight - offset;\n\n        if (shift) {\n          separator.style.verticalAlign = makeEm(-shift);\n        }\n\n        cols.push(separator);\n      } else {\n        throw new src_ParseError(\"Invalid separator type: \" + colDescr.separator);\n      }\n\n      colDescrNum++;\n      colDescr = colDescriptions[colDescrNum] || {};\n      firstSeparator = false;\n    }\n\n    if (c >= nc) {\n      continue;\n    }\n\n    let sepwidth;\n\n    if (c > 0 || group.hskipBeforeAndAfter) {\n      sepwidth = utils.deflt(colDescr.pregap, arraycolsep);\n\n      if (sepwidth !== 0) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = makeEm(sepwidth);\n        cols.push(colSep);\n      }\n    }\n\n    let col = [];\n\n    for (r = 0; r < nr; ++r) {\n      const row = body[r];\n      const elem = row[c];\n\n      if (!elem) {\n        continue;\n      }\n\n      const shift = row.pos - offset;\n      elem.depth = row.depth;\n      elem.height = row.height;\n      col.push({\n        type: \"elem\",\n        elem: elem,\n        shift: shift\n      });\n    }\n\n    col = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: col\n    }, options);\n    col = buildCommon.makeSpan([\"col-align-\" + (colDescr.align || \"c\")], [col]);\n    cols.push(col);\n\n    if (c < nc - 1 || group.hskipBeforeAndAfter) {\n      sepwidth = utils.deflt(colDescr.postgap, arraycolsep);\n\n      if (sepwidth !== 0) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = makeEm(sepwidth);\n        cols.push(colSep);\n      }\n    }\n  }\n\n  body = buildCommon.makeSpan([\"mtable\"], cols); // Add \\hline(s), if any.\n\n  if (hlines.length > 0) {\n    const line = buildCommon.makeLineSpan(\"hline\", options, ruleThickness);\n    const dashes = buildCommon.makeLineSpan(\"hdashline\", options, ruleThickness);\n    const vListElems = [{\n      type: \"elem\",\n      elem: body,\n      shift: 0\n    }];\n\n    while (hlines.length > 0) {\n      const hline = hlines.pop();\n      const lineShift = hline.pos - offset;\n\n      if (hline.isDashed) {\n        vListElems.push({\n          type: \"elem\",\n          elem: dashes,\n          shift: lineShift\n        });\n      } else {\n        vListElems.push({\n          type: \"elem\",\n          elem: line,\n          shift: lineShift\n        });\n      }\n    }\n\n    body = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: vListElems\n    }, options);\n  }\n\n  if (tagSpans.length === 0) {\n    return buildCommon.makeSpan([\"mord\"], [body], options);\n  } else {\n    let eqnNumCol = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: tagSpans\n    }, options);\n    eqnNumCol = buildCommon.makeSpan([\"tag\"], [eqnNumCol], options);\n    return buildCommon.makeFragment([body, eqnNumCol]);\n  }\n};\n\nconst alignMap = {\n  c: \"center \",\n  l: \"left \",\n  r: \"right \"\n};\n\nconst array_mathmlBuilder = function (group, options) {\n  const tbl = [];\n  const glue = new mathMLTree.MathNode(\"mtd\", [], [\"mtr-glue\"]);\n  const tag = new mathMLTree.MathNode(\"mtd\", [], [\"mml-eqn-num\"]);\n\n  for (let i = 0; i < group.body.length; i++) {\n    const rw = group.body[i];\n    const row = [];\n\n    for (let j = 0; j < rw.length; j++) {\n      row.push(new mathMLTree.MathNode(\"mtd\", [buildMathML_buildGroup(rw[j], options)]));\n    }\n\n    if (group.tags && group.tags[i]) {\n      row.unshift(glue);\n      row.push(glue);\n\n      if (group.leqno) {\n        row.unshift(tag);\n      } else {\n        row.push(tag);\n      }\n    }\n\n    tbl.push(new mathMLTree.MathNode(\"mtr\", row));\n  }\n\n  let table = new mathMLTree.MathNode(\"mtable\", tbl); // Set column alignment, row spacing, column spacing, and\n  // array lines by setting attributes on the table element.\n  // Set the row spacing. In MathML, we specify a gap distance.\n  // We do not use rowGap[] because MathML automatically increases\n  // cell height with the height/depth of the element content.\n  // LaTeX \\arraystretch multiplies the row baseline-to-baseline distance.\n  // We simulate this by adding (arraystretch - 1)em to the gap. This\n  // does a reasonable job of adjusting arrays containing 1 em tall content.\n  // The 0.16 and 0.09 values are found empirically. They produce an array\n  // similar to LaTeX and in which content does not interfere with \\hlines.\n\n  const gap = group.arraystretch === 0.5 ? 0.1 // {smallmatrix}, {subarray}\n  : 0.16 + group.arraystretch - 1 + (group.addJot ? 0.09 : 0);\n  table.setAttribute(\"rowspacing\", makeEm(gap)); // MathML table lines go only between cells.\n  // To place a line on an edge we'll use <menclose>, if necessary.\n\n  let menclose = \"\";\n  let align = \"\";\n\n  if (group.cols && group.cols.length > 0) {\n    // Find column alignment, column spacing, and  vertical lines.\n    const cols = group.cols;\n    let columnLines = \"\";\n    let prevTypeWasAlign = false;\n    let iStart = 0;\n    let iEnd = cols.length;\n\n    if (cols[0].type === \"separator\") {\n      menclose += \"top \";\n      iStart = 1;\n    }\n\n    if (cols[cols.length - 1].type === \"separator\") {\n      menclose += \"bottom \";\n      iEnd -= 1;\n    }\n\n    for (let i = iStart; i < iEnd; i++) {\n      if (cols[i].type === \"align\") {\n        align += alignMap[cols[i].align];\n\n        if (prevTypeWasAlign) {\n          columnLines += \"none \";\n        }\n\n        prevTypeWasAlign = true;\n      } else if (cols[i].type === \"separator\") {\n        // MathML accepts only single lines between cells.\n        // So we read only the first of consecutive separators.\n        if (prevTypeWasAlign) {\n          columnLines += cols[i].separator === \"|\" ? \"solid \" : \"dashed \";\n          prevTypeWasAlign = false;\n        }\n      }\n    }\n\n    table.setAttribute(\"columnalign\", align.trim());\n\n    if (/[sd]/.test(columnLines)) {\n      table.setAttribute(\"columnlines\", columnLines.trim());\n    }\n  } // Set column spacing.\n\n\n  if (group.colSeparationType === \"align\") {\n    const cols = group.cols || [];\n    let spacing = \"\";\n\n    for (let i = 1; i < cols.length; i++) {\n      spacing += i % 2 ? \"0em \" : \"1em \";\n    }\n\n    table.setAttribute(\"columnspacing\", spacing.trim());\n  } else if (group.colSeparationType === \"alignat\" || group.colSeparationType === \"gather\") {\n    table.setAttribute(\"columnspacing\", \"0em\");\n  } else if (group.colSeparationType === \"small\") {\n    table.setAttribute(\"columnspacing\", \"0.2778em\");\n  } else if (group.colSeparationType === \"CD\") {\n    table.setAttribute(\"columnspacing\", \"0.5em\");\n  } else {\n    table.setAttribute(\"columnspacing\", \"1em\");\n  } // Address \\hline and \\hdashline\n\n\n  let rowLines = \"\";\n  const hlines = group.hLinesBeforeRow;\n  menclose += hlines[0].length > 0 ? \"left \" : \"\";\n  menclose += hlines[hlines.length - 1].length > 0 ? \"right \" : \"\";\n\n  for (let i = 1; i < hlines.length - 1; i++) {\n    rowLines += hlines[i].length === 0 ? \"none \" // MathML accepts only a single line between rows. Read one element.\n    : hlines[i][0] ? \"dashed \" : \"solid \";\n  }\n\n  if (/[sd]/.test(rowLines)) {\n    table.setAttribute(\"rowlines\", rowLines.trim());\n  }\n\n  if (menclose !== \"\") {\n    table = new mathMLTree.MathNode(\"menclose\", [table]);\n    table.setAttribute(\"notation\", menclose.trim());\n  }\n\n  if (group.arraystretch && group.arraystretch < 1) {\n    // A small array. Wrap in scriptstyle so row gap is not too large.\n    table = new mathMLTree.MathNode(\"mstyle\", [table]);\n    table.setAttribute(\"scriptlevel\", \"1\");\n  }\n\n  return table;\n}; // Convenience function for align, align*, aligned, alignat, alignat*, alignedat.\n\n\nconst alignedHandler = function (context, args) {\n  if (context.envName.indexOf(\"ed\") === -1) {\n    validateAmsEnvironmentContext(context);\n  }\n\n  const cols = [];\n  const separationType = context.envName.indexOf(\"at\") > -1 ? \"alignat\" : \"align\";\n  const isSplit = context.envName === \"split\";\n  const res = parseArray(context.parser, {\n    cols,\n    addJot: true,\n    autoTag: isSplit ? undefined : getAutoTag(context.envName),\n    emptySingleRow: true,\n    colSeparationType: separationType,\n    maxNumCols: isSplit ? 2 : undefined,\n    leqno: context.parser.settings.leqno\n  }, \"display\"); // Determining number of columns.\n  // 1. If the first argument is given, we use it as a number of columns,\n  //    and makes sure that each row doesn't exceed that number.\n  // 2. Otherwise, just count number of columns = maximum number\n  //    of cells in each row (\"aligned\" mode -- isAligned will be true).\n  //\n  // At the same time, prepend empty group {} at beginning of every second\n  // cell in each row (starting with second cell) so that operators become\n  // binary.  This behavior is implemented in amsmath's \\start@aligned.\n\n  let numMaths;\n  let numCols = 0;\n  const emptyGroup = {\n    type: \"ordgroup\",\n    mode: context.mode,\n    body: []\n  };\n\n  if (args[0] && args[0].type === \"ordgroup\") {\n    let arg0 = \"\";\n\n    for (let i = 0; i < args[0].body.length; i++) {\n      const textord = assertNodeType(args[0].body[i], \"textord\");\n      arg0 += textord.text;\n    }\n\n    numMaths = Number(arg0);\n    numCols = numMaths * 2;\n  }\n\n  const isAligned = !numCols;\n  res.body.forEach(function (row) {\n    for (let i = 1; i < row.length; i += 2) {\n      // Modify ordgroup node within styling node\n      const styling = assertNodeType(row[i], \"styling\");\n      const ordgroup = assertNodeType(styling.body[0], \"ordgroup\");\n      ordgroup.body.unshift(emptyGroup);\n    }\n\n    if (!isAligned) {\n      // Case 1\n      const curMaths = row.length / 2;\n\n      if (numMaths < curMaths) {\n        throw new src_ParseError(\"Too many math in a row: \" + (\"expected \" + numMaths + \", but got \" + curMaths), row[0]);\n      }\n    } else if (numCols < row.length) {\n      // Case 2\n      numCols = row.length;\n    }\n  }); // Adjusting alignment.\n  // In aligned mode, we add one \\qquad between columns;\n  // otherwise we add nothing.\n\n  for (let i = 0; i < numCols; ++i) {\n    let align = \"r\";\n    let pregap = 0;\n\n    if (i % 2 === 1) {\n      align = \"l\";\n    } else if (i > 0 && isAligned) {\n      // \"aligned\" mode.\n      pregap = 1; // add one \\quad\n    }\n\n    cols[i] = {\n      type: \"align\",\n      align: align,\n      pregap: pregap,\n      postgap: 0\n    };\n  }\n\n  res.colSeparationType = isAligned ? \"align\" : \"alignat\";\n  return res;\n}; // Arrays are part of LaTeX, defined in lttab.dtx so its documentation\n// is part of the source2e.pdf file of LaTeX2e source documentation.\n// {darray} is an {array} environment where cells are set in \\displaystyle,\n// as defined in nccmath.sty.\n\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"array\", \"darray\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(context, args) {\n    // Since no types are specified above, the two possibilities are\n    // - The argument is wrapped in {} or [], in which case Parser's\n    //   parseGroup() returns an \"ordgroup\" wrapping some symbol node.\n    // - The argument is a bare symbol node.\n    const symNode = checkSymbolNodeType(args[0]);\n    const colalign = symNode ? [args[0]] : assertNodeType(args[0], \"ordgroup\").body;\n    const cols = colalign.map(function (nde) {\n      const node = assertSymbolNodeType(nde);\n      const ca = node.text;\n\n      if (\"lcr\".indexOf(ca) !== -1) {\n        return {\n          type: \"align\",\n          align: ca\n        };\n      } else if (ca === \"|\") {\n        return {\n          type: \"separator\",\n          separator: \"|\"\n        };\n      } else if (ca === \":\") {\n        return {\n          type: \"separator\",\n          separator: \":\"\n        };\n      }\n\n      throw new src_ParseError(\"Unknown column alignment: \" + ca, nde);\n    });\n    const res = {\n      cols,\n      hskipBeforeAndAfter: true,\n      // \\@preamble in lttab.dtx\n      maxNumCols: cols.length\n    };\n    return parseArray(context.parser, res, dCellStyle(context.envName));\n  },\n\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // The matrix environments of amsmath builds on the array environment\n// of LaTeX, which is discussed above.\n// The mathtools package adds starred versions of the same environments.\n// These have an optional argument to choose left|center|right justification.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"matrix\", \"pmatrix\", \"bmatrix\", \"Bmatrix\", \"vmatrix\", \"Vmatrix\", \"matrix*\", \"pmatrix*\", \"bmatrix*\", \"Bmatrix*\", \"vmatrix*\", \"Vmatrix*\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    const delimiters = {\n      \"matrix\": null,\n      \"pmatrix\": [\"(\", \")\"],\n      \"bmatrix\": [\"[\", \"]\"],\n      \"Bmatrix\": [\"\\\\{\", \"\\\\}\"],\n      \"vmatrix\": [\"|\", \"|\"],\n      \"Vmatrix\": [\"\\\\Vert\", \"\\\\Vert\"]\n    }[context.envName.replace(\"*\", \"\")]; // \\hskip -\\arraycolsep in amsmath\n\n    let colAlign = \"c\";\n    const payload = {\n      hskipBeforeAndAfter: false,\n      cols: [{\n        type: \"align\",\n        align: colAlign\n      }]\n    };\n\n    if (context.envName.charAt(context.envName.length - 1) === \"*\") {\n      // It's one of the mathtools starred functions.\n      // Parse the optional alignment argument.\n      const parser = context.parser;\n      parser.consumeSpaces();\n\n      if (parser.fetch().text === \"[\") {\n        parser.consume();\n        parser.consumeSpaces();\n        colAlign = parser.fetch().text;\n\n        if (\"lcr\".indexOf(colAlign) === -1) {\n          throw new src_ParseError(\"Expected l or c or r\", parser.nextToken);\n        }\n\n        parser.consume();\n        parser.consumeSpaces();\n        parser.expect(\"]\");\n        parser.consume();\n        payload.cols = [{\n          type: \"align\",\n          align: colAlign\n        }];\n      }\n    }\n\n    const res = parseArray(context.parser, payload, dCellStyle(context.envName)); // Populate cols with the correct number of column alignment specs.\n\n    const numCols = Math.max(0, ...res.body.map(row => row.length));\n    res.cols = new Array(numCols).fill({\n      type: \"align\",\n      align: colAlign\n    });\n    return delimiters ? {\n      type: \"leftright\",\n      mode: context.mode,\n      body: [res],\n      left: delimiters[0],\n      right: delimiters[1],\n      rightColor: undefined // \\right uninfluenced by \\color in array\n\n    } : res;\n  },\n\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n});\ndefineEnvironment({\n  type: \"array\",\n  names: [\"smallmatrix\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    const payload = {\n      arraystretch: 0.5\n    };\n    const res = parseArray(context.parser, payload, \"script\");\n    res.colSeparationType = \"small\";\n    return res;\n  },\n\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n});\ndefineEnvironment({\n  type: \"array\",\n  names: [\"subarray\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(context, args) {\n    // Parsing of {subarray} is similar to {array}\n    const symNode = checkSymbolNodeType(args[0]);\n    const colalign = symNode ? [args[0]] : assertNodeType(args[0], \"ordgroup\").body;\n    const cols = colalign.map(function (nde) {\n      const node = assertSymbolNodeType(nde);\n      const ca = node.text; // {subarray} only recognizes \"l\" & \"c\"\n\n      if (\"lc\".indexOf(ca) !== -1) {\n        return {\n          type: \"align\",\n          align: ca\n        };\n      }\n\n      throw new src_ParseError(\"Unknown column alignment: \" + ca, nde);\n    });\n\n    if (cols.length > 1) {\n      throw new src_ParseError(\"{subarray} can contain only one column\");\n    }\n\n    let res = {\n      cols,\n      hskipBeforeAndAfter: false,\n      arraystretch: 0.5\n    };\n    res = parseArray(context.parser, res, \"script\");\n\n    if (res.body.length > 0 && res.body[0].length > 1) {\n      throw new src_ParseError(\"{subarray} can contain only one column\");\n    }\n\n    return res;\n  },\n\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // A cases environment (in amsmath.sty) is almost equivalent to\n// \\def\\arraystretch{1.2}%\n// \\left\\{\\begin{array}{@{}l@{\\quad}l@{}} … \\end{array}\\right.\n// {dcases} is a {cases} environment where cells are set in \\displaystyle,\n// as defined in mathtools.sty.\n// {rcases} is another mathtools environment. It's brace is on the right side.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"cases\", \"dcases\", \"rcases\", \"drcases\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    const payload = {\n      arraystretch: 1.2,\n      cols: [{\n        type: \"align\",\n        align: \"l\",\n        pregap: 0,\n        // TODO(kevinb) get the current style.\n        // For now we use the metrics for TEXT style which is what we were\n        // doing before.  Before attempting to get the current style we\n        // should look at TeX's behavior especially for \\over and matrices.\n        postgap: 1.0\n        /* 1em quad */\n\n      }, {\n        type: \"align\",\n        align: \"l\",\n        pregap: 0,\n        postgap: 0\n      }]\n    };\n    const res = parseArray(context.parser, payload, dCellStyle(context.envName));\n    return {\n      type: \"leftright\",\n      mode: context.mode,\n      body: [res],\n      left: context.envName.indexOf(\"r\") > -1 ? \".\" : \"\\\\{\",\n      right: context.envName.indexOf(\"r\") > -1 ? \"\\\\}\" : \".\",\n      rightColor: undefined\n    };\n  },\n\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // In the align environment, one uses ampersands, &, to specify number of\n// columns in each row, and to locate spacing between each column.\n// align gets automatic numbering. align* and aligned do not.\n// The alignedat environment can be used in math mode.\n// Note that we assume \\nomallineskiplimit to be zero,\n// so that \\strut@ is the same as \\strut.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"align\", \"align*\", \"aligned\", \"split\"],\n  props: {\n    numArgs: 0\n  },\n  handler: alignedHandler,\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // A gathered environment is like an array environment with one centered\n// column, but where rows are considered lines so get \\jot line spacing\n// and contents are set in \\displaystyle.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"gathered\", \"gather\", \"gather*\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    if (utils.contains([\"gather\", \"gather*\"], context.envName)) {\n      validateAmsEnvironmentContext(context);\n    }\n\n    const res = {\n      cols: [{\n        type: \"align\",\n        align: \"c\"\n      }],\n      addJot: true,\n      colSeparationType: \"gather\",\n      autoTag: getAutoTag(context.envName),\n      emptySingleRow: true,\n      leqno: context.parser.settings.leqno\n    };\n    return parseArray(context.parser, res, \"display\");\n  },\n\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n}); // alignat environment is like an align environment, but one must explicitly\n// specify maximum number of columns in each row, and can adjust spacing between\n// each columns.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"alignat\", \"alignat*\", \"alignedat\"],\n  props: {\n    numArgs: 1\n  },\n  handler: alignedHandler,\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n});\ndefineEnvironment({\n  type: \"array\",\n  names: [\"equation\", \"equation*\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    validateAmsEnvironmentContext(context);\n    const res = {\n      autoTag: getAutoTag(context.envName),\n      emptySingleRow: true,\n      singleRow: true,\n      maxNumCols: 1,\n      leqno: context.parser.settings.leqno\n    };\n    return parseArray(context.parser, res, \"display\");\n  },\n\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n});\ndefineEnvironment({\n  type: \"array\",\n  names: [\"CD\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    validateAmsEnvironmentContext(context);\n    return parseCD(context.parser);\n  },\n\n  htmlBuilder: array_htmlBuilder,\n  mathmlBuilder: array_mathmlBuilder\n});\ndefineMacro(\"\\\\nonumber\", \"\\\\gdef\\\\@eqnsw{0}\");\ndefineMacro(\"\\\\notag\", \"\\\\nonumber\"); // Catch \\hline outside array environment\n\ndefineFunction({\n  type: \"text\",\n  // Doesn't matter what this is.\n  names: [\"\\\\hline\", \"\\\\hdashline\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: true\n  },\n\n  handler(context, args) {\n    throw new src_ParseError(context.funcName + \" valid only within array environment\");\n  }\n\n});\n;// CONCATENATED MODULE: ./src/environments.js\n\nconst environments = _environments;\n/* harmony default export */ var src_environments = (environments); // All environment definitions should be imported below\n\n\n;// CONCATENATED MODULE: ./src/functions/environment.js\n\n\n\n // Environment delimiters. HTML/MathML rendering is defined in the corresponding\n// defineEnvironment definitions.\n\ndefineFunction({\n  type: \"environment\",\n  names: [\"\\\\begin\", \"\\\\end\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"]\n  },\n\n  handler(_ref, args) {\n    let {\n      parser,\n      funcName\n    } = _ref;\n    const nameGroup = args[0];\n\n    if (nameGroup.type !== \"ordgroup\") {\n      throw new src_ParseError(\"Invalid environment name\", nameGroup);\n    }\n\n    let envName = \"\";\n\n    for (let i = 0; i < nameGroup.body.length; ++i) {\n      envName += assertNodeType(nameGroup.body[i], \"textord\").text;\n    }\n\n    if (funcName === \"\\\\begin\") {\n      // begin...end is similar to left...right\n      if (!src_environments.hasOwnProperty(envName)) {\n        throw new src_ParseError(\"No such environment: \" + envName, nameGroup);\n      } // Build the environment object. Arguments and other information will\n      // be made available to the begin and end methods using properties.\n\n\n      const env = src_environments[envName];\n      const {\n        args,\n        optArgs\n      } = parser.parseArguments(\"\\\\begin{\" + envName + \"}\", env);\n      const context = {\n        mode: parser.mode,\n        envName,\n        parser\n      };\n      const result = env.handler(context, args, optArgs);\n      parser.expect(\"\\\\end\", false);\n      const endNameToken = parser.nextToken;\n      const end = assertNodeType(parser.parseFunction(), \"environment\");\n\n      if (end.name !== envName) {\n        throw new src_ParseError(\"Mismatch: \\\\begin{\" + envName + \"} matched by \\\\end{\" + end.name + \"}\", endNameToken);\n      } // $FlowFixMe, \"environment\" handler returns an environment ParseNode\n\n\n      return result;\n    }\n\n    return {\n      type: \"environment\",\n      mode: parser.mode,\n      name: envName,\n      nameGroup\n    };\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/font.js\n// TODO(kevinb): implement \\\\sl and \\\\sc\n\n\n\n\n\n\nconst font_htmlBuilder = (group, options) => {\n  const font = group.font;\n  const newOptions = options.withFont(font);\n  return buildGroup(group.body, newOptions);\n};\n\nconst font_mathmlBuilder = (group, options) => {\n  const font = group.font;\n  const newOptions = options.withFont(font);\n  return buildMathML_buildGroup(group.body, newOptions);\n};\n\nconst fontAliases = {\n  \"\\\\Bbb\": \"\\\\mathbb\",\n  \"\\\\bold\": \"\\\\mathbf\",\n  \"\\\\frak\": \"\\\\mathfrak\",\n  \"\\\\bm\": \"\\\\boldsymbol\"\n};\ndefineFunction({\n  type: \"font\",\n  names: [// styles, except \\boldsymbol defined below\n  \"\\\\mathrm\", \"\\\\mathit\", \"\\\\mathbf\", \"\\\\mathnormal\", \"\\\\mathsfit\", // families\n  \"\\\\mathbb\", \"\\\\mathcal\", \"\\\\mathfrak\", \"\\\\mathscr\", \"\\\\mathsf\", \"\\\\mathtt\", // aliases, except \\bm defined below\n  \"\\\\Bbb\", \"\\\\bold\", \"\\\\frak\"],\n  props: {\n    numArgs: 1,\n    allowedInArgument: true\n  },\n  handler: (_ref, args) => {\n    let {\n      parser,\n      funcName\n    } = _ref;\n    const body = normalizeArgument(args[0]);\n    let func = funcName;\n\n    if (func in fontAliases) {\n      func = fontAliases[func];\n    }\n\n    return {\n      type: \"font\",\n      mode: parser.mode,\n      font: func.slice(1),\n      body\n    };\n  },\n  htmlBuilder: font_htmlBuilder,\n  mathmlBuilder: font_mathmlBuilder\n});\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\boldsymbol\", \"\\\\bm\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (_ref2, args) => {\n    let {\n      parser\n    } = _ref2;\n    const body = args[0];\n    const isCharacterBox = utils.isCharacterBox(body); // amsbsy.sty's \\boldsymbol uses \\binrel spacing to inherit the\n    // argument's bin|rel|ord status\n\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: binrelClass(body),\n      body: [{\n        type: \"font\",\n        mode: parser.mode,\n        font: \"boldsymbol\",\n        body\n      }],\n      isCharacterBox: isCharacterBox\n    };\n  }\n}); // Old font changing functions\n\ndefineFunction({\n  type: \"font\",\n  names: [\"\\\\rm\", \"\\\\sf\", \"\\\\tt\", \"\\\\bf\", \"\\\\it\", \"\\\\cal\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: (_ref3, args) => {\n    let {\n      parser,\n      funcName,\n      breakOnTokenText\n    } = _ref3;\n    const {\n      mode\n    } = parser;\n    const body = parser.parseExpression(true, breakOnTokenText);\n    const style = \"math\" + funcName.slice(1);\n    return {\n      type: \"font\",\n      mode: mode,\n      font: style,\n      body: {\n        type: \"ordgroup\",\n        mode: parser.mode,\n        body\n      }\n    };\n  },\n  htmlBuilder: font_htmlBuilder,\n  mathmlBuilder: font_mathmlBuilder\n});\n;// CONCATENATED MODULE: ./src/functions/genfrac.js\n\n\n\n\n\n\n\n\n\n\n\nconst adjustStyle = (size, originalStyle) => {\n  // Figure out what style this fraction should be in based on the\n  // function used\n  let style = originalStyle;\n\n  if (size === \"display\") {\n    // Get display style as a default.\n    // If incoming style is sub/sup, use style.text() to get correct size.\n    style = style.id >= src_Style.SCRIPT.id ? style.text() : src_Style.DISPLAY;\n  } else if (size === \"text\" && style.size === src_Style.DISPLAY.size) {\n    // We're in a \\tfrac but incoming style is displaystyle, so:\n    style = src_Style.TEXT;\n  } else if (size === \"script\") {\n    style = src_Style.SCRIPT;\n  } else if (size === \"scriptscript\") {\n    style = src_Style.SCRIPTSCRIPT;\n  }\n\n  return style;\n};\n\nconst genfrac_htmlBuilder = (group, options) => {\n  // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).\n  const style = adjustStyle(group.size, options.style);\n  const nstyle = style.fracNum();\n  const dstyle = style.fracDen();\n  let newOptions;\n  newOptions = options.havingStyle(nstyle);\n  const numerm = buildGroup(group.numer, newOptions, options);\n\n  if (group.continued) {\n    // \\cfrac inserts a \\strut into the numerator.\n    // Get \\strut dimensions from TeXbook page 353.\n    const hStrut = 8.5 / options.fontMetrics().ptPerEm;\n    const dStrut = 3.5 / options.fontMetrics().ptPerEm;\n    numerm.height = numerm.height < hStrut ? hStrut : numerm.height;\n    numerm.depth = numerm.depth < dStrut ? dStrut : numerm.depth;\n  }\n\n  newOptions = options.havingStyle(dstyle);\n  const denomm = buildGroup(group.denom, newOptions, options);\n  let rule;\n  let ruleWidth;\n  let ruleSpacing;\n\n  if (group.hasBarLine) {\n    if (group.barSize) {\n      ruleWidth = calculateSize(group.barSize, options);\n      rule = buildCommon.makeLineSpan(\"frac-line\", options, ruleWidth);\n    } else {\n      rule = buildCommon.makeLineSpan(\"frac-line\", options);\n    }\n\n    ruleWidth = rule.height;\n    ruleSpacing = rule.height;\n  } else {\n    rule = null;\n    ruleWidth = 0;\n    ruleSpacing = options.fontMetrics().defaultRuleThickness;\n  } // Rule 15b\n\n\n  let numShift;\n  let clearance;\n  let denomShift;\n\n  if (style.size === src_Style.DISPLAY.size || group.size === \"display\") {\n    numShift = options.fontMetrics().num1;\n\n    if (ruleWidth > 0) {\n      clearance = 3 * ruleSpacing;\n    } else {\n      clearance = 7 * ruleSpacing;\n    }\n\n    denomShift = options.fontMetrics().denom1;\n  } else {\n    if (ruleWidth > 0) {\n      numShift = options.fontMetrics().num2;\n      clearance = ruleSpacing;\n    } else {\n      numShift = options.fontMetrics().num3;\n      clearance = 3 * ruleSpacing;\n    }\n\n    denomShift = options.fontMetrics().denom2;\n  }\n\n  let frac;\n\n  if (!rule) {\n    // Rule 15c\n    const candidateClearance = numShift - numerm.depth - (denomm.height - denomShift);\n\n    if (candidateClearance < clearance) {\n      numShift += 0.5 * (clearance - candidateClearance);\n      denomShift += 0.5 * (clearance - candidateClearance);\n    }\n\n    frac = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [{\n        type: \"elem\",\n        elem: denomm,\n        shift: denomShift\n      }, {\n        type: \"elem\",\n        elem: numerm,\n        shift: -numShift\n      }]\n    }, options);\n  } else {\n    // Rule 15d\n    const axisHeight = options.fontMetrics().axisHeight;\n\n    if (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth) < clearance) {\n      numShift += clearance - (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth));\n    }\n\n    if (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift) < clearance) {\n      denomShift += clearance - (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift));\n    }\n\n    const midShift = -(axisHeight - 0.5 * ruleWidth);\n    frac = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [{\n        type: \"elem\",\n        elem: denomm,\n        shift: denomShift\n      }, {\n        type: \"elem\",\n        elem: rule,\n        shift: midShift\n      }, {\n        type: \"elem\",\n        elem: numerm,\n        shift: -numShift\n      }]\n    }, options);\n  } // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\n  // account for the possible size change here.\n\n\n  newOptions = options.havingStyle(style);\n  frac.height *= newOptions.sizeMultiplier / options.sizeMultiplier;\n  frac.depth *= newOptions.sizeMultiplier / options.sizeMultiplier; // Rule 15e\n\n  let delimSize;\n\n  if (style.size === src_Style.DISPLAY.size) {\n    delimSize = options.fontMetrics().delim1;\n  } else if (style.size === src_Style.SCRIPTSCRIPT.size) {\n    delimSize = options.havingStyle(src_Style.SCRIPT).fontMetrics().delim2;\n  } else {\n    delimSize = options.fontMetrics().delim2;\n  }\n\n  let leftDelim;\n  let rightDelim;\n\n  if (group.leftDelim == null) {\n    leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n  } else {\n    leftDelim = delimiter.customSizedDelim(group.leftDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mopen\"]);\n  }\n\n  if (group.continued) {\n    rightDelim = buildCommon.makeSpan([]); // zero width for \\cfrac\n  } else if (group.rightDelim == null) {\n    rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n  } else {\n    rightDelim = delimiter.customSizedDelim(group.rightDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mclose\"]);\n  }\n\n  return buildCommon.makeSpan([\"mord\"].concat(newOptions.sizingClasses(options)), [leftDelim, buildCommon.makeSpan([\"mfrac\"], [frac]), rightDelim], options);\n};\n\nconst genfrac_mathmlBuilder = (group, options) => {\n  let node = new mathMLTree.MathNode(\"mfrac\", [buildMathML_buildGroup(group.numer, options), buildMathML_buildGroup(group.denom, options)]);\n\n  if (!group.hasBarLine) {\n    node.setAttribute(\"linethickness\", \"0px\");\n  } else if (group.barSize) {\n    const ruleWidth = calculateSize(group.barSize, options);\n    node.setAttribute(\"linethickness\", makeEm(ruleWidth));\n  }\n\n  const style = adjustStyle(group.size, options.style);\n\n  if (style.size !== options.style.size) {\n    node = new mathMLTree.MathNode(\"mstyle\", [node]);\n    const isDisplay = style.size === src_Style.DISPLAY.size ? \"true\" : \"false\";\n    node.setAttribute(\"displaystyle\", isDisplay);\n    node.setAttribute(\"scriptlevel\", \"0\");\n  }\n\n  if (group.leftDelim != null || group.rightDelim != null) {\n    const withDelims = [];\n\n    if (group.leftDelim != null) {\n      const leftOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.leftDelim.replace(\"\\\\\", \"\"))]);\n      leftOp.setAttribute(\"fence\", \"true\");\n      withDelims.push(leftOp);\n    }\n\n    withDelims.push(node);\n\n    if (group.rightDelim != null) {\n      const rightOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.rightDelim.replace(\"\\\\\", \"\"))]);\n      rightOp.setAttribute(\"fence\", \"true\");\n      withDelims.push(rightOp);\n    }\n\n    return makeRow(withDelims);\n  }\n\n  return node;\n};\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\dfrac\", \"\\\\frac\", \"\\\\tfrac\", \"\\\\dbinom\", \"\\\\binom\", \"\\\\tbinom\", \"\\\\\\\\atopfrac\", // can’t be entered directly\n  \"\\\\\\\\bracefrac\", \"\\\\\\\\brackfrac\" // ditto\n  ],\n  props: {\n    numArgs: 2,\n    allowedInArgument: true\n  },\n  handler: (_ref, args) => {\n    let {\n      parser,\n      funcName\n    } = _ref;\n    const numer = args[0];\n    const denom = args[1];\n    let hasBarLine;\n    let leftDelim = null;\n    let rightDelim = null;\n    let size = \"auto\";\n\n    switch (funcName) {\n      case \"\\\\dfrac\":\n      case \"\\\\frac\":\n      case \"\\\\tfrac\":\n        hasBarLine = true;\n        break;\n\n      case \"\\\\\\\\atopfrac\":\n        hasBarLine = false;\n        break;\n\n      case \"\\\\dbinom\":\n      case \"\\\\binom\":\n      case \"\\\\tbinom\":\n        hasBarLine = false;\n        leftDelim = \"(\";\n        rightDelim = \")\";\n        break;\n\n      case \"\\\\\\\\bracefrac\":\n        hasBarLine = false;\n        leftDelim = \"\\\\{\";\n        rightDelim = \"\\\\}\";\n        break;\n\n      case \"\\\\\\\\brackfrac\":\n        hasBarLine = false;\n        leftDelim = \"[\";\n        rightDelim = \"]\";\n        break;\n\n      default:\n        throw new Error(\"Unrecognized genfrac command\");\n    }\n\n    switch (funcName) {\n      case \"\\\\dfrac\":\n      case \"\\\\dbinom\":\n        size = \"display\";\n        break;\n\n      case \"\\\\tfrac\":\n      case \"\\\\tbinom\":\n        size = \"text\";\n        break;\n    }\n\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      continued: false,\n      numer,\n      denom,\n      hasBarLine,\n      leftDelim,\n      rightDelim,\n      size,\n      barSize: null\n    };\n  },\n  htmlBuilder: genfrac_htmlBuilder,\n  mathmlBuilder: genfrac_mathmlBuilder\n});\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\cfrac\"],\n  props: {\n    numArgs: 2\n  },\n  handler: (_ref2, args) => {\n    let {\n      parser,\n      funcName\n    } = _ref2;\n    const numer = args[0];\n    const denom = args[1];\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      continued: true,\n      numer,\n      denom,\n      hasBarLine: true,\n      leftDelim: null,\n      rightDelim: null,\n      size: \"display\",\n      barSize: null\n    };\n  }\n}); // Infix generalized fractions -- these are not rendered directly, but replaced\n// immediately by one of the variants above.\n\ndefineFunction({\n  type: \"infix\",\n  names: [\"\\\\over\", \"\\\\choose\", \"\\\\atop\", \"\\\\brace\", \"\\\\brack\"],\n  props: {\n    numArgs: 0,\n    infix: true\n  },\n\n  handler(_ref3) {\n    let {\n      parser,\n      funcName,\n      token\n    } = _ref3;\n    let replaceWith;\n\n    switch (funcName) {\n      case \"\\\\over\":\n        replaceWith = \"\\\\frac\";\n        break;\n\n      case \"\\\\choose\":\n        replaceWith = \"\\\\binom\";\n        break;\n\n      case \"\\\\atop\":\n        replaceWith = \"\\\\\\\\atopfrac\";\n        break;\n\n      case \"\\\\brace\":\n        replaceWith = \"\\\\\\\\bracefrac\";\n        break;\n\n      case \"\\\\brack\":\n        replaceWith = \"\\\\\\\\brackfrac\";\n        break;\n\n      default:\n        throw new Error(\"Unrecognized infix genfrac command\");\n    }\n\n    return {\n      type: \"infix\",\n      mode: parser.mode,\n      replaceWith,\n      token\n    };\n  }\n\n});\nconst stylArray = [\"display\", \"text\", \"script\", \"scriptscript\"];\n\nconst delimFromValue = function (delimString) {\n  let delim = null;\n\n  if (delimString.length > 0) {\n    delim = delimString;\n    delim = delim === \".\" ? null : delim;\n  }\n\n  return delim;\n};\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\genfrac\"],\n  props: {\n    numArgs: 6,\n    allowedInArgument: true,\n    argTypes: [\"math\", \"math\", \"size\", \"text\", \"math\", \"math\"]\n  },\n\n  handler(_ref4, args) {\n    let {\n      parser\n    } = _ref4;\n    const numer = args[4];\n    const denom = args[5]; // Look into the parse nodes to get the desired delimiters.\n\n    const leftNode = normalizeArgument(args[0]);\n    const leftDelim = leftNode.type === \"atom\" && leftNode.family === \"open\" ? delimFromValue(leftNode.text) : null;\n    const rightNode = normalizeArgument(args[1]);\n    const rightDelim = rightNode.type === \"atom\" && rightNode.family === \"close\" ? delimFromValue(rightNode.text) : null;\n    const barNode = assertNodeType(args[2], \"size\");\n    let hasBarLine;\n    let barSize = null;\n\n    if (barNode.isBlank) {\n      // \\genfrac acts differently than \\above.\n      // \\genfrac treats an empty size group as a signal to use a\n      // standard bar size. \\above would see size = 0 and omit the bar.\n      hasBarLine = true;\n    } else {\n      barSize = barNode.value;\n      hasBarLine = barSize.number > 0;\n    } // Find out if we want displaystyle, textstyle, etc.\n\n\n    let size = \"auto\";\n    let styl = args[3];\n\n    if (styl.type === \"ordgroup\") {\n      if (styl.body.length > 0) {\n        const textOrd = assertNodeType(styl.body[0], \"textord\");\n        size = stylArray[Number(textOrd.text)];\n      }\n    } else {\n      styl = assertNodeType(styl, \"textord\");\n      size = stylArray[Number(styl.text)];\n    }\n\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      numer,\n      denom,\n      continued: false,\n      hasBarLine,\n      barSize,\n      leftDelim,\n      rightDelim,\n      size\n    };\n  },\n\n  htmlBuilder: genfrac_htmlBuilder,\n  mathmlBuilder: genfrac_mathmlBuilder\n}); // \\above is an infix fraction that also defines a fraction bar size.\n\ndefineFunction({\n  type: \"infix\",\n  names: [\"\\\\above\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"size\"],\n    infix: true\n  },\n\n  handler(_ref5, args) {\n    let {\n      parser,\n      funcName,\n      token\n    } = _ref5;\n    return {\n      type: \"infix\",\n      mode: parser.mode,\n      replaceWith: \"\\\\\\\\abovefrac\",\n      size: assertNodeType(args[0], \"size\").value,\n      token\n    };\n  }\n\n});\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\\\\\abovefrac\"],\n  props: {\n    numArgs: 3,\n    argTypes: [\"math\", \"size\", \"math\"]\n  },\n  handler: (_ref6, args) => {\n    let {\n      parser,\n      funcName\n    } = _ref6;\n    const numer = args[0];\n    const barSize = assert(assertNodeType(args[1], \"infix\").size);\n    const denom = args[2];\n    const hasBarLine = barSize.number > 0;\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      numer,\n      denom,\n      continued: false,\n      hasBarLine,\n      barSize,\n      leftDelim: null,\n      rightDelim: null,\n      size: \"auto\"\n    };\n  },\n  htmlBuilder: genfrac_htmlBuilder,\n  mathmlBuilder: genfrac_mathmlBuilder\n});\n;// CONCATENATED MODULE: ./src/functions/horizBrace.js\n\n\n\n\n\n\n\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"horizBrace\", but\n// also \"supsub\" since an over/underbrace can affect super/subscripting.\nconst horizBrace_htmlBuilder = (grp, options) => {\n  const style = options.style; // Pull out the `ParseNode<\"horizBrace\">` if `grp` is a \"supsub\" node.\n\n  let supSubGroup;\n  let group;\n\n  if (grp.type === \"supsub\") {\n    // Ref: LaTeX source2e: }}}}\\limits}\n    // i.e. LaTeX treats the brace similar to an op and passes it\n    // with \\limits, so we need to assign supsub style.\n    supSubGroup = grp.sup ? buildGroup(grp.sup, options.havingStyle(style.sup()), options) : buildGroup(grp.sub, options.havingStyle(style.sub()), options);\n    group = assertNodeType(grp.base, \"horizBrace\");\n  } else {\n    group = assertNodeType(grp, \"horizBrace\");\n  } // Build the base group\n\n\n  const body = buildGroup(group.base, options.havingBaseStyle(src_Style.DISPLAY)); // Create the stretchy element\n\n  const braceBody = stretchy.svgSpan(group, options); // Generate the vlist, with the appropriate kerns        ┏━━━━━━━━┓\n  // This first vlist contains the content and the brace:   equation\n\n  let vlist;\n\n  if (group.isOver) {\n    vlist = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"kern\",\n        size: 0.1\n      }, {\n        type: \"elem\",\n        elem: braceBody\n      }]\n    }, options); // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n    vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n  } else {\n    vlist = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: body.depth + 0.1 + braceBody.height,\n      children: [{\n        type: \"elem\",\n        elem: braceBody\n      }, {\n        type: \"kern\",\n        size: 0.1\n      }, {\n        type: \"elem\",\n        elem: body\n      }]\n    }, options); // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n    vlist.children[0].children[0].children[0].classes.push(\"svg-align\");\n  }\n\n  if (supSubGroup) {\n    // To write the supsub, wrap the first vlist in another vlist:\n    // They can't all go in the same vlist, because the note might be\n    // wider than the equation. We want the equation to control the\n    // brace width.\n    //      note          long note           long note\n    //   ┏━━━━━━━━┓   or    ┏━━━┓     not    ┏━━━━━━━━━┓\n    //    equation           eqn                 eqn\n    const vSpan = buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n\n    if (group.isOver) {\n      vlist = buildCommon.makeVList({\n        positionType: \"firstBaseline\",\n        children: [{\n          type: \"elem\",\n          elem: vSpan\n        }, {\n          type: \"kern\",\n          size: 0.2\n        }, {\n          type: \"elem\",\n          elem: supSubGroup\n        }]\n      }, options);\n    } else {\n      vlist = buildCommon.makeVList({\n        positionType: \"bottom\",\n        positionData: vSpan.depth + 0.2 + supSubGroup.height + supSubGroup.depth,\n        children: [{\n          type: \"elem\",\n          elem: supSubGroup\n        }, {\n          type: \"kern\",\n          size: 0.2\n        }, {\n          type: \"elem\",\n          elem: vSpan\n        }]\n      }, options);\n    }\n  }\n\n  return buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n};\n\nconst horizBrace_mathmlBuilder = (group, options) => {\n  const accentNode = stretchy.mathMLnode(group.label);\n  return new mathMLTree.MathNode(group.isOver ? \"mover\" : \"munder\", [buildMathML_buildGroup(group.base, options), accentNode]);\n}; // Horizontal stretchy braces\n\n\ndefineFunction({\n  type: \"horizBrace\",\n  names: [\"\\\\overbrace\", \"\\\\underbrace\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref, args) {\n    let {\n      parser,\n      funcName\n    } = _ref;\n    return {\n      type: \"horizBrace\",\n      mode: parser.mode,\n      label: funcName,\n      isOver: /^\\\\over/.test(funcName),\n      base: args[0]\n    };\n  },\n\n  htmlBuilder: horizBrace_htmlBuilder,\n  mathmlBuilder: horizBrace_mathmlBuilder\n});\n;// CONCATENATED MODULE: ./src/functions/href.js\n\n\n\n\n\n\ndefineFunction({\n  type: \"href\",\n  names: [\"\\\\href\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"url\", \"original\"],\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    let {\n      parser\n    } = _ref;\n    const body = args[1];\n    const href = assertNodeType(args[0], \"url\").url;\n\n    if (!parser.settings.isTrusted({\n      command: \"\\\\href\",\n      url: href\n    })) {\n      return parser.formatUnsupportedCmd(\"\\\\href\");\n    }\n\n    return {\n      type: \"href\",\n      mode: parser.mode,\n      href,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const elements = buildExpression(group.body, options, false);\n    return buildCommon.makeAnchor(group.href, [], elements, options);\n  },\n  mathmlBuilder: (group, options) => {\n    let math = buildExpressionRow(group.body, options);\n\n    if (!(math instanceof MathNode)) {\n      math = new MathNode(\"mrow\", [math]);\n    }\n\n    math.setAttribute(\"href\", group.href);\n    return math;\n  }\n});\ndefineFunction({\n  type: \"href\",\n  names: [\"\\\\url\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"url\"],\n    allowedInText: true\n  },\n  handler: (_ref2, args) => {\n    let {\n      parser\n    } = _ref2;\n    const href = assertNodeType(args[0], \"url\").url;\n\n    if (!parser.settings.isTrusted({\n      command: \"\\\\url\",\n      url: href\n    })) {\n      return parser.formatUnsupportedCmd(\"\\\\url\");\n    }\n\n    const chars = [];\n\n    for (let i = 0; i < href.length; i++) {\n      let c = href[i];\n\n      if (c === \"~\") {\n        c = \"\\\\textasciitilde\";\n      }\n\n      chars.push({\n        type: \"textord\",\n        mode: \"text\",\n        text: c\n      });\n    }\n\n    const body = {\n      type: \"text\",\n      mode: parser.mode,\n      font: \"\\\\texttt\",\n      body: chars\n    };\n    return {\n      type: \"href\",\n      mode: parser.mode,\n      href,\n      body: ordargument(body)\n    };\n  }\n});\n;// CONCATENATED MODULE: ./src/functions/hbox.js\n\n\n\n\n // \\hbox is provided for compatibility with LaTeX \\vcenter.\n// In LaTeX, \\vcenter can act only on a box, as in\n// \\vcenter{\\hbox{$\\frac{a+b}{\\dfrac{c}{d}}$}}\n// This function by itself doesn't do anything but prevent a soft line break.\n\ndefineFunction({\n  type: \"hbox\",\n  names: [\"\\\\hbox\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref, args) {\n    let {\n      parser\n    } = _ref;\n    return {\n      type: \"hbox\",\n      mode: parser.mode,\n      body: ordargument(args[0])\n    };\n  },\n\n  htmlBuilder(group, options) {\n    const elements = buildExpression(group.body, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n\n  mathmlBuilder(group, options) {\n    return new mathMLTree.MathNode(\"mrow\", buildMathML_buildExpression(group.body, options));\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/html.js\n\n\n\n\n\n\ndefineFunction({\n  type: \"html\",\n  names: [\"\\\\htmlClass\", \"\\\\htmlId\", \"\\\\htmlStyle\", \"\\\\htmlData\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"raw\", \"original\"],\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    let {\n      parser,\n      funcName,\n      token\n    } = _ref;\n    const value = assertNodeType(args[0], \"raw\").string;\n    const body = args[1];\n\n    if (parser.settings.strict) {\n      parser.settings.reportNonstrict(\"htmlExtension\", \"HTML extension is disabled on strict mode\");\n    }\n\n    let trustContext;\n    const attributes = {};\n\n    switch (funcName) {\n      case \"\\\\htmlClass\":\n        attributes.class = value;\n        trustContext = {\n          command: \"\\\\htmlClass\",\n          class: value\n        };\n        break;\n\n      case \"\\\\htmlId\":\n        attributes.id = value;\n        trustContext = {\n          command: \"\\\\htmlId\",\n          id: value\n        };\n        break;\n\n      case \"\\\\htmlStyle\":\n        attributes.style = value;\n        trustContext = {\n          command: \"\\\\htmlStyle\",\n          style: value\n        };\n        break;\n\n      case \"\\\\htmlData\":\n        {\n          const data = value.split(\",\");\n\n          for (let i = 0; i < data.length; i++) {\n            const keyVal = data[i].split(\"=\");\n\n            if (keyVal.length !== 2) {\n              throw new src_ParseError(\"Error parsing key-value for \\\\htmlData\");\n            }\n\n            attributes[\"data-\" + keyVal[0].trim()] = keyVal[1].trim();\n          }\n\n          trustContext = {\n            command: \"\\\\htmlData\",\n            attributes\n          };\n          break;\n        }\n\n      default:\n        throw new Error(\"Unrecognized html command\");\n    }\n\n    if (!parser.settings.isTrusted(trustContext)) {\n      return parser.formatUnsupportedCmd(funcName);\n    }\n\n    return {\n      type: \"html\",\n      mode: parser.mode,\n      attributes,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const elements = buildExpression(group.body, options, false);\n    const classes = [\"enclosing\"];\n\n    if (group.attributes.class) {\n      classes.push(...group.attributes.class.trim().split(/\\s+/));\n    }\n\n    const span = buildCommon.makeSpan(classes, elements, options);\n\n    for (const attr in group.attributes) {\n      if (attr !== \"class\" && group.attributes.hasOwnProperty(attr)) {\n        span.setAttribute(attr, group.attributes[attr]);\n      }\n    }\n\n    return span;\n  },\n  mathmlBuilder: (group, options) => {\n    return buildExpressionRow(group.body, options);\n  }\n});\n;// CONCATENATED MODULE: ./src/functions/htmlmathml.js\n\n\n\n\ndefineFunction({\n  type: \"htmlmathml\",\n  names: [\"\\\\html@mathml\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    let {\n      parser\n    } = _ref;\n    return {\n      type: \"htmlmathml\",\n      mode: parser.mode,\n      html: ordargument(args[0]),\n      mathml: ordargument(args[1])\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const elements = buildExpression(group.html, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: (group, options) => {\n    return buildExpressionRow(group.mathml, options);\n  }\n});\n;// CONCATENATED MODULE: ./src/functions/includegraphics.js\n\n\n\n\n\n\n\nconst sizeData = function (str) {\n  if (/^[-+]? *(\\d+(\\.\\d*)?|\\.\\d+)$/.test(str)) {\n    // str is a number with no unit specified.\n    // default unit is bp, per graphix package.\n    return {\n      number: +str,\n      unit: \"bp\"\n    };\n  } else {\n    const match = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(str);\n\n    if (!match) {\n      throw new src_ParseError(\"Invalid size: '\" + str + \"' in \\\\includegraphics\");\n    }\n\n    const data = {\n      number: +(match[1] + match[2]),\n      // sign + magnitude, cast to number\n      unit: match[3]\n    };\n\n    if (!validUnit(data)) {\n      throw new src_ParseError(\"Invalid unit: '\" + data.unit + \"' in \\\\includegraphics.\");\n    }\n\n    return data;\n  }\n};\n\ndefineFunction({\n  type: \"includegraphics\",\n  names: [\"\\\\includegraphics\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1,\n    argTypes: [\"raw\", \"url\"],\n    allowedInText: false\n  },\n  handler: (_ref, args, optArgs) => {\n    let {\n      parser\n    } = _ref;\n    let width = {\n      number: 0,\n      unit: \"em\"\n    };\n    let height = {\n      number: 0.9,\n      unit: \"em\"\n    }; // sorta character sized.\n\n    let totalheight = {\n      number: 0,\n      unit: \"em\"\n    };\n    let alt = \"\";\n\n    if (optArgs[0]) {\n      const attributeStr = assertNodeType(optArgs[0], \"raw\").string; // Parser.js does not parse key/value pairs. We get a string.\n\n      const attributes = attributeStr.split(\",\");\n\n      for (let i = 0; i < attributes.length; i++) {\n        const keyVal = attributes[i].split(\"=\");\n\n        if (keyVal.length === 2) {\n          const str = keyVal[1].trim();\n\n          switch (keyVal[0].trim()) {\n            case \"alt\":\n              alt = str;\n              break;\n\n            case \"width\":\n              width = sizeData(str);\n              break;\n\n            case \"height\":\n              height = sizeData(str);\n              break;\n\n            case \"totalheight\":\n              totalheight = sizeData(str);\n              break;\n\n            default:\n              throw new src_ParseError(\"Invalid key: '\" + keyVal[0] + \"' in \\\\includegraphics.\");\n          }\n        }\n      }\n    }\n\n    const src = assertNodeType(args[0], \"url\").url;\n\n    if (alt === \"\") {\n      // No alt given. Use the file name. Strip away the path.\n      alt = src;\n      alt = alt.replace(/^.*[\\\\/]/, '');\n      alt = alt.substring(0, alt.lastIndexOf('.'));\n    }\n\n    if (!parser.settings.isTrusted({\n      command: \"\\\\includegraphics\",\n      url: src\n    })) {\n      return parser.formatUnsupportedCmd(\"\\\\includegraphics\");\n    }\n\n    return {\n      type: \"includegraphics\",\n      mode: parser.mode,\n      alt: alt,\n      width: width,\n      height: height,\n      totalheight: totalheight,\n      src: src\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const height = calculateSize(group.height, options);\n    let depth = 0;\n\n    if (group.totalheight.number > 0) {\n      depth = calculateSize(group.totalheight, options) - height;\n    }\n\n    let width = 0;\n\n    if (group.width.number > 0) {\n      width = calculateSize(group.width, options);\n    }\n\n    const style = {\n      height: makeEm(height + depth)\n    };\n\n    if (width > 0) {\n      style.width = makeEm(width);\n    }\n\n    if (depth > 0) {\n      style.verticalAlign = makeEm(-depth);\n    }\n\n    const node = new Img(group.src, group.alt, style);\n    node.height = height;\n    node.depth = depth;\n    return node;\n  },\n  mathmlBuilder: (group, options) => {\n    const node = new mathMLTree.MathNode(\"mglyph\", []);\n    node.setAttribute(\"alt\", group.alt);\n    const height = calculateSize(group.height, options);\n    let depth = 0;\n\n    if (group.totalheight.number > 0) {\n      depth = calculateSize(group.totalheight, options) - height;\n      node.setAttribute(\"valign\", makeEm(-depth));\n    }\n\n    node.setAttribute(\"height\", makeEm(height + depth));\n\n    if (group.width.number > 0) {\n      const width = calculateSize(group.width, options);\n      node.setAttribute(\"width\", makeEm(width));\n    }\n\n    node.setAttribute(\"src\", group.src);\n    return node;\n  }\n});\n;// CONCATENATED MODULE: ./src/functions/kern.js\n// Horizontal spacing commands\n\n\n\n\n // TODO: \\hskip and \\mskip should support plus and minus in lengths\n\ndefineFunction({\n  type: \"kern\",\n  names: [\"\\\\kern\", \"\\\\mkern\", \"\\\\hskip\", \"\\\\mskip\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"size\"],\n    primitive: true,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    let {\n      parser,\n      funcName\n    } = _ref;\n    const size = assertNodeType(args[0], \"size\");\n\n    if (parser.settings.strict) {\n      const mathFunction = funcName[1] === 'm'; // \\mkern, \\mskip\n\n      const muUnit = size.value.unit === 'mu';\n\n      if (mathFunction) {\n        if (!muUnit) {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" supports only mu units, \" + (\"not \" + size.value.unit + \" units\"));\n        }\n\n        if (parser.mode !== \"math\") {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" works only in math mode\");\n        }\n      } else {\n        // !mathFunction\n        if (muUnit) {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" doesn't support mu units\");\n        }\n      }\n    }\n\n    return {\n      type: \"kern\",\n      mode: parser.mode,\n      dimension: size.value\n    };\n  },\n\n  htmlBuilder(group, options) {\n    return buildCommon.makeGlue(group.dimension, options);\n  },\n\n  mathmlBuilder(group, options) {\n    const dimension = calculateSize(group.dimension, options);\n    return new mathMLTree.SpaceNode(dimension);\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/lap.js\n// Horizontal overlap functions\n\n\n\n\n\n\ndefineFunction({\n  type: \"lap\",\n  names: [\"\\\\mathllap\", \"\\\\mathrlap\", \"\\\\mathclap\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    let {\n      parser,\n      funcName\n    } = _ref;\n    const body = args[0];\n    return {\n      type: \"lap\",\n      mode: parser.mode,\n      alignment: funcName.slice(5),\n      body\n    };\n  },\n  htmlBuilder: (group, options) => {\n    // mathllap, mathrlap, mathclap\n    let inner;\n\n    if (group.alignment === \"clap\") {\n      // ref: https://www.math.lsu.edu/~aperlis/publications/mathclap/\n      inner = buildCommon.makeSpan([], [buildGroup(group.body, options)]); // wrap, since CSS will center a .clap > .inner > span\n\n      inner = buildCommon.makeSpan([\"inner\"], [inner], options);\n    } else {\n      inner = buildCommon.makeSpan([\"inner\"], [buildGroup(group.body, options)]);\n    }\n\n    const fix = buildCommon.makeSpan([\"fix\"], []);\n    let node = buildCommon.makeSpan([group.alignment], [inner, fix], options); // At this point, we have correctly set horizontal alignment of the\n    // two items involved in the lap.\n    // Next, use a strut to set the height of the HTML bounding box.\n    // Otherwise, a tall argument may be misplaced.\n    // This code resolved issue #1153\n\n    const strut = buildCommon.makeSpan([\"strut\"]);\n    strut.style.height = makeEm(node.height + node.depth);\n\n    if (node.depth) {\n      strut.style.verticalAlign = makeEm(-node.depth);\n    }\n\n    node.children.unshift(strut); // Next, prevent vertical misplacement when next to something tall.\n    // This code resolves issue #1234\n\n    node = buildCommon.makeSpan([\"thinbox\"], [node], options);\n    return buildCommon.makeSpan([\"mord\", \"vbox\"], [node], options);\n  },\n  mathmlBuilder: (group, options) => {\n    // mathllap, mathrlap, mathclap\n    const node = new mathMLTree.MathNode(\"mpadded\", [buildMathML_buildGroup(group.body, options)]);\n\n    if (group.alignment !== \"rlap\") {\n      const offset = group.alignment === \"llap\" ? \"-1\" : \"-0.5\";\n      node.setAttribute(\"lspace\", offset + \"width\");\n    }\n\n    node.setAttribute(\"width\", \"0px\");\n    return node;\n  }\n});\n;// CONCATENATED MODULE: ./src/functions/math.js\n\n // Switching from text mode back to math mode\n\ndefineFunction({\n  type: \"styling\",\n  names: [\"\\\\(\", \"$\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false\n  },\n\n  handler(_ref, args) {\n    let {\n      funcName,\n      parser\n    } = _ref;\n    const outerMode = parser.mode;\n    parser.switchMode(\"math\");\n    const close = funcName === \"\\\\(\" ? \"\\\\)\" : \"$\";\n    const body = parser.parseExpression(false, close);\n    parser.expect(close);\n    parser.switchMode(outerMode);\n    return {\n      type: \"styling\",\n      mode: parser.mode,\n      style: \"text\",\n      body\n    };\n  }\n\n}); // Check for extra closing math delimiters\n\ndefineFunction({\n  type: \"text\",\n  // Doesn't matter what this is.\n  names: [\"\\\\)\", \"\\\\]\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false\n  },\n\n  handler(context, args) {\n    throw new src_ParseError(\"Mismatched \" + context.funcName);\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/mathchoice.js\n\n\n\n\n\n\nconst chooseMathStyle = (group, options) => {\n  switch (options.style.size) {\n    case src_Style.DISPLAY.size:\n      return group.display;\n\n    case src_Style.TEXT.size:\n      return group.text;\n\n    case src_Style.SCRIPT.size:\n      return group.script;\n\n    case src_Style.SCRIPTSCRIPT.size:\n      return group.scriptscript;\n\n    default:\n      return group.text;\n  }\n};\n\ndefineFunction({\n  type: \"mathchoice\",\n  names: [\"\\\\mathchoice\"],\n  props: {\n    numArgs: 4,\n    primitive: true\n  },\n  handler: (_ref, args) => {\n    let {\n      parser\n    } = _ref;\n    return {\n      type: \"mathchoice\",\n      mode: parser.mode,\n      display: ordargument(args[0]),\n      text: ordargument(args[1]),\n      script: ordargument(args[2]),\n      scriptscript: ordargument(args[3])\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const body = chooseMathStyle(group, options);\n    const elements = buildExpression(body, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: (group, options) => {\n    const body = chooseMathStyle(group, options);\n    return buildExpressionRow(body, options);\n  }\n});\n;// CONCATENATED MODULE: ./src/functions/utils/assembleSupSub.js\n\n\n\n // For an operator with limits, assemble the base, sup, and sub into a span.\n\nconst assembleSupSub = (base, supGroup, subGroup, options, style, slant, baseShift) => {\n  base = buildCommon.makeSpan([], [base]);\n  const subIsSingleCharacter = subGroup && utils.isCharacterBox(subGroup);\n  let sub;\n  let sup; // We manually have to handle the superscripts and subscripts. This,\n  // aside from the kern calculations, is copied from supsub.\n\n  if (supGroup) {\n    const elem = buildGroup(supGroup, options.havingStyle(style.sup()), options);\n    sup = {\n      elem,\n      kern: Math.max(options.fontMetrics().bigOpSpacing1, options.fontMetrics().bigOpSpacing3 - elem.depth)\n    };\n  }\n\n  if (subGroup) {\n    const elem = buildGroup(subGroup, options.havingStyle(style.sub()), options);\n    sub = {\n      elem,\n      kern: Math.max(options.fontMetrics().bigOpSpacing2, options.fontMetrics().bigOpSpacing4 - elem.height)\n    };\n  } // Build the final group as a vlist of the possible subscript, base,\n  // and possible superscript.\n\n\n  let finalGroup;\n\n  if (sup && sub) {\n    const bottom = options.fontMetrics().bigOpSpacing5 + sub.elem.height + sub.elem.depth + sub.kern + base.depth + baseShift;\n    finalGroup = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: bottom,\n      children: [{\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }, {\n        type: \"elem\",\n        elem: sub.elem,\n        marginLeft: makeEm(-slant)\n      }, {\n        type: \"kern\",\n        size: sub.kern\n      }, {\n        type: \"elem\",\n        elem: base\n      }, {\n        type: \"kern\",\n        size: sup.kern\n      }, {\n        type: \"elem\",\n        elem: sup.elem,\n        marginLeft: makeEm(slant)\n      }, {\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }]\n    }, options);\n  } else if (sub) {\n    const top = base.height - baseShift; // Shift the limits by the slant of the symbol. Note\n    // that we are supposed to shift the limits by 1/2 of the slant,\n    // but since we are centering the limits adding a full slant of\n    // margin will shift by 1/2 that.\n\n    finalGroup = buildCommon.makeVList({\n      positionType: \"top\",\n      positionData: top,\n      children: [{\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }, {\n        type: \"elem\",\n        elem: sub.elem,\n        marginLeft: makeEm(-slant)\n      }, {\n        type: \"kern\",\n        size: sub.kern\n      }, {\n        type: \"elem\",\n        elem: base\n      }]\n    }, options);\n  } else if (sup) {\n    const bottom = base.depth + baseShift;\n    finalGroup = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: bottom,\n      children: [{\n        type: \"elem\",\n        elem: base\n      }, {\n        type: \"kern\",\n        size: sup.kern\n      }, {\n        type: \"elem\",\n        elem: sup.elem,\n        marginLeft: makeEm(slant)\n      }, {\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }]\n    }, options);\n  } else {\n    // This case probably shouldn't occur (this would mean the\n    // supsub was sending us a group with no superscript or\n    // subscript) but be safe.\n    return base;\n  }\n\n  const parts = [finalGroup];\n\n  if (sub && slant !== 0 && !subIsSingleCharacter) {\n    // A negative margin-left was applied to the lower limit.\n    // Avoid an overlap by placing a spacer on the left on the group.\n    const spacer = buildCommon.makeSpan([\"mspace\"], [], options);\n    spacer.style.marginRight = makeEm(slant);\n    parts.unshift(spacer);\n  }\n\n  return buildCommon.makeSpan([\"mop\", \"op-limits\"], parts, options);\n};\n;// CONCATENATED MODULE: ./src/functions/op.js\n// Limits, symbols\n\n\n\n\n\n\n\n\n\n\n\n// Most operators have a large successor symbol, but these don't.\nconst noSuccessor = [\"\\\\smallint\"]; // NOTE: Unlike most `htmlBuilder`s, this one handles not only \"op\", but also\n// \"supsub\" since some of them (like \\int) can affect super/subscripting.\n\nconst op_htmlBuilder = (grp, options) => {\n  // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n  let supGroup;\n  let subGroup;\n  let hasLimits = false;\n  let group;\n\n  if (grp.type === \"supsub\") {\n    // If we have limits, supsub will pass us its group to handle. Pull\n    // out the superscript and subscript and set the group to the op in\n    // its base.\n    supGroup = grp.sup;\n    subGroup = grp.sub;\n    group = assertNodeType(grp.base, \"op\");\n    hasLimits = true;\n  } else {\n    group = assertNodeType(grp, \"op\");\n  }\n\n  const style = options.style;\n  let large = false;\n\n  if (style.size === src_Style.DISPLAY.size && group.symbol && !utils.contains(noSuccessor, group.name)) {\n    // Most symbol operators get larger in displaystyle (rule 13)\n    large = true;\n  }\n\n  let base;\n\n  if (group.symbol) {\n    // If this is a symbol, create the symbol.\n    const fontName = large ? \"Size2-Regular\" : \"Size1-Regular\";\n    let stash = \"\";\n\n    if (group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") {\n      // No font glyphs yet, so use a glyph w/o the oval.\n      // TODO: When font glyphs are available, delete this code.\n      stash = group.name.slice(1);\n      group.name = stash === \"oiint\" ? \"\\\\iint\" : \"\\\\iiint\";\n    }\n\n    base = buildCommon.makeSymbol(group.name, fontName, \"math\", options, [\"mop\", \"op-symbol\", large ? \"large-op\" : \"small-op\"]);\n\n    if (stash.length > 0) {\n      // We're in \\oiint or \\oiiint. Overlay the oval.\n      // TODO: When font glyphs are available, delete this code.\n      const italic = base.italic;\n      const oval = buildCommon.staticSvg(stash + \"Size\" + (large ? \"2\" : \"1\"), options);\n      base = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: base,\n          shift: 0\n        }, {\n          type: \"elem\",\n          elem: oval,\n          shift: large ? 0.08 : 0\n        }]\n      }, options);\n      group.name = \"\\\\\" + stash;\n      base.classes.unshift(\"mop\"); // $FlowFixMe\n\n      base.italic = italic;\n    }\n  } else if (group.body) {\n    // If this is a list, compose that list.\n    const inner = buildExpression(group.body, options, true);\n\n    if (inner.length === 1 && inner[0] instanceof SymbolNode) {\n      base = inner[0];\n      base.classes[0] = \"mop\"; // replace old mclass\n    } else {\n      base = buildCommon.makeSpan([\"mop\"], inner, options);\n    }\n  } else {\n    // Otherwise, this is a text operator. Build the text from the\n    // operator's name.\n    const output = [];\n\n    for (let i = 1; i < group.name.length; i++) {\n      output.push(buildCommon.mathsym(group.name[i], group.mode, options));\n    }\n\n    base = buildCommon.makeSpan([\"mop\"], output, options);\n  } // If content of op is a single symbol, shift it vertically.\n\n\n  let baseShift = 0;\n  let slant = 0;\n\n  if ((base instanceof SymbolNode || group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") && !group.suppressBaseShift) {\n    // We suppress the shift of the base of \\overset and \\underset. Otherwise,\n    // shift the symbol so its center lies on the axis (rule 13). It\n    // appears that our fonts have the centers of the symbols already\n    // almost on the axis, so these numbers are very small. Note we\n    // don't actually apply this here, but instead it is used either in\n    // the vlist creation or separately when there are no limits.\n    baseShift = (base.height - base.depth) / 2 - options.fontMetrics().axisHeight; // The slant of the symbol is just its italic correction.\n    // $FlowFixMe\n\n    slant = base.italic;\n  }\n\n  if (hasLimits) {\n    return assembleSupSub(base, supGroup, subGroup, options, style, slant, baseShift);\n  } else {\n    if (baseShift) {\n      base.style.position = \"relative\";\n      base.style.top = makeEm(baseShift);\n    }\n\n    return base;\n  }\n};\n\nconst op_mathmlBuilder = (group, options) => {\n  let node;\n\n  if (group.symbol) {\n    // This is a symbol. Just add the symbol.\n    node = new MathNode(\"mo\", [makeText(group.name, group.mode)]);\n\n    if (utils.contains(noSuccessor, group.name)) {\n      node.setAttribute(\"largeop\", \"false\");\n    }\n  } else if (group.body) {\n    // This is an operator with children. Add them.\n    node = new MathNode(\"mo\", buildMathML_buildExpression(group.body, options));\n  } else {\n    // This is a text operator. Add all of the characters from the\n    // operator's name.\n    node = new MathNode(\"mi\", [new TextNode(group.name.slice(1))]); // Append an <mo>&ApplyFunction;</mo>.\n    // ref: https://www.w3.org/TR/REC-MathML/chap3_2.html#sec3.2.4\n\n    const operator = new MathNode(\"mo\", [makeText(\"\\u2061\", \"text\")]);\n\n    if (group.parentIsSupSub) {\n      node = new MathNode(\"mrow\", [node, operator]);\n    } else {\n      node = newDocumentFragment([node, operator]);\n    }\n  }\n\n  return node;\n};\n\nconst singleCharBigOps = {\n  \"\\u220F\": \"\\\\prod\",\n  \"\\u2210\": \"\\\\coprod\",\n  \"\\u2211\": \"\\\\sum\",\n  \"\\u22c0\": \"\\\\bigwedge\",\n  \"\\u22c1\": \"\\\\bigvee\",\n  \"\\u22c2\": \"\\\\bigcap\",\n  \"\\u22c3\": \"\\\\bigcup\",\n  \"\\u2a00\": \"\\\\bigodot\",\n  \"\\u2a01\": \"\\\\bigoplus\",\n  \"\\u2a02\": \"\\\\bigotimes\",\n  \"\\u2a04\": \"\\\\biguplus\",\n  \"\\u2a06\": \"\\\\bigsqcup\"\n};\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\coprod\", \"\\\\bigvee\", \"\\\\bigwedge\", \"\\\\biguplus\", \"\\\\bigcap\", \"\\\\bigcup\", \"\\\\intop\", \"\\\\prod\", \"\\\\sum\", \"\\\\bigotimes\", \"\\\\bigoplus\", \"\\\\bigodot\", \"\\\\bigsqcup\", \"\\\\smallint\", \"\\u220F\", \"\\u2210\", \"\\u2211\", \"\\u22c0\", \"\\u22c1\", \"\\u22c2\", \"\\u22c3\", \"\\u2a00\", \"\\u2a01\", \"\\u2a02\", \"\\u2a04\", \"\\u2a06\"],\n  props: {\n    numArgs: 0\n  },\n  handler: (_ref, args) => {\n    let {\n      parser,\n      funcName\n    } = _ref;\n    let fName = funcName;\n\n    if (fName.length === 1) {\n      fName = singleCharBigOps[fName];\n    }\n\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: true,\n      parentIsSupSub: false,\n      symbol: true,\n      name: fName\n    };\n  },\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n}); // Note: calling defineFunction with a type that's already been defined only\n// works because the same htmlBuilder and mathmlBuilder are being used.\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\mathop\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n  handler: (_ref2, args) => {\n    let {\n      parser\n    } = _ref2;\n    const body = args[0];\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: false,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n}); // There are 2 flags for operators; whether they produce limits in\n// displaystyle, and whether they are symbols and should grow in\n// displaystyle. These four groups cover the four possible choices.\n\nconst singleCharIntegrals = {\n  \"\\u222b\": \"\\\\int\",\n  \"\\u222c\": \"\\\\iint\",\n  \"\\u222d\": \"\\\\iiint\",\n  \"\\u222e\": \"\\\\oint\",\n  \"\\u222f\": \"\\\\oiint\",\n  \"\\u2230\": \"\\\\oiiint\"\n}; // No limits, not symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\arctg\", \"\\\\arcctg\", \"\\\\arg\", \"\\\\ch\", \"\\\\cos\", \"\\\\cosec\", \"\\\\cosh\", \"\\\\cot\", \"\\\\cotg\", \"\\\\coth\", \"\\\\csc\", \"\\\\ctg\", \"\\\\cth\", \"\\\\deg\", \"\\\\dim\", \"\\\\exp\", \"\\\\hom\", \"\\\\ker\", \"\\\\lg\", \"\\\\ln\", \"\\\\log\", \"\\\\sec\", \"\\\\sin\", \"\\\\sinh\", \"\\\\sh\", \"\\\\tan\", \"\\\\tanh\", \"\\\\tg\", \"\\\\th\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(_ref3) {\n    let {\n      parser,\n      funcName\n    } = _ref3;\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: false,\n      name: funcName\n    };\n  },\n\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n}); // Limits, not symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\det\", \"\\\\gcd\", \"\\\\inf\", \"\\\\lim\", \"\\\\max\", \"\\\\min\", \"\\\\Pr\", \"\\\\sup\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(_ref4) {\n    let {\n      parser,\n      funcName\n    } = _ref4;\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: true,\n      parentIsSupSub: false,\n      symbol: false,\n      name: funcName\n    };\n  },\n\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n}); // No limits, symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\", \"\\\\oiint\", \"\\\\oiiint\", \"\\u222b\", \"\\u222c\", \"\\u222d\", \"\\u222e\", \"\\u222f\", \"\\u2230\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(_ref5) {\n    let {\n      parser,\n      funcName\n    } = _ref5;\n    let fName = funcName;\n\n    if (fName.length === 1) {\n      fName = singleCharIntegrals[fName];\n    }\n\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: true,\n      name: fName\n    };\n  },\n\n  htmlBuilder: op_htmlBuilder,\n  mathmlBuilder: op_mathmlBuilder\n});\n;// CONCATENATED MODULE: ./src/functions/operatorname.js\n\n\n\n\n\n\n\n\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only\n// \"operatorname\", but also  \"supsub\" since \\operatorname* can\n// affect super/subscripting.\nconst operatorname_htmlBuilder = (grp, options) => {\n  // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n  let supGroup;\n  let subGroup;\n  let hasLimits = false;\n  let group;\n\n  if (grp.type === \"supsub\") {\n    // If we have limits, supsub will pass us its group to handle. Pull\n    // out the superscript and subscript and set the group to the op in\n    // its base.\n    supGroup = grp.sup;\n    subGroup = grp.sub;\n    group = assertNodeType(grp.base, \"operatorname\");\n    hasLimits = true;\n  } else {\n    group = assertNodeType(grp, \"operatorname\");\n  }\n\n  let base;\n\n  if (group.body.length > 0) {\n    const body = group.body.map(child => {\n      // $FlowFixMe: Check if the node has a string `text` property.\n      const childText = child.text;\n\n      if (typeof childText === \"string\") {\n        return {\n          type: \"textord\",\n          mode: child.mode,\n          text: childText\n        };\n      } else {\n        return child;\n      }\n    }); // Consolidate function names into symbol characters.\n\n    const expression = buildExpression(body, options.withFont(\"mathrm\"), true);\n\n    for (let i = 0; i < expression.length; i++) {\n      const child = expression[i];\n\n      if (child instanceof SymbolNode) {\n        // Per amsopn package,\n        // change minus to hyphen and \\ast to asterisk\n        child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n      }\n    }\n\n    base = buildCommon.makeSpan([\"mop\"], expression, options);\n  } else {\n    base = buildCommon.makeSpan([\"mop\"], [], options);\n  }\n\n  if (hasLimits) {\n    return assembleSupSub(base, supGroup, subGroup, options, options.style, 0, 0);\n  } else {\n    return base;\n  }\n};\n\nconst operatorname_mathmlBuilder = (group, options) => {\n  // The steps taken here are similar to the html version.\n  let expression = buildMathML_buildExpression(group.body, options.withFont(\"mathrm\")); // Is expression a string or has it something like a fraction?\n\n  let isAllString = true; // default\n\n  for (let i = 0; i < expression.length; i++) {\n    const node = expression[i];\n\n    if (node instanceof mathMLTree.SpaceNode) {// Do nothing\n    } else if (node instanceof mathMLTree.MathNode) {\n      switch (node.type) {\n        case \"mi\":\n        case \"mn\":\n        case \"ms\":\n        case \"mspace\":\n        case \"mtext\":\n          break;\n        // Do nothing yet.\n\n        case \"mo\":\n          {\n            const child = node.children[0];\n\n            if (node.children.length === 1 && child instanceof mathMLTree.TextNode) {\n              child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n            } else {\n              isAllString = false;\n            }\n\n            break;\n          }\n\n        default:\n          isAllString = false;\n      }\n    } else {\n      isAllString = false;\n    }\n  }\n\n  if (isAllString) {\n    // Write a single TextNode instead of multiple nested tags.\n    const word = expression.map(node => node.toText()).join(\"\");\n    expression = [new mathMLTree.TextNode(word)];\n  }\n\n  const identifier = new mathMLTree.MathNode(\"mi\", expression);\n  identifier.setAttribute(\"mathvariant\", \"normal\"); // \\u2061 is the same as &ApplyFunction;\n  // ref: https://www.w3schools.com/charsets/ref_html_entities_a.asp\n\n  const operator = new mathMLTree.MathNode(\"mo\", [makeText(\"\\u2061\", \"text\")]);\n\n  if (group.parentIsSupSub) {\n    return new mathMLTree.MathNode(\"mrow\", [identifier, operator]);\n  } else {\n    return mathMLTree.newDocumentFragment([identifier, operator]);\n  }\n}; // \\operatorname\n// amsopn.dtx: \\mathop{#1\\kern\\z@\\operator@font#3}\\newmcodes@\n\n\ndefineFunction({\n  type: \"operatorname\",\n  names: [\"\\\\operatorname@\", \"\\\\operatornamewithlimits\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (_ref, args) => {\n    let {\n      parser,\n      funcName\n    } = _ref;\n    const body = args[0];\n    return {\n      type: \"operatorname\",\n      mode: parser.mode,\n      body: ordargument(body),\n      alwaysHandleSupSub: funcName === \"\\\\operatornamewithlimits\",\n      limits: false,\n      parentIsSupSub: false\n    };\n  },\n  htmlBuilder: operatorname_htmlBuilder,\n  mathmlBuilder: operatorname_mathmlBuilder\n});\ndefineMacro(\"\\\\operatorname\", \"\\\\@ifstar\\\\operatornamewithlimits\\\\operatorname@\");\n;// CONCATENATED MODULE: ./src/functions/ordgroup.js\n\n\n\n\ndefineFunctionBuilders({\n  type: \"ordgroup\",\n\n  htmlBuilder(group, options) {\n    if (group.semisimple) {\n      return buildCommon.makeFragment(buildExpression(group.body, options, false));\n    }\n\n    return buildCommon.makeSpan([\"mord\"], buildExpression(group.body, options, true), options);\n  },\n\n  mathmlBuilder(group, options) {\n    return buildExpressionRow(group.body, options, true);\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/overline.js\n\n\n\n\n\ndefineFunction({\n  type: \"overline\",\n  names: [\"\\\\overline\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref, args) {\n    let {\n      parser\n    } = _ref;\n    const body = args[0];\n    return {\n      type: \"overline\",\n      mode: parser.mode,\n      body\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Overlines are handled in the TeXbook pg 443, Rule 9.\n    // Build the inner group in the cramped style.\n    const innerGroup = buildGroup(group.body, options.havingCrampedStyle()); // Create the line above the body\n\n    const line = buildCommon.makeLineSpan(\"overline-line\", options); // Generate the vlist, with the appropriate kerns\n\n    const defaultRuleThickness = options.fontMetrics().defaultRuleThickness;\n    const vlist = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: innerGroup\n      }, {\n        type: \"kern\",\n        size: 3 * defaultRuleThickness\n      }, {\n        type: \"elem\",\n        elem: line\n      }, {\n        type: \"kern\",\n        size: defaultRuleThickness\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"overline\"], [vlist], options);\n  },\n\n  mathmlBuilder(group, options) {\n    const operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n    const node = new mathMLTree.MathNode(\"mover\", [buildMathML_buildGroup(group.body, options), operator]);\n    node.setAttribute(\"accent\", \"true\");\n    return node;\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/phantom.js\n\n\n\n\n\ndefineFunction({\n  type: \"phantom\",\n  names: [\"\\\\phantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    let {\n      parser\n    } = _ref;\n    const body = args[0];\n    return {\n      type: \"phantom\",\n      mode: parser.mode,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const elements = buildExpression(group.body, options.withPhantom(), false); // \\phantom isn't supposed to affect the elements it contains.\n    // See \"color\" for more details.\n\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: (group, options) => {\n    const inner = buildMathML_buildExpression(group.body, options);\n    return new mathMLTree.MathNode(\"mphantom\", inner);\n  }\n});\ndefineFunction({\n  type: \"hphantom\",\n  names: [\"\\\\hphantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref2, args) => {\n    let {\n      parser\n    } = _ref2;\n    const body = args[0];\n    return {\n      type: \"hphantom\",\n      mode: parser.mode,\n      body\n    };\n  },\n  htmlBuilder: (group, options) => {\n    let node = buildCommon.makeSpan([], [buildGroup(group.body, options.withPhantom())]);\n    node.height = 0;\n    node.depth = 0;\n\n    if (node.children) {\n      for (let i = 0; i < node.children.length; i++) {\n        node.children[i].height = 0;\n        node.children[i].depth = 0;\n      }\n    } // See smash for comment re: use of makeVList\n\n\n    node = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // For spacing, TeX treats \\smash as a math group (same spacing as ord).\n\n    return buildCommon.makeSpan([\"mord\"], [node], options);\n  },\n  mathmlBuilder: (group, options) => {\n    const inner = buildMathML_buildExpression(ordargument(group.body), options);\n    const phantom = new mathMLTree.MathNode(\"mphantom\", inner);\n    const node = new mathMLTree.MathNode(\"mpadded\", [phantom]);\n    node.setAttribute(\"height\", \"0px\");\n    node.setAttribute(\"depth\", \"0px\");\n    return node;\n  }\n});\ndefineFunction({\n  type: \"vphantom\",\n  names: [\"\\\\vphantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref3, args) => {\n    let {\n      parser\n    } = _ref3;\n    const body = args[0];\n    return {\n      type: \"vphantom\",\n      mode: parser.mode,\n      body\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const inner = buildCommon.makeSpan([\"inner\"], [buildGroup(group.body, options.withPhantom())]);\n    const fix = buildCommon.makeSpan([\"fix\"], []);\n    return buildCommon.makeSpan([\"mord\", \"rlap\"], [inner, fix], options);\n  },\n  mathmlBuilder: (group, options) => {\n    const inner = buildMathML_buildExpression(ordargument(group.body), options);\n    const phantom = new mathMLTree.MathNode(\"mphantom\", inner);\n    const node = new mathMLTree.MathNode(\"mpadded\", [phantom]);\n    node.setAttribute(\"width\", \"0px\");\n    return node;\n  }\n});\n;// CONCATENATED MODULE: ./src/functions/raisebox.js\n\n\n\n\n\n\n // Box manipulation\n\ndefineFunction({\n  type: \"raisebox\",\n  names: [\"\\\\raisebox\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"size\", \"hbox\"],\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    let {\n      parser\n    } = _ref;\n    const amount = assertNodeType(args[0], \"size\").value;\n    const body = args[1];\n    return {\n      type: \"raisebox\",\n      mode: parser.mode,\n      dy: amount,\n      body\n    };\n  },\n\n  htmlBuilder(group, options) {\n    const body = buildGroup(group.body, options);\n    const dy = calculateSize(group.dy, options);\n    return buildCommon.makeVList({\n      positionType: \"shift\",\n      positionData: -dy,\n      children: [{\n        type: \"elem\",\n        elem: body\n      }]\n    }, options);\n  },\n\n  mathmlBuilder(group, options) {\n    const node = new mathMLTree.MathNode(\"mpadded\", [buildMathML_buildGroup(group.body, options)]);\n    const dy = group.dy.number + group.dy.unit;\n    node.setAttribute(\"voffset\", dy);\n    return node;\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/relax.js\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\relax\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n\n  handler(_ref) {\n    let {\n      parser\n    } = _ref;\n    return {\n      type: \"internal\",\n      mode: parser.mode\n    };\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/rule.js\n\n\n\n\n\ndefineFunction({\n  type: \"rule\",\n  names: [\"\\\\rule\"],\n  props: {\n    numArgs: 2,\n    numOptionalArgs: 1,\n    allowedInText: true,\n    allowedInMath: true,\n    argTypes: [\"size\", \"size\", \"size\"]\n  },\n\n  handler(_ref, args, optArgs) {\n    let {\n      parser\n    } = _ref;\n    const shift = optArgs[0];\n    const width = assertNodeType(args[0], \"size\");\n    const height = assertNodeType(args[1], \"size\");\n    return {\n      type: \"rule\",\n      mode: parser.mode,\n      shift: shift && assertNodeType(shift, \"size\").value,\n      width: width.value,\n      height: height.value\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Make an empty span for the rule\n    const rule = buildCommon.makeSpan([\"mord\", \"rule\"], [], options); // Calculate the shift, width, and height of the rule, and account for units\n\n    const width = calculateSize(group.width, options);\n    const height = calculateSize(group.height, options);\n    const shift = group.shift ? calculateSize(group.shift, options) : 0; // Style the rule to the right size\n\n    rule.style.borderRightWidth = makeEm(width);\n    rule.style.borderTopWidth = makeEm(height);\n    rule.style.bottom = makeEm(shift); // Record the height and width\n\n    rule.width = width;\n    rule.height = height + shift;\n    rule.depth = -shift; // Font size is the number large enough that the browser will\n    // reserve at least `absHeight` space above the baseline.\n    // The 1.125 factor was empirically determined\n\n    rule.maxFontSize = height * 1.125 * options.sizeMultiplier;\n    return rule;\n  },\n\n  mathmlBuilder(group, options) {\n    const width = calculateSize(group.width, options);\n    const height = calculateSize(group.height, options);\n    const shift = group.shift ? calculateSize(group.shift, options) : 0;\n    const color = options.color && options.getColor() || \"black\";\n    const rule = new mathMLTree.MathNode(\"mspace\");\n    rule.setAttribute(\"mathbackground\", color);\n    rule.setAttribute(\"width\", makeEm(width));\n    rule.setAttribute(\"height\", makeEm(height));\n    const wrapper = new mathMLTree.MathNode(\"mpadded\", [rule]);\n\n    if (shift >= 0) {\n      wrapper.setAttribute(\"height\", makeEm(shift));\n    } else {\n      wrapper.setAttribute(\"height\", makeEm(shift));\n      wrapper.setAttribute(\"depth\", makeEm(-shift));\n    }\n\n    wrapper.setAttribute(\"voffset\", makeEm(shift));\n    return wrapper;\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/sizing.js\n\n\n\n\n\n\nfunction sizingGroup(value, options, baseOptions) {\n  const inner = buildExpression(value, options, false);\n  const multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier; // Add size-resetting classes to the inner list and set maxFontSize\n  // manually. Handle nested size changes.\n\n  for (let i = 0; i < inner.length; i++) {\n    const pos = inner[i].classes.indexOf(\"sizing\");\n\n    if (pos < 0) {\n      Array.prototype.push.apply(inner[i].classes, options.sizingClasses(baseOptions));\n    } else if (inner[i].classes[pos + 1] === \"reset-size\" + options.size) {\n      // This is a nested size change: e.g., inner[i] is the \"b\" in\n      // `\\Huge a \\small b`. Override the old size (the `reset-` class)\n      // but not the new size.\n      inner[i].classes[pos + 1] = \"reset-size\" + baseOptions.size;\n    }\n\n    inner[i].height *= multiplier;\n    inner[i].depth *= multiplier;\n  }\n\n  return buildCommon.makeFragment(inner);\n}\nconst sizeFuncs = [\"\\\\tiny\", \"\\\\sixptsize\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\", \"\\\\normalsize\", \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\"];\nconst sizing_htmlBuilder = (group, options) => {\n  // Handle sizing operators like \\Huge. Real TeX doesn't actually allow\n  // these functions inside of math expressions, so we do some special\n  // handling.\n  const newOptions = options.havingSize(group.size);\n  return sizingGroup(group.body, newOptions, options);\n};\ndefineFunction({\n  type: \"sizing\",\n  names: sizeFuncs,\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    let {\n      breakOnTokenText,\n      funcName,\n      parser\n    } = _ref;\n    const body = parser.parseExpression(false, breakOnTokenText);\n    return {\n      type: \"sizing\",\n      mode: parser.mode,\n      // Figure out what size to use based on the list of functions above\n      size: sizeFuncs.indexOf(funcName) + 1,\n      body\n    };\n  },\n  htmlBuilder: sizing_htmlBuilder,\n  mathmlBuilder: (group, options) => {\n    const newOptions = options.havingSize(group.size);\n    const inner = buildMathML_buildExpression(group.body, newOptions);\n    const node = new mathMLTree.MathNode(\"mstyle\", inner); // TODO(emily): This doesn't produce the correct size for nested size\n    // changes, because we don't keep state of what style we're currently\n    // in, so we can't reset the size to normal before changing it.  Now\n    // that we're passing an options parameter we should be able to fix\n    // this.\n\n    node.setAttribute(\"mathsize\", makeEm(newOptions.sizeMultiplier));\n    return node;\n  }\n});\n;// CONCATENATED MODULE: ./src/functions/smash.js\n// smash, with optional [tb], as in AMS\n\n\n\n\n\n\ndefineFunction({\n  type: \"smash\",\n  names: [\"\\\\smash\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref, args, optArgs) => {\n    let {\n      parser\n    } = _ref;\n    let smashHeight = false;\n    let smashDepth = false;\n    const tbArg = optArgs[0] && assertNodeType(optArgs[0], \"ordgroup\");\n\n    if (tbArg) {\n      // Optional [tb] argument is engaged.\n      // ref: amsmath: \\renewcommand{\\smash}[1][tb]{%\n      //               def\\mb@t{\\ht}\\def\\mb@b{\\dp}\\def\\mb@tb{\\ht\\z@\\z@\\dp}%\n      let letter = \"\";\n\n      for (let i = 0; i < tbArg.body.length; ++i) {\n        const node = tbArg.body[i]; // $FlowFixMe: Not every node type has a `text` property.\n\n        letter = node.text;\n\n        if (letter === \"t\") {\n          smashHeight = true;\n        } else if (letter === \"b\") {\n          smashDepth = true;\n        } else {\n          smashHeight = false;\n          smashDepth = false;\n          break;\n        }\n      }\n    } else {\n      smashHeight = true;\n      smashDepth = true;\n    }\n\n    const body = args[0];\n    return {\n      type: \"smash\",\n      mode: parser.mode,\n      body,\n      smashHeight,\n      smashDepth\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const node = buildCommon.makeSpan([], [buildGroup(group.body, options)]);\n\n    if (!group.smashHeight && !group.smashDepth) {\n      return node;\n    }\n\n    if (group.smashHeight) {\n      node.height = 0; // In order to influence makeVList, we have to reset the children.\n\n      if (node.children) {\n        for (let i = 0; i < node.children.length; i++) {\n          node.children[i].height = 0;\n        }\n      }\n    }\n\n    if (group.smashDepth) {\n      node.depth = 0;\n\n      if (node.children) {\n        for (let i = 0; i < node.children.length; i++) {\n          node.children[i].depth = 0;\n        }\n      }\n    } // At this point, we've reset the TeX-like height and depth values.\n    // But the span still has an HTML line height.\n    // makeVList applies \"display: table-cell\", which prevents the browser\n    // from acting on that line height. So we'll call makeVList now.\n\n\n    const smashedNode = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // For spacing, TeX treats \\hphantom as a math group (same spacing as ord).\n\n    return buildCommon.makeSpan([\"mord\"], [smashedNode], options);\n  },\n  mathmlBuilder: (group, options) => {\n    const node = new mathMLTree.MathNode(\"mpadded\", [buildMathML_buildGroup(group.body, options)]);\n\n    if (group.smashHeight) {\n      node.setAttribute(\"height\", \"0px\");\n    }\n\n    if (group.smashDepth) {\n      node.setAttribute(\"depth\", \"0px\");\n    }\n\n    return node;\n  }\n});\n;// CONCATENATED MODULE: ./src/functions/sqrt.js\n\n\n\n\n\n\n\n\ndefineFunction({\n  type: \"sqrt\",\n  names: [\"\\\\sqrt\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n\n  handler(_ref, args, optArgs) {\n    let {\n      parser\n    } = _ref;\n    const index = optArgs[0];\n    const body = args[0];\n    return {\n      type: \"sqrt\",\n      mode: parser.mode,\n      body,\n      index\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Square roots are handled in the TeXbook pg. 443, Rule 11.\n    // First, we do the same steps as in overline to build the inner group\n    // and line\n    let inner = buildGroup(group.body, options.havingCrampedStyle());\n\n    if (inner.height === 0) {\n      // Render a small surd.\n      inner.height = options.fontMetrics().xHeight;\n    } // Some groups can return document fragments.  Handle those by wrapping\n    // them in a span.\n\n\n    inner = buildCommon.wrapFragment(inner, options); // Calculate the minimum size for the \\surd delimiter\n\n    const metrics = options.fontMetrics();\n    const theta = metrics.defaultRuleThickness;\n    let phi = theta;\n\n    if (options.style.id < src_Style.TEXT.id) {\n      phi = options.fontMetrics().xHeight;\n    } // Calculate the clearance between the body and line\n\n\n    let lineClearance = theta + phi / 4;\n    const minDelimiterHeight = inner.height + inner.depth + lineClearance + theta; // Create a sqrt SVG of the required minimum size\n\n    const {\n      span: img,\n      ruleWidth,\n      advanceWidth\n    } = delimiter.sqrtImage(minDelimiterHeight, options);\n    const delimDepth = img.height - ruleWidth; // Adjust the clearance based on the delimiter size\n\n    if (delimDepth > inner.height + inner.depth + lineClearance) {\n      lineClearance = (lineClearance + delimDepth - inner.height - inner.depth) / 2;\n    } // Shift the sqrt image\n\n\n    const imgShift = img.height - inner.height - lineClearance - ruleWidth;\n    inner.style.paddingLeft = makeEm(advanceWidth); // Overlay the image and the argument.\n\n    const body = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: inner,\n        wrapperClasses: [\"svg-align\"]\n      }, {\n        type: \"kern\",\n        size: -(inner.height + imgShift)\n      }, {\n        type: \"elem\",\n        elem: img\n      }, {\n        type: \"kern\",\n        size: ruleWidth\n      }]\n    }, options);\n\n    if (!group.index) {\n      return buildCommon.makeSpan([\"mord\", \"sqrt\"], [body], options);\n    } else {\n      // Handle the optional root index\n      // The index is always in scriptscript style\n      const newOptions = options.havingStyle(src_Style.SCRIPTSCRIPT);\n      const rootm = buildGroup(group.index, newOptions, options); // The amount the index is shifted by. This is taken from the TeX\n      // source, in the definition of `\\r@@t`.\n\n      const toShift = 0.6 * (body.height - body.depth); // Build a VList with the superscript shifted up correctly\n\n      const rootVList = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: -toShift,\n        children: [{\n          type: \"elem\",\n          elem: rootm\n        }]\n      }, options); // Add a class surrounding it so we can add on the appropriate\n      // kerning\n\n      const rootVListWrap = buildCommon.makeSpan([\"root\"], [rootVList]);\n      return buildCommon.makeSpan([\"mord\", \"sqrt\"], [rootVListWrap, body], options);\n    }\n  },\n\n  mathmlBuilder(group, options) {\n    const {\n      body,\n      index\n    } = group;\n    return index ? new mathMLTree.MathNode(\"mroot\", [buildMathML_buildGroup(body, options), buildMathML_buildGroup(index, options)]) : new mathMLTree.MathNode(\"msqrt\", [buildMathML_buildGroup(body, options)]);\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/styling.js\n\n\n\n\n\nconst styling_styleMap = {\n  \"display\": src_Style.DISPLAY,\n  \"text\": src_Style.TEXT,\n  \"script\": src_Style.SCRIPT,\n  \"scriptscript\": src_Style.SCRIPTSCRIPT\n};\ndefineFunction({\n  type: \"styling\",\n  names: [\"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\", \"\\\\scriptscriptstyle\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref, args) {\n    let {\n      breakOnTokenText,\n      funcName,\n      parser\n    } = _ref;\n    // parse out the implicit body\n    const body = parser.parseExpression(true, breakOnTokenText); // TODO: Refactor to avoid duplicating styleMap in multiple places (e.g.\n    // here and in buildHTML and de-dupe the enumeration of all the styles).\n    // $FlowFixMe: The names above exactly match the styles.\n\n    const style = funcName.slice(1, funcName.length - 5);\n    return {\n      type: \"styling\",\n      mode: parser.mode,\n      // Figure out what style to use by pulling out the style from\n      // the function name\n      style,\n      body\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Style changes are handled in the TeXbook on pg. 442, Rule 3.\n    const newStyle = styling_styleMap[group.style];\n    const newOptions = options.havingStyle(newStyle).withFont('');\n    return sizingGroup(group.body, newOptions, options);\n  },\n\n  mathmlBuilder(group, options) {\n    // Figure out what style we're changing to.\n    const newStyle = styling_styleMap[group.style];\n    const newOptions = options.havingStyle(newStyle);\n    const inner = buildMathML_buildExpression(group.body, newOptions);\n    const node = new mathMLTree.MathNode(\"mstyle\", inner);\n    const styleAttributes = {\n      \"display\": [\"0\", \"true\"],\n      \"text\": [\"0\", \"false\"],\n      \"script\": [\"1\", \"false\"],\n      \"scriptscript\": [\"2\", \"false\"]\n    };\n    const attr = styleAttributes[group.style];\n    node.setAttribute(\"scriptlevel\", attr[0]);\n    node.setAttribute(\"displaystyle\", attr[1]);\n    return node;\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/supsub.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Sometimes, groups perform special rules when they have superscripts or\n * subscripts attached to them. This function lets the `supsub` group know that\n * Sometimes, groups perform special rules when they have superscripts or\n * its inner element should handle the superscripts and subscripts instead of\n * handling them itself.\n */\nconst htmlBuilderDelegate = function (group, options) {\n  const base = group.base;\n\n  if (!base) {\n    return null;\n  } else if (base.type === \"op\") {\n    // Operators handle supsubs differently when they have limits\n    // (e.g. `\\displaystyle\\sum_2^3`)\n    const delegate = base.limits && (options.style.size === src_Style.DISPLAY.size || base.alwaysHandleSupSub);\n    return delegate ? op_htmlBuilder : null;\n  } else if (base.type === \"operatorname\") {\n    const delegate = base.alwaysHandleSupSub && (options.style.size === src_Style.DISPLAY.size || base.limits);\n    return delegate ? operatorname_htmlBuilder : null;\n  } else if (base.type === \"accent\") {\n    return utils.isCharacterBox(base.base) ? htmlBuilder : null;\n  } else if (base.type === \"horizBrace\") {\n    const isSup = !group.sub;\n    return isSup === base.isOver ? horizBrace_htmlBuilder : null;\n  } else {\n    return null;\n  }\n}; // Super scripts and subscripts, whose precise placement can depend on other\n// functions that precede them.\n\n\ndefineFunctionBuilders({\n  type: \"supsub\",\n\n  htmlBuilder(group, options) {\n    // Superscript and subscripts are handled in the TeXbook on page\n    // 445-446, rules 18(a-f).\n    // Here is where we defer to the inner group if it should handle\n    // superscripts and subscripts itself.\n    const builderDelegate = htmlBuilderDelegate(group, options);\n\n    if (builderDelegate) {\n      return builderDelegate(group, options);\n    }\n\n    const {\n      base: valueBase,\n      sup: valueSup,\n      sub: valueSub\n    } = group;\n    const base = buildGroup(valueBase, options);\n    let supm;\n    let subm;\n    const metrics = options.fontMetrics(); // Rule 18a\n\n    let supShift = 0;\n    let subShift = 0;\n    const isCharacterBox = valueBase && utils.isCharacterBox(valueBase);\n\n    if (valueSup) {\n      const newOptions = options.havingStyle(options.style.sup());\n      supm = buildGroup(valueSup, newOptions, options);\n\n      if (!isCharacterBox) {\n        supShift = base.height - newOptions.fontMetrics().supDrop * newOptions.sizeMultiplier / options.sizeMultiplier;\n      }\n    }\n\n    if (valueSub) {\n      const newOptions = options.havingStyle(options.style.sub());\n      subm = buildGroup(valueSub, newOptions, options);\n\n      if (!isCharacterBox) {\n        subShift = base.depth + newOptions.fontMetrics().subDrop * newOptions.sizeMultiplier / options.sizeMultiplier;\n      }\n    } // Rule 18c\n\n\n    let minSupShift;\n\n    if (options.style === src_Style.DISPLAY) {\n      minSupShift = metrics.sup1;\n    } else if (options.style.cramped) {\n      minSupShift = metrics.sup3;\n    } else {\n      minSupShift = metrics.sup2;\n    } // scriptspace is a font-size-independent size, so scale it\n    // appropriately for use as the marginRight.\n\n\n    const multiplier = options.sizeMultiplier;\n    const marginRight = makeEm(0.5 / metrics.ptPerEm / multiplier);\n    let marginLeft = null;\n\n    if (subm) {\n      // Subscripts shouldn't be shifted by the base's italic correction.\n      // Account for that by shifting the subscript back the appropriate\n      // amount. Note we only do this when the base is a single symbol.\n      const isOiint = group.base && group.base.type === \"op\" && group.base.name && (group.base.name === \"\\\\oiint\" || group.base.name === \"\\\\oiiint\");\n\n      if (base instanceof SymbolNode || isOiint) {\n        // $FlowFixMe\n        marginLeft = makeEm(-base.italic);\n      }\n    }\n\n    let supsub;\n\n    if (supm && subm) {\n      supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n      subShift = Math.max(subShift, metrics.sub2);\n      const ruleWidth = metrics.defaultRuleThickness; // Rule 18e\n\n      const maxWidth = 4 * ruleWidth;\n\n      if (supShift - supm.depth - (subm.height - subShift) < maxWidth) {\n        subShift = maxWidth - (supShift - supm.depth) + subm.height;\n        const psi = 0.8 * metrics.xHeight - (supShift - supm.depth);\n\n        if (psi > 0) {\n          supShift += psi;\n          subShift -= psi;\n        }\n      }\n\n      const vlistElem = [{\n        type: \"elem\",\n        elem: subm,\n        shift: subShift,\n        marginRight,\n        marginLeft\n      }, {\n        type: \"elem\",\n        elem: supm,\n        shift: -supShift,\n        marginRight\n      }];\n      supsub = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: vlistElem\n      }, options);\n    } else if (subm) {\n      // Rule 18b\n      subShift = Math.max(subShift, metrics.sub1, subm.height - 0.8 * metrics.xHeight);\n      const vlistElem = [{\n        type: \"elem\",\n        elem: subm,\n        marginLeft,\n        marginRight\n      }];\n      supsub = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: subShift,\n        children: vlistElem\n      }, options);\n    } else if (supm) {\n      // Rule 18c, d\n      supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n      supsub = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: -supShift,\n        children: [{\n          type: \"elem\",\n          elem: supm,\n          marginRight\n        }]\n      }, options);\n    } else {\n      throw new Error(\"supsub must have either sup or sub.\");\n    } // Wrap the supsub vlist in a span.msupsub to reset text-align.\n\n\n    const mclass = getTypeOfDomTree(base, \"right\") || \"mord\";\n    return buildCommon.makeSpan([mclass], [base, buildCommon.makeSpan([\"msupsub\"], [supsub])], options);\n  },\n\n  mathmlBuilder(group, options) {\n    // Is the inner group a relevant horizonal brace?\n    let isBrace = false;\n    let isOver;\n    let isSup;\n\n    if (group.base && group.base.type === \"horizBrace\") {\n      isSup = !!group.sup;\n\n      if (isSup === group.base.isOver) {\n        isBrace = true;\n        isOver = group.base.isOver;\n      }\n    }\n\n    if (group.base && (group.base.type === \"op\" || group.base.type === \"operatorname\")) {\n      group.base.parentIsSupSub = true;\n    }\n\n    const children = [buildMathML_buildGroup(group.base, options)];\n\n    if (group.sub) {\n      children.push(buildMathML_buildGroup(group.sub, options));\n    }\n\n    if (group.sup) {\n      children.push(buildMathML_buildGroup(group.sup, options));\n    }\n\n    let nodeType;\n\n    if (isBrace) {\n      nodeType = isOver ? \"mover\" : \"munder\";\n    } else if (!group.sub) {\n      const base = group.base;\n\n      if (base && base.type === \"op\" && base.limits && (options.style === src_Style.DISPLAY || base.alwaysHandleSupSub)) {\n        nodeType = \"mover\";\n      } else if (base && base.type === \"operatorname\" && base.alwaysHandleSupSub && (base.limits || options.style === src_Style.DISPLAY)) {\n        nodeType = \"mover\";\n      } else {\n        nodeType = \"msup\";\n      }\n    } else if (!group.sup) {\n      const base = group.base;\n\n      if (base && base.type === \"op\" && base.limits && (options.style === src_Style.DISPLAY || base.alwaysHandleSupSub)) {\n        nodeType = \"munder\";\n      } else if (base && base.type === \"operatorname\" && base.alwaysHandleSupSub && (base.limits || options.style === src_Style.DISPLAY)) {\n        nodeType = \"munder\";\n      } else {\n        nodeType = \"msub\";\n      }\n    } else {\n      const base = group.base;\n\n      if (base && base.type === \"op\" && base.limits && options.style === src_Style.DISPLAY) {\n        nodeType = \"munderover\";\n      } else if (base && base.type === \"operatorname\" && base.alwaysHandleSupSub && (options.style === src_Style.DISPLAY || base.limits)) {\n        nodeType = \"munderover\";\n      } else {\n        nodeType = \"msubsup\";\n      }\n    }\n\n    return new mathMLTree.MathNode(nodeType, children);\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/symbolsOp.js\n\n\n\n // Operator ParseNodes created in Parser.js from symbol Groups in src/symbols.js.\n\ndefineFunctionBuilders({\n  type: \"atom\",\n\n  htmlBuilder(group, options) {\n    return buildCommon.mathsym(group.text, group.mode, options, [\"m\" + group.family]);\n  },\n\n  mathmlBuilder(group, options) {\n    const node = new mathMLTree.MathNode(\"mo\", [makeText(group.text, group.mode)]);\n\n    if (group.family === \"bin\") {\n      const variant = getVariant(group, options);\n\n      if (variant === \"bold-italic\") {\n        node.setAttribute(\"mathvariant\", variant);\n      }\n    } else if (group.family === \"punct\") {\n      node.setAttribute(\"separator\", \"true\");\n    } else if (group.family === \"open\" || group.family === \"close\") {\n      // Delims built here should not stretch vertically.\n      // See delimsizing.js for stretchy delims.\n      node.setAttribute(\"stretchy\", \"false\");\n    }\n\n    return node;\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/symbolsOrd.js\n\n\n\n\n// \"mathord\" and \"textord\" ParseNodes created in Parser.js from symbol Groups in\n// src/symbols.js.\nconst defaultVariant = {\n  \"mi\": \"italic\",\n  \"mn\": \"normal\",\n  \"mtext\": \"normal\"\n};\ndefineFunctionBuilders({\n  type: \"mathord\",\n\n  htmlBuilder(group, options) {\n    return buildCommon.makeOrd(group, options, \"mathord\");\n  },\n\n  mathmlBuilder(group, options) {\n    const node = new mathMLTree.MathNode(\"mi\", [makeText(group.text, group.mode, options)]);\n    const variant = getVariant(group, options) || \"italic\";\n\n    if (variant !== defaultVariant[node.type]) {\n      node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n  }\n\n});\ndefineFunctionBuilders({\n  type: \"textord\",\n\n  htmlBuilder(group, options) {\n    return buildCommon.makeOrd(group, options, \"textord\");\n  },\n\n  mathmlBuilder(group, options) {\n    const text = makeText(group.text, group.mode, options);\n    const variant = getVariant(group, options) || \"normal\";\n    let node;\n\n    if (group.mode === 'text') {\n      node = new mathMLTree.MathNode(\"mtext\", [text]);\n    } else if (/[0-9]/.test(group.text)) {\n      node = new mathMLTree.MathNode(\"mn\", [text]);\n    } else if (group.text === \"\\\\prime\") {\n      node = new mathMLTree.MathNode(\"mo\", [text]);\n    } else {\n      node = new mathMLTree.MathNode(\"mi\", [text]);\n    }\n\n    if (variant !== defaultVariant[node.type]) {\n      node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/symbolsSpacing.js\n\n\n\n // A map of CSS-based spacing functions to their CSS class.\n\nconst cssSpace = {\n  \"\\\\nobreak\": \"nobreak\",\n  \"\\\\allowbreak\": \"allowbreak\"\n}; // A lookup table to determine whether a spacing function/symbol should be\n// treated like a regular space character.  If a symbol or command is a key\n// in this table, then it should be a regular space character.  Furthermore,\n// the associated value may have a `className` specifying an extra CSS class\n// to add to the created `span`.\n\nconst regularSpace = {\n  \" \": {},\n  \"\\\\ \": {},\n  \"~\": {\n    className: \"nobreak\"\n  },\n  \"\\\\space\": {},\n  \"\\\\nobreakspace\": {\n    className: \"nobreak\"\n  }\n}; // ParseNode<\"spacing\"> created in Parser.js from the \"spacing\" symbol Groups in\n// src/symbols.js.\n\ndefineFunctionBuilders({\n  type: \"spacing\",\n\n  htmlBuilder(group, options) {\n    if (regularSpace.hasOwnProperty(group.text)) {\n      const className = regularSpace[group.text].className || \"\"; // Spaces are generated by adding an actual space. Each of these\n      // things has an entry in the symbols table, so these will be turned\n      // into appropriate outputs.\n\n      if (group.mode === \"text\") {\n        const ord = buildCommon.makeOrd(group, options, \"textord\");\n        ord.classes.push(className);\n        return ord;\n      } else {\n        return buildCommon.makeSpan([\"mspace\", className], [buildCommon.mathsym(group.text, group.mode, options)], options);\n      }\n    } else if (cssSpace.hasOwnProperty(group.text)) {\n      // Spaces based on just a CSS class.\n      return buildCommon.makeSpan([\"mspace\", cssSpace[group.text]], [], options);\n    } else {\n      throw new src_ParseError(\"Unknown type of space \\\"\" + group.text + \"\\\"\");\n    }\n  },\n\n  mathmlBuilder(group, options) {\n    let node;\n\n    if (regularSpace.hasOwnProperty(group.text)) {\n      node = new mathMLTree.MathNode(\"mtext\", [new mathMLTree.TextNode(\"\\u00a0\")]);\n    } else if (cssSpace.hasOwnProperty(group.text)) {\n      // CSS-based MathML spaces (\\nobreak, \\allowbreak) are ignored\n      return new mathMLTree.MathNode(\"mspace\");\n    } else {\n      throw new src_ParseError(\"Unknown type of space \\\"\" + group.text + \"\\\"\");\n    }\n\n    return node;\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/tag.js\n\n\n\n\nconst pad = () => {\n  const padNode = new mathMLTree.MathNode(\"mtd\", []);\n  padNode.setAttribute(\"width\", \"50%\");\n  return padNode;\n};\n\ndefineFunctionBuilders({\n  type: \"tag\",\n\n  mathmlBuilder(group, options) {\n    const table = new mathMLTree.MathNode(\"mtable\", [new mathMLTree.MathNode(\"mtr\", [pad(), new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.body, options)]), pad(), new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.tag, options)])])]);\n    table.setAttribute(\"width\", \"100%\");\n    return table; // TODO: Left-aligned tags.\n    // Currently, the group and options passed here do not contain\n    // enough info to set tag alignment. `leqno` is in Settings but it is\n    // not passed to Options. On the HTML side, leqno is\n    // set by a CSS class applied in buildTree.js. That would have worked\n    // in MathML if browsers supported <mlabeledtr>. Since they don't, we\n    // need to rewrite the way this function is called.\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/text.js\n\n\n\n // Non-mathy text, possibly in a font\n\nconst textFontFamilies = {\n  \"\\\\text\": undefined,\n  \"\\\\textrm\": \"textrm\",\n  \"\\\\textsf\": \"textsf\",\n  \"\\\\texttt\": \"texttt\",\n  \"\\\\textnormal\": \"textrm\"\n};\nconst textFontWeights = {\n  \"\\\\textbf\": \"textbf\",\n  \"\\\\textmd\": \"textmd\"\n};\nconst textFontShapes = {\n  \"\\\\textit\": \"textit\",\n  \"\\\\textup\": \"textup\"\n};\n\nconst optionsWithFont = (group, options) => {\n  const font = group.font; // Checks if the argument is a font family or a font style.\n\n  if (!font) {\n    return options;\n  } else if (textFontFamilies[font]) {\n    return options.withTextFontFamily(textFontFamilies[font]);\n  } else if (textFontWeights[font]) {\n    return options.withTextFontWeight(textFontWeights[font]);\n  } else if (font === \"\\\\emph\") {\n    return options.fontShape === \"textit\" ? options.withTextFontShape(\"textup\") : options.withTextFontShape(\"textit\");\n  }\n\n  return options.withTextFontShape(textFontShapes[font]);\n};\n\ndefineFunction({\n  type: \"text\",\n  names: [// Font families\n  \"\\\\text\", \"\\\\textrm\", \"\\\\textsf\", \"\\\\texttt\", \"\\\\textnormal\", // Font weights\n  \"\\\\textbf\", \"\\\\textmd\", // Font Shapes\n  \"\\\\textit\", \"\\\\textup\", \"\\\\emph\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    allowedInArgument: true,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    let {\n      parser,\n      funcName\n    } = _ref;\n    const body = args[0];\n    return {\n      type: \"text\",\n      mode: parser.mode,\n      body: ordargument(body),\n      font: funcName\n    };\n  },\n\n  htmlBuilder(group, options) {\n    const newOptions = optionsWithFont(group, options);\n    const inner = buildExpression(group.body, newOptions, true);\n    return buildCommon.makeSpan([\"mord\", \"text\"], inner, newOptions);\n  },\n\n  mathmlBuilder(group, options) {\n    const newOptions = optionsWithFont(group, options);\n    return buildExpressionRow(group.body, newOptions);\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/underline.js\n\n\n\n\n\ndefineFunction({\n  type: \"underline\",\n  names: [\"\\\\underline\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    let {\n      parser\n    } = _ref;\n    return {\n      type: \"underline\",\n      mode: parser.mode,\n      body: args[0]\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Underlines are handled in the TeXbook pg 443, Rule 10.\n    // Build the inner group.\n    const innerGroup = buildGroup(group.body, options); // Create the line to go below the body\n\n    const line = buildCommon.makeLineSpan(\"underline-line\", options); // Generate the vlist, with the appropriate kerns\n\n    const defaultRuleThickness = options.fontMetrics().defaultRuleThickness;\n    const vlist = buildCommon.makeVList({\n      positionType: \"top\",\n      positionData: innerGroup.height,\n      children: [{\n        type: \"kern\",\n        size: defaultRuleThickness\n      }, {\n        type: \"elem\",\n        elem: line\n      }, {\n        type: \"kern\",\n        size: 3 * defaultRuleThickness\n      }, {\n        type: \"elem\",\n        elem: innerGroup\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"underline\"], [vlist], options);\n  },\n\n  mathmlBuilder(group, options) {\n    const operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n    const node = new mathMLTree.MathNode(\"munder\", [buildMathML_buildGroup(group.body, options), operator]);\n    node.setAttribute(\"accentunder\", \"true\");\n    return node;\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/vcenter.js\n\n\n\n\n // \\vcenter:  Vertically center the argument group on the math axis.\n\ndefineFunction({\n  type: \"vcenter\",\n  names: [\"\\\\vcenter\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"original\"],\n    // In LaTeX, \\vcenter can act only on a box.\n    allowedInText: false\n  },\n\n  handler(_ref, args) {\n    let {\n      parser\n    } = _ref;\n    return {\n      type: \"vcenter\",\n      mode: parser.mode,\n      body: args[0]\n    };\n  },\n\n  htmlBuilder(group, options) {\n    const body = buildGroup(group.body, options);\n    const axisHeight = options.fontMetrics().axisHeight;\n    const dy = 0.5 * (body.height - axisHeight - (body.depth + axisHeight));\n    return buildCommon.makeVList({\n      positionType: \"shift\",\n      positionData: dy,\n      children: [{\n        type: \"elem\",\n        elem: body\n      }]\n    }, options);\n  },\n\n  mathmlBuilder(group, options) {\n    // There is no way to do this in MathML.\n    // Write a class as a breadcrumb in case some post-processor wants\n    // to perform a vcenter adjustment.\n    return new mathMLTree.MathNode(\"mpadded\", [buildMathML_buildGroup(group.body, options)], [\"vcenter\"]);\n  }\n\n});\n;// CONCATENATED MODULE: ./src/functions/verb.js\n\n\n\n\ndefineFunction({\n  type: \"verb\",\n  names: [\"\\\\verb\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n\n  handler(context, args, optArgs) {\n    // \\verb and \\verb* are dealt with directly in Parser.js.\n    // If we end up here, it's because of a failure to match the two delimiters\n    // in the regex in Lexer.js.  LaTeX raises the following error when \\verb is\n    // terminated by end of line (or file).\n    throw new src_ParseError(\"\\\\verb ended by end of line instead of matching delimiter\");\n  },\n\n  htmlBuilder(group, options) {\n    const text = makeVerb(group);\n    const body = []; // \\verb enters text mode and therefore is sized like \\textstyle\n\n    const newOptions = options.havingStyle(options.style.text());\n\n    for (let i = 0; i < text.length; i++) {\n      let c = text[i];\n\n      if (c === '~') {\n        c = '\\\\textasciitilde';\n      }\n\n      body.push(buildCommon.makeSymbol(c, \"Typewriter-Regular\", group.mode, newOptions, [\"mord\", \"texttt\"]));\n    }\n\n    return buildCommon.makeSpan([\"mord\", \"text\"].concat(newOptions.sizingClasses(options)), buildCommon.tryCombineChars(body), newOptions);\n  },\n\n  mathmlBuilder(group, options) {\n    const text = new mathMLTree.TextNode(makeVerb(group));\n    const node = new mathMLTree.MathNode(\"mtext\", [text]);\n    node.setAttribute(\"mathvariant\", \"monospace\");\n    return node;\n  }\n\n});\n/**\n * Converts verb group into body string.\n *\n * \\verb* replaces each space with an open box \\u2423\n * \\verb replaces each space with a no-break space \\xA0\n */\n\nconst makeVerb = group => group.body.replace(/ /g, group.star ? '\\u2423' : '\\xA0');\n;// CONCATENATED MODULE: ./src/functions.js\n/** Include this to ensure that all functions are defined. */\n\nconst functions = _functions;\n/* harmony default export */ var src_functions = (functions); // TODO(kevinb): have functions return an object and call defineFunction with\n// that object in this file instead of relying on side-effects.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./src/Lexer.js\n/**\n * The Lexer class handles tokenizing the input in various ways. Since our\n * parser expects us to be able to backtrack, the lexer allows lexing from any\n * given starting point.\n *\n * Its main exposed function is the `lex` function, which takes a position to\n * lex from and a type of token to lex. It defers to the appropriate `_innerLex`\n * function.\n *\n * The various `_innerLex` functions perform the actual lexing of different\n * kinds.\n */\n\n\n\n\n/* The following tokenRegex\n * - matches typical whitespace (but not NBSP etc.) using its first group\n * - does not match any control character \\x00-\\x1f except whitespace\n * - does not match a bare backslash\n * - matches any ASCII character except those just mentioned\n * - does not match the BMP private use area \\uE000-\\uF8FF\n * - does not match bare surrogate code units\n * - matches any BMP character except for those just described\n * - matches any valid Unicode surrogate pair\n * - matches a backslash followed by one or more whitespace characters\n * - matches a backslash followed by one or more letters then whitespace\n * - matches a backslash followed by any BMP character\n * Capturing groups:\n *   [1] regular whitespace\n *   [2] backslash followed by whitespace\n *   [3] anything else, which may include:\n *     [4] left character of \\verb*\n *     [5] left character of \\verb\n *     [6] backslash followed by word, excluding any trailing whitespace\n * Just because the Lexer matches something doesn't mean it's valid input:\n * If there is no matching function or symbol definition, the Parser will\n * still reject the input.\n */\nconst spaceRegexString = \"[ \\r\\n\\t]\";\nconst controlWordRegexString = \"\\\\\\\\[a-zA-Z@]+\";\nconst controlSymbolRegexString = \"\\\\\\\\[^\\uD800-\\uDFFF]\";\nconst controlWordWhitespaceRegexString = \"(\" + controlWordRegexString + \")\" + spaceRegexString + \"*\";\nconst controlSpaceRegexString = \"\\\\\\\\(\\n|[ \\r\\t]+\\n?)[ \\r\\t]*\";\nconst combiningDiacriticalMarkString = \"[\\u0300-\\u036f]\";\nconst combiningDiacriticalMarksEndRegex = new RegExp(combiningDiacriticalMarkString + \"+$\");\nconst tokenRegexString = \"(\" + spaceRegexString + \"+)|\" + ( // whitespace\ncontrolSpaceRegexString + \"|\") + // \\whitespace\n\"([!-\\\\[\\\\]-\\u2027\\u202A-\\uD7FF\\uF900-\\uFFFF]\" + ( // single codepoint\ncombiningDiacriticalMarkString + \"*\") + // ...plus accents\n\"|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]\" + ( // surrogate pair\ncombiningDiacriticalMarkString + \"*\") + // ...plus accents\n\"|\\\\\\\\verb\\\\*([^]).*?\\\\4\" + // \\verb*\n\"|\\\\\\\\verb([^*a-zA-Z]).*?\\\\5\" + ( // \\verb unstarred\n\"|\" + controlWordWhitespaceRegexString) + ( // \\macroName + spaces\n\"|\" + controlSymbolRegexString + \")\"); // \\\\, \\', etc.\n\n/** Main Lexer class */\n\nclass Lexer {\n  // Category codes. The lexer only supports comment characters (14) for now.\n  // MacroExpander additionally distinguishes active (13).\n  constructor(input, settings) {\n    this.input = void 0;\n    this.settings = void 0;\n    this.tokenRegex = void 0;\n    this.catcodes = void 0;\n    // Separate accents from characters\n    this.input = input;\n    this.settings = settings;\n    this.tokenRegex = new RegExp(tokenRegexString, 'g');\n    this.catcodes = {\n      \"%\": 14,\n      // comment character\n      \"~\": 13 // active character\n\n    };\n  }\n\n  setCatcode(char, code) {\n    this.catcodes[char] = code;\n  }\n  /**\n   * This function lexes a single token.\n   */\n\n\n  lex() {\n    const input = this.input;\n    const pos = this.tokenRegex.lastIndex;\n\n    if (pos === input.length) {\n      return new Token(\"EOF\", new SourceLocation(this, pos, pos));\n    }\n\n    const match = this.tokenRegex.exec(input);\n\n    if (match === null || match.index !== pos) {\n      throw new src_ParseError(\"Unexpected character: '\" + input[pos] + \"'\", new Token(input[pos], new SourceLocation(this, pos, pos + 1)));\n    }\n\n    const text = match[6] || match[3] || (match[2] ? \"\\\\ \" : \" \");\n\n    if (this.catcodes[text] === 14) {\n      // comment character\n      const nlIndex = input.indexOf('\\n', this.tokenRegex.lastIndex);\n\n      if (nlIndex === -1) {\n        this.tokenRegex.lastIndex = input.length; // EOF\n\n        this.settings.reportNonstrict(\"commentAtEnd\", \"% comment has no terminating newline; LaTeX would \" + \"fail because of commenting the end of math mode (e.g. $)\");\n      } else {\n        this.tokenRegex.lastIndex = nlIndex + 1;\n      }\n\n      return this.lex();\n    }\n\n    return new Token(text, new SourceLocation(this, pos, this.tokenRegex.lastIndex));\n  }\n\n}\n;// CONCATENATED MODULE: ./src/Namespace.js\n/**\n * A `Namespace` refers to a space of nameable things like macros or lengths,\n * which can be `set` either globally or local to a nested group, using an\n * undo stack similar to how TeX implements this functionality.\n * Performance-wise, `get` and local `set` take constant time, while global\n * `set` takes time proportional to the depth of group nesting.\n */\n\nclass Namespace {\n  /**\n   * Both arguments are optional.  The first argument is an object of\n   * built-in mappings which never change.  The second argument is an object\n   * of initial (global-level) mappings, which will constantly change\n   * according to any global/top-level `set`s done.\n   */\n  constructor(builtins, globalMacros) {\n    if (builtins === void 0) {\n      builtins = {};\n    }\n\n    if (globalMacros === void 0) {\n      globalMacros = {};\n    }\n\n    this.current = void 0;\n    this.builtins = void 0;\n    this.undefStack = void 0;\n    this.current = globalMacros;\n    this.builtins = builtins;\n    this.undefStack = [];\n  }\n  /**\n   * Start a new nested group, affecting future local `set`s.\n   */\n\n\n  beginGroup() {\n    this.undefStack.push({});\n  }\n  /**\n   * End current nested group, restoring values before the group began.\n   */\n\n\n  endGroup() {\n    if (this.undefStack.length === 0) {\n      throw new src_ParseError(\"Unbalanced namespace destruction: attempt \" + \"to pop global namespace; please report this as a bug\");\n    }\n\n    const undefs = this.undefStack.pop();\n\n    for (const undef in undefs) {\n      if (undefs.hasOwnProperty(undef)) {\n        if (undefs[undef] == null) {\n          delete this.current[undef];\n        } else {\n          this.current[undef] = undefs[undef];\n        }\n      }\n    }\n  }\n  /**\n   * Ends all currently nested groups (if any), restoring values before the\n   * groups began.  Useful in case of an error in the middle of parsing.\n   */\n\n\n  endGroups() {\n    while (this.undefStack.length > 0) {\n      this.endGroup();\n    }\n  }\n  /**\n   * Detect whether `name` has a definition.  Equivalent to\n   * `get(name) != null`.\n   */\n\n\n  has(name) {\n    return this.current.hasOwnProperty(name) || this.builtins.hasOwnProperty(name);\n  }\n  /**\n   * Get the current value of a name, or `undefined` if there is no value.\n   *\n   * Note: Do not use `if (namespace.get(...))` to detect whether a macro\n   * is defined, as the definition may be the empty string which evaluates\n   * to `false` in JavaScript.  Use `if (namespace.get(...) != null)` or\n   * `if (namespace.has(...))`.\n   */\n\n\n  get(name) {\n    if (this.current.hasOwnProperty(name)) {\n      return this.current[name];\n    } else {\n      return this.builtins[name];\n    }\n  }\n  /**\n   * Set the current value of a name, and optionally set it globally too.\n   * Local set() sets the current value and (when appropriate) adds an undo\n   * operation to the undo stack.  Global set() may change the undo\n   * operation at every level, so takes time linear in their number.\n   * A value of undefined means to delete existing definitions.\n   */\n\n\n  set(name, value, global) {\n    if (global === void 0) {\n      global = false;\n    }\n\n    if (global) {\n      // Global set is equivalent to setting in all groups.  Simulate this\n      // by destroying any undos currently scheduled for this name,\n      // and adding an undo with the *new* value (in case it later gets\n      // locally reset within this environment).\n      for (let i = 0; i < this.undefStack.length; i++) {\n        delete this.undefStack[i][name];\n      }\n\n      if (this.undefStack.length > 0) {\n        this.undefStack[this.undefStack.length - 1][name] = value;\n      }\n    } else {\n      // Undo this set at end of this group (possibly to `undefined`),\n      // unless an undo is already in place, in which case that older\n      // value is the correct one.\n      const top = this.undefStack[this.undefStack.length - 1];\n\n      if (top && !top.hasOwnProperty(name)) {\n        top[name] = this.current[name];\n      }\n    }\n\n    if (value == null) {\n      delete this.current[name];\n    } else {\n      this.current[name] = value;\n    }\n  }\n\n}\n;// CONCATENATED MODULE: ./src/macros.js\n/**\n * Predefined macros for KaTeX.\n * This can be used to define some commands in terms of others.\n */\n// Export global macros object from defineMacro\n\nconst macros = _macros;\n/* harmony default export */ var src_macros = (macros);\n\n\n\n\n\n //////////////////////////////////////////////////////////////////////\n// macro tools\n\ndefineMacro(\"\\\\noexpand\", function (context) {\n  // The expansion is the token itself; but that token is interpreted\n  // as if its meaning were ‘\\relax’ if it is a control sequence that\n  // would ordinarily be expanded by TeX’s expansion rules.\n  const t = context.popToken();\n\n  if (context.isExpandable(t.text)) {\n    t.noexpand = true;\n    t.treatAsRelax = true;\n  }\n\n  return {\n    tokens: [t],\n    numArgs: 0\n  };\n});\ndefineMacro(\"\\\\expandafter\", function (context) {\n  // TeX first reads the token that comes immediately after \\expandafter,\n  // without expanding it; let’s call this token t. Then TeX reads the\n  // token that comes after t (and possibly more tokens, if that token\n  // has an argument), replacing it by its expansion. Finally TeX puts\n  // t back in front of that expansion.\n  const t = context.popToken();\n  context.expandOnce(true); // expand only an expandable token\n\n  return {\n    tokens: [t],\n    numArgs: 0\n  };\n}); // LaTeX's \\@firstoftwo{#1}{#2} expands to #1, skipping #2\n// TeX source: \\long\\def\\@firstoftwo#1#2{#1}\n\ndefineMacro(\"\\\\@firstoftwo\", function (context) {\n  const args = context.consumeArgs(2);\n  return {\n    tokens: args[0],\n    numArgs: 0\n  };\n}); // LaTeX's \\@secondoftwo{#1}{#2} expands to #2, skipping #1\n// TeX source: \\long\\def\\@secondoftwo#1#2{#2}\n\ndefineMacro(\"\\\\@secondoftwo\", function (context) {\n  const args = context.consumeArgs(2);\n  return {\n    tokens: args[1],\n    numArgs: 0\n  };\n}); // LaTeX's \\@ifnextchar{#1}{#2}{#3} looks ahead to the next (unexpanded)\n// symbol that isn't a space, consuming any spaces but not consuming the\n// first nonspace character.  If that nonspace character matches #1, then\n// the macro expands to #2; otherwise, it expands to #3.\n\ndefineMacro(\"\\\\@ifnextchar\", function (context) {\n  const args = context.consumeArgs(3); // symbol, if, else\n\n  context.consumeSpaces();\n  const nextToken = context.future();\n\n  if (args[0].length === 1 && args[0][0].text === nextToken.text) {\n    return {\n      tokens: args[1],\n      numArgs: 0\n    };\n  } else {\n    return {\n      tokens: args[2],\n      numArgs: 0\n    };\n  }\n}); // LaTeX's \\@ifstar{#1}{#2} looks ahead to the next (unexpanded) symbol.\n// If it is `*`, then it consumes the symbol, and the macro expands to #1;\n// otherwise, the macro expands to #2 (without consuming the symbol).\n// TeX source: \\def\\@ifstar#1{\\@ifnextchar *{\\@firstoftwo{#1}}}\n\ndefineMacro(\"\\\\@ifstar\", \"\\\\@ifnextchar *{\\\\@firstoftwo{#1}}\"); // LaTeX's \\TextOrMath{#1}{#2} expands to #1 in text mode, #2 in math mode\n\ndefineMacro(\"\\\\TextOrMath\", function (context) {\n  const args = context.consumeArgs(2);\n\n  if (context.mode === 'text') {\n    return {\n      tokens: args[0],\n      numArgs: 0\n    };\n  } else {\n    return {\n      tokens: args[1],\n      numArgs: 0\n    };\n  }\n}); // Lookup table for parsing numbers in base 8 through 16\n\nconst digitToNumber = {\n  \"0\": 0,\n  \"1\": 1,\n  \"2\": 2,\n  \"3\": 3,\n  \"4\": 4,\n  \"5\": 5,\n  \"6\": 6,\n  \"7\": 7,\n  \"8\": 8,\n  \"9\": 9,\n  \"a\": 10,\n  \"A\": 10,\n  \"b\": 11,\n  \"B\": 11,\n  \"c\": 12,\n  \"C\": 12,\n  \"d\": 13,\n  \"D\": 13,\n  \"e\": 14,\n  \"E\": 14,\n  \"f\": 15,\n  \"F\": 15\n}; // TeX \\char makes a literal character (catcode 12) using the following forms:\n// (see The TeXBook, p. 43)\n//   \\char123  -- decimal\n//   \\char'123 -- octal\n//   \\char\"123 -- hex\n//   \\char`x   -- character that can be written (i.e. isn't active)\n//   \\char`\\x  -- character that cannot be written (e.g. %)\n// These all refer to characters from the font, so we turn them into special\n// calls to a function \\@char dealt with in the Parser.\n\ndefineMacro(\"\\\\char\", function (context) {\n  let token = context.popToken();\n  let base;\n  let number = '';\n\n  if (token.text === \"'\") {\n    base = 8;\n    token = context.popToken();\n  } else if (token.text === '\"') {\n    base = 16;\n    token = context.popToken();\n  } else if (token.text === \"`\") {\n    token = context.popToken();\n\n    if (token.text[0] === \"\\\\\") {\n      number = token.text.charCodeAt(1);\n    } else if (token.text === \"EOF\") {\n      throw new src_ParseError(\"\\\\char` missing argument\");\n    } else {\n      number = token.text.charCodeAt(0);\n    }\n  } else {\n    base = 10;\n  }\n\n  if (base) {\n    // Parse a number in the given base, starting with first `token`.\n    number = digitToNumber[token.text];\n\n    if (number == null || number >= base) {\n      throw new src_ParseError(\"Invalid base-\" + base + \" digit \" + token.text);\n    }\n\n    let digit;\n\n    while ((digit = digitToNumber[context.future().text]) != null && digit < base) {\n      number *= base;\n      number += digit;\n      context.popToken();\n    }\n  }\n\n  return \"\\\\@char{\" + number + \"}\";\n}); // \\newcommand{\\macro}[args]{definition}\n// \\renewcommand{\\macro}[args]{definition}\n// TODO: Optional arguments: \\newcommand{\\macro}[args][default]{definition}\n\nconst newcommand = (context, existsOK, nonexistsOK, skipIfExists) => {\n  let arg = context.consumeArg().tokens;\n\n  if (arg.length !== 1) {\n    throw new src_ParseError(\"\\\\newcommand's first argument must be a macro name\");\n  }\n\n  const name = arg[0].text;\n  const exists = context.isDefined(name);\n\n  if (exists && !existsOK) {\n    throw new src_ParseError(\"\\\\newcommand{\" + name + \"} attempting to redefine \" + (name + \"; use \\\\renewcommand\"));\n  }\n\n  if (!exists && !nonexistsOK) {\n    throw new src_ParseError(\"\\\\renewcommand{\" + name + \"} when command \" + name + \" \" + \"does not yet exist; use \\\\newcommand\");\n  }\n\n  let numArgs = 0;\n  arg = context.consumeArg().tokens;\n\n  if (arg.length === 1 && arg[0].text === \"[\") {\n    let argText = '';\n    let token = context.expandNextToken();\n\n    while (token.text !== \"]\" && token.text !== \"EOF\") {\n      // TODO: Should properly expand arg, e.g., ignore {}s\n      argText += token.text;\n      token = context.expandNextToken();\n    }\n\n    if (!argText.match(/^\\s*[0-9]+\\s*$/)) {\n      throw new src_ParseError(\"Invalid number of arguments: \" + argText);\n    }\n\n    numArgs = parseInt(argText);\n    arg = context.consumeArg().tokens;\n  }\n\n  if (!(exists && skipIfExists)) {\n    // Final arg is the expansion of the macro\n    context.macros.set(name, {\n      tokens: arg,\n      numArgs\n    });\n  }\n\n  return '';\n};\n\ndefineMacro(\"\\\\newcommand\", context => newcommand(context, false, true, false));\ndefineMacro(\"\\\\renewcommand\", context => newcommand(context, true, false, false));\ndefineMacro(\"\\\\providecommand\", context => newcommand(context, true, true, true)); // terminal (console) tools\n\ndefineMacro(\"\\\\message\", context => {\n  const arg = context.consumeArgs(1)[0]; // eslint-disable-next-line no-console\n\n  console.log(arg.reverse().map(token => token.text).join(\"\"));\n  return '';\n});\ndefineMacro(\"\\\\errmessage\", context => {\n  const arg = context.consumeArgs(1)[0]; // eslint-disable-next-line no-console\n\n  console.error(arg.reverse().map(token => token.text).join(\"\"));\n  return '';\n});\ndefineMacro(\"\\\\show\", context => {\n  const tok = context.popToken();\n  const name = tok.text; // eslint-disable-next-line no-console\n\n  console.log(tok, context.macros.get(name), src_functions[name], src_symbols.math[name], src_symbols.text[name]);\n  return '';\n}); //////////////////////////////////////////////////////////////////////\n// Grouping\n// \\let\\bgroup={ \\let\\egroup=}\n\ndefineMacro(\"\\\\bgroup\", \"{\");\ndefineMacro(\"\\\\egroup\", \"}\"); // Symbols from latex.ltx:\n// \\def~{\\nobreakspace{}}\n// \\def\\lq{`}\n// \\def\\rq{'}\n// \\def \\aa {\\r a}\n// \\def \\AA {\\r A}\n\ndefineMacro(\"~\", \"\\\\nobreakspace\");\ndefineMacro(\"\\\\lq\", \"`\");\ndefineMacro(\"\\\\rq\", \"'\");\ndefineMacro(\"\\\\aa\", \"\\\\r a\");\ndefineMacro(\"\\\\AA\", \"\\\\r A\"); // Copyright (C) and registered (R) symbols. Use raw symbol in MathML.\n// \\DeclareTextCommandDefault{\\textcopyright}{\\textcircled{c}}\n// \\DeclareTextCommandDefault{\\textregistered}{\\textcircled{%\n//      \\check@mathfonts\\fontsize\\sf@size\\z@\\math@fontsfalse\\selectfont R}}\n// \\DeclareRobustCommand{\\copyright}{%\n//    \\ifmmode{\\nfss@text{\\textcopyright}}\\else\\textcopyright\\fi}\n\ndefineMacro(\"\\\\textcopyright\", \"\\\\html@mathml{\\\\textcircled{c}}{\\\\char`©}\");\ndefineMacro(\"\\\\copyright\", \"\\\\TextOrMath{\\\\textcopyright}{\\\\text{\\\\textcopyright}}\");\ndefineMacro(\"\\\\textregistered\", \"\\\\html@mathml{\\\\textcircled{\\\\scriptsize R}}{\\\\char`®}\"); // Characters omitted from Unicode range 1D400–1D7FF\n\ndefineMacro(\"\\u212C\", \"\\\\mathscr{B}\"); // script\n\ndefineMacro(\"\\u2130\", \"\\\\mathscr{E}\");\ndefineMacro(\"\\u2131\", \"\\\\mathscr{F}\");\ndefineMacro(\"\\u210B\", \"\\\\mathscr{H}\");\ndefineMacro(\"\\u2110\", \"\\\\mathscr{I}\");\ndefineMacro(\"\\u2112\", \"\\\\mathscr{L}\");\ndefineMacro(\"\\u2133\", \"\\\\mathscr{M}\");\ndefineMacro(\"\\u211B\", \"\\\\mathscr{R}\");\ndefineMacro(\"\\u212D\", \"\\\\mathfrak{C}\"); // Fraktur\n\ndefineMacro(\"\\u210C\", \"\\\\mathfrak{H}\");\ndefineMacro(\"\\u2128\", \"\\\\mathfrak{Z}\"); // Define \\Bbbk with a macro that works in both HTML and MathML.\n\ndefineMacro(\"\\\\Bbbk\", \"\\\\Bbb{k}\"); // Unicode middle dot\n// The KaTeX fonts do not contain U+00B7. Instead, \\cdotp displays\n// the dot at U+22C5 and gives it punct spacing.\n\ndefineMacro(\"\\u00b7\", \"\\\\cdotp\"); // \\llap and \\rlap render their contents in text mode\n\ndefineMacro(\"\\\\llap\", \"\\\\mathllap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\rlap\", \"\\\\mathrlap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\clap\", \"\\\\mathclap{\\\\textrm{#1}}\"); // \\mathstrut from the TeXbook, p 360\n\ndefineMacro(\"\\\\mathstrut\", \"\\\\vphantom{(}\"); // \\underbar from TeXbook p 353\n\ndefineMacro(\"\\\\underbar\", \"\\\\underline{\\\\text{#1}}\"); // \\not is defined by base/fontmath.ltx via\n// \\DeclareMathSymbol{\\not}{\\mathrel}{symbols}{\"36}\n// It's thus treated like a \\mathrel, but defined by a symbol that has zero\n// width but extends to the right.  We use \\rlap to get that spacing.\n// For MathML we write U+0338 here. buildMathML.js will then do the overlay.\n\ndefineMacro(\"\\\\not\", '\\\\html@mathml{\\\\mathrel{\\\\mathrlap\\\\@not}}{\\\\char\"338}'); // Negated symbols from base/fontmath.ltx:\n// \\def\\neq{\\not=} \\let\\ne=\\neq\n// \\DeclareRobustCommand\n//   \\notin{\\mathrel{\\m@th\\mathpalette\\c@ncel\\in}}\n// \\def\\c@ncel#1#2{\\m@th\\ooalign{$\\hfil#1\\mkern1mu/\\hfil$\\crcr$#1#2$}}\n\ndefineMacro(\"\\\\neq\", \"\\\\html@mathml{\\\\mathrel{\\\\not=}}{\\\\mathrel{\\\\char`≠}}\");\ndefineMacro(\"\\\\ne\", \"\\\\neq\");\ndefineMacro(\"\\u2260\", \"\\\\neq\");\ndefineMacro(\"\\\\notin\", \"\\\\html@mathml{\\\\mathrel{{\\\\in}\\\\mathllap{/\\\\mskip1mu}}}\" + \"{\\\\mathrel{\\\\char`∉}}\");\ndefineMacro(\"\\u2209\", \"\\\\notin\"); // Unicode stacked relations\n\ndefineMacro(\"\\u2258\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\kern{-1em}\\\\raisebox{0.4em}{$\\\\scriptsize\\\\frown$}}\" + \"}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u2259\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\wedge}{=}}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u225A\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\vee}{=}}{\\\\mathrel{\\\\char`\\u225A}}\");\ndefineMacro(\"\\u225B\", \"\\\\html@mathml{\\\\stackrel{\\\\scriptsize\\\\star}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225B}}\");\ndefineMacro(\"\\u225D\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{def}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225D}}\");\ndefineMacro(\"\\u225E\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{m}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225E}}\");\ndefineMacro(\"\\u225F\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny?}{=}}{\\\\mathrel{\\\\char`\\u225F}}\"); // Misc Unicode\n\ndefineMacro(\"\\u27C2\", \"\\\\perp\");\ndefineMacro(\"\\u203C\", \"\\\\mathclose{!\\\\mkern-0.8mu!}\");\ndefineMacro(\"\\u220C\", \"\\\\notni\");\ndefineMacro(\"\\u231C\", \"\\\\ulcorner\");\ndefineMacro(\"\\u231D\", \"\\\\urcorner\");\ndefineMacro(\"\\u231E\", \"\\\\llcorner\");\ndefineMacro(\"\\u231F\", \"\\\\lrcorner\");\ndefineMacro(\"\\u00A9\", \"\\\\copyright\");\ndefineMacro(\"\\u00AE\", \"\\\\textregistered\");\ndefineMacro(\"\\uFE0F\", \"\\\\textregistered\"); // The KaTeX fonts have corners at codepoints that don't match Unicode.\n// For MathML purposes, use the Unicode code point.\n\ndefineMacro(\"\\\\ulcorner\", \"\\\\html@mathml{\\\\@ulcorner}{\\\\mathop{\\\\char\\\"231c}}\");\ndefineMacro(\"\\\\urcorner\", \"\\\\html@mathml{\\\\@urcorner}{\\\\mathop{\\\\char\\\"231d}}\");\ndefineMacro(\"\\\\llcorner\", \"\\\\html@mathml{\\\\@llcorner}{\\\\mathop{\\\\char\\\"231e}}\");\ndefineMacro(\"\\\\lrcorner\", \"\\\\html@mathml{\\\\@lrcorner}{\\\\mathop{\\\\char\\\"231f}}\"); //////////////////////////////////////////////////////////////////////\n// LaTeX_2ε\n// \\vdots{\\vbox{\\baselineskip4\\p@  \\lineskiplimit\\z@\n// \\kern6\\p@\\hbox{.}\\hbox{.}\\hbox{.}}}\n// We'll call \\varvdots, which gets a glyph from symbols.js.\n// The zero-width rule gets us an equivalent to the vertical 6pt kern.\n\ndefineMacro(\"\\\\vdots\", \"{\\\\varvdots\\\\rule{0pt}{15pt}}\");\ndefineMacro(\"\\u22ee\", \"\\\\vdots\"); //////////////////////////////////////////////////////////////////////\n// amsmath.sty\n// http://mirrors.concertpass.com/tex-archive/macros/latex/required/amsmath/amsmath.pdf\n// Italic Greek capital letters.  AMS defines these with \\DeclareMathSymbol,\n// but they are equivalent to \\mathit{\\Letter}.\n\ndefineMacro(\"\\\\varGamma\", \"\\\\mathit{\\\\Gamma}\");\ndefineMacro(\"\\\\varDelta\", \"\\\\mathit{\\\\Delta}\");\ndefineMacro(\"\\\\varTheta\", \"\\\\mathit{\\\\Theta}\");\ndefineMacro(\"\\\\varLambda\", \"\\\\mathit{\\\\Lambda}\");\ndefineMacro(\"\\\\varXi\", \"\\\\mathit{\\\\Xi}\");\ndefineMacro(\"\\\\varPi\", \"\\\\mathit{\\\\Pi}\");\ndefineMacro(\"\\\\varSigma\", \"\\\\mathit{\\\\Sigma}\");\ndefineMacro(\"\\\\varUpsilon\", \"\\\\mathit{\\\\Upsilon}\");\ndefineMacro(\"\\\\varPhi\", \"\\\\mathit{\\\\Phi}\");\ndefineMacro(\"\\\\varPsi\", \"\\\\mathit{\\\\Psi}\");\ndefineMacro(\"\\\\varOmega\", \"\\\\mathit{\\\\Omega}\"); //\\newcommand{\\substack}[1]{\\subarray{c}#1\\endsubarray}\n\ndefineMacro(\"\\\\substack\", \"\\\\begin{subarray}{c}#1\\\\end{subarray}\"); // \\renewcommand{\\colon}{\\nobreak\\mskip2mu\\mathpunct{}\\nonscript\n// \\mkern-\\thinmuskip{:}\\mskip6muplus1mu\\relax}\n\ndefineMacro(\"\\\\colon\", \"\\\\nobreak\\\\mskip2mu\\\\mathpunct{}\" + \"\\\\mathchoice{\\\\mkern-3mu}{\\\\mkern-3mu}{}{}{:}\\\\mskip6mu\\\\relax\"); // \\newcommand{\\boxed}[1]{\\fbox{\\m@th$\\displaystyle#1$}}\n\ndefineMacro(\"\\\\boxed\", \"\\\\fbox{$\\\\displaystyle{#1}$}\"); // \\def\\iff{\\DOTSB\\;\\Longleftrightarrow\\;}\n// \\def\\implies{\\DOTSB\\;\\Longrightarrow\\;}\n// \\def\\impliedby{\\DOTSB\\;\\Longleftarrow\\;}\n\ndefineMacro(\"\\\\iff\", \"\\\\DOTSB\\\\;\\\\Longleftrightarrow\\\\;\");\ndefineMacro(\"\\\\implies\", \"\\\\DOTSB\\\\;\\\\Longrightarrow\\\\;\");\ndefineMacro(\"\\\\impliedby\", \"\\\\DOTSB\\\\;\\\\Longleftarrow\\\\;\"); // \\def\\dddot#1{{\\mathop{#1}\\limits^{\\vbox to-1.4\\ex@{\\kern-\\tw@\\ex@\n//  \\hbox{\\normalfont ...}\\vss}}}}\n// We use \\overset which avoids the vertical shift of \\mathop.\n\ndefineMacro(\"\\\\dddot\", \"{\\\\overset{\\\\raisebox{-0.1ex}{\\\\normalsize ...}}{#1}}\");\ndefineMacro(\"\\\\ddddot\", \"{\\\\overset{\\\\raisebox{-0.1ex}{\\\\normalsize ....}}{#1}}\"); // AMSMath's automatic \\dots, based on \\mdots@@ macro.\n\nconst dotsByToken = {\n  ',': '\\\\dotsc',\n  '\\\\not': '\\\\dotsb',\n  // \\keybin@ checks for the following:\n  '+': '\\\\dotsb',\n  '=': '\\\\dotsb',\n  '<': '\\\\dotsb',\n  '>': '\\\\dotsb',\n  '-': '\\\\dotsb',\n  '*': '\\\\dotsb',\n  ':': '\\\\dotsb',\n  // Symbols whose definition starts with \\DOTSB:\n  '\\\\DOTSB': '\\\\dotsb',\n  '\\\\coprod': '\\\\dotsb',\n  '\\\\bigvee': '\\\\dotsb',\n  '\\\\bigwedge': '\\\\dotsb',\n  '\\\\biguplus': '\\\\dotsb',\n  '\\\\bigcap': '\\\\dotsb',\n  '\\\\bigcup': '\\\\dotsb',\n  '\\\\prod': '\\\\dotsb',\n  '\\\\sum': '\\\\dotsb',\n  '\\\\bigotimes': '\\\\dotsb',\n  '\\\\bigoplus': '\\\\dotsb',\n  '\\\\bigodot': '\\\\dotsb',\n  '\\\\bigsqcup': '\\\\dotsb',\n  '\\\\And': '\\\\dotsb',\n  '\\\\longrightarrow': '\\\\dotsb',\n  '\\\\Longrightarrow': '\\\\dotsb',\n  '\\\\longleftarrow': '\\\\dotsb',\n  '\\\\Longleftarrow': '\\\\dotsb',\n  '\\\\longleftrightarrow': '\\\\dotsb',\n  '\\\\Longleftrightarrow': '\\\\dotsb',\n  '\\\\mapsto': '\\\\dotsb',\n  '\\\\longmapsto': '\\\\dotsb',\n  '\\\\hookrightarrow': '\\\\dotsb',\n  '\\\\doteq': '\\\\dotsb',\n  // Symbols whose definition starts with \\mathbin:\n  '\\\\mathbin': '\\\\dotsb',\n  // Symbols whose definition starts with \\mathrel:\n  '\\\\mathrel': '\\\\dotsb',\n  '\\\\relbar': '\\\\dotsb',\n  '\\\\Relbar': '\\\\dotsb',\n  '\\\\xrightarrow': '\\\\dotsb',\n  '\\\\xleftarrow': '\\\\dotsb',\n  // Symbols whose definition starts with \\DOTSI:\n  '\\\\DOTSI': '\\\\dotsi',\n  '\\\\int': '\\\\dotsi',\n  '\\\\oint': '\\\\dotsi',\n  '\\\\iint': '\\\\dotsi',\n  '\\\\iiint': '\\\\dotsi',\n  '\\\\iiiint': '\\\\dotsi',\n  '\\\\idotsint': '\\\\dotsi',\n  // Symbols whose definition starts with \\DOTSX:\n  '\\\\DOTSX': '\\\\dotsx'\n};\ndefineMacro(\"\\\\dots\", function (context) {\n  // TODO: If used in text mode, should expand to \\textellipsis.\n  // However, in KaTeX, \\textellipsis and \\ldots behave the same\n  // (in text mode), and it's unlikely we'd see any of the math commands\n  // that affect the behavior of \\dots when in text mode.  So fine for now\n  // (until we support \\ifmmode ... \\else ... \\fi).\n  let thedots = '\\\\dotso';\n  const next = context.expandAfterFuture().text;\n\n  if (next in dotsByToken) {\n    thedots = dotsByToken[next];\n  } else if (next.slice(0, 4) === '\\\\not') {\n    thedots = '\\\\dotsb';\n  } else if (next in src_symbols.math) {\n    if (utils.contains(['bin', 'rel'], src_symbols.math[next].group)) {\n      thedots = '\\\\dotsb';\n    }\n  }\n\n  return thedots;\n});\nconst spaceAfterDots = {\n  // \\rightdelim@ checks for the following:\n  ')': true,\n  ']': true,\n  '\\\\rbrack': true,\n  '\\\\}': true,\n  '\\\\rbrace': true,\n  '\\\\rangle': true,\n  '\\\\rceil': true,\n  '\\\\rfloor': true,\n  '\\\\rgroup': true,\n  '\\\\rmoustache': true,\n  '\\\\right': true,\n  '\\\\bigr': true,\n  '\\\\biggr': true,\n  '\\\\Bigr': true,\n  '\\\\Biggr': true,\n  // \\extra@ also tests for the following:\n  '$': true,\n  // \\extrap@ checks for the following:\n  ';': true,\n  '.': true,\n  ',': true\n};\ndefineMacro(\"\\\\dotso\", function (context) {\n  const next = context.future().text;\n\n  if (next in spaceAfterDots) {\n    return \"\\\\ldots\\\\,\";\n  } else {\n    return \"\\\\ldots\";\n  }\n});\ndefineMacro(\"\\\\dotsc\", function (context) {\n  const next = context.future().text; // \\dotsc uses \\extra@ but not \\extrap@, instead specially checking for\n  // ';' and '.', but doesn't check for ','.\n\n  if (next in spaceAfterDots && next !== ',') {\n    return \"\\\\ldots\\\\,\";\n  } else {\n    return \"\\\\ldots\";\n  }\n});\ndefineMacro(\"\\\\cdots\", function (context) {\n  const next = context.future().text;\n\n  if (next in spaceAfterDots) {\n    return \"\\\\@cdots\\\\,\";\n  } else {\n    return \"\\\\@cdots\";\n  }\n});\ndefineMacro(\"\\\\dotsb\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsm\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsi\", \"\\\\!\\\\cdots\"); // amsmath doesn't actually define \\dotsx, but \\dots followed by a macro\n// starting with \\DOTSX implies \\dotso, and then \\extra@ detects this case\n// and forces the added `\\,`.\n\ndefineMacro(\"\\\\dotsx\", \"\\\\ldots\\\\,\"); // \\let\\DOTSI\\relax\n// \\let\\DOTSB\\relax\n// \\let\\DOTSX\\relax\n\ndefineMacro(\"\\\\DOTSI\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSB\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSX\", \"\\\\relax\"); // Spacing, based on amsmath.sty's override of LaTeX defaults\n// \\DeclareRobustCommand{\\tmspace}[3]{%\n//   \\ifmmode\\mskip#1#2\\else\\kern#1#3\\fi\\relax}\n\ndefineMacro(\"\\\\tmspace\", \"\\\\TextOrMath{\\\\kern#1#3}{\\\\mskip#1#2}\\\\relax\"); // \\renewcommand{\\,}{\\tmspace+\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\n\ndefineMacro(\"\\\\,\", \"\\\\tmspace+{3mu}{.1667em}\"); // \\let\\thinspace\\,\n\ndefineMacro(\"\\\\thinspace\", \"\\\\,\"); // \\def\\>{\\mskip\\medmuskip}\n// \\renewcommand{\\:}{\\tmspace+\\medmuskip{.2222em}}\n// TODO: \\> and math mode of \\: should use \\medmuskip = 4mu plus 2mu minus 4mu\n\ndefineMacro(\"\\\\>\", \"\\\\mskip{4mu}\");\ndefineMacro(\"\\\\:\", \"\\\\tmspace+{4mu}{.2222em}\"); // \\let\\medspace\\:\n\ndefineMacro(\"\\\\medspace\", \"\\\\:\"); // \\renewcommand{\\;}{\\tmspace+\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip = 5mu plus 5mu\n\ndefineMacro(\"\\\\;\", \"\\\\tmspace+{5mu}{.2777em}\"); // \\let\\thickspace\\;\n\ndefineMacro(\"\\\\thickspace\", \"\\\\;\"); // \\renewcommand{\\!}{\\tmspace-\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\n\ndefineMacro(\"\\\\!\", \"\\\\tmspace-{3mu}{.1667em}\"); // \\let\\negthinspace\\!\n\ndefineMacro(\"\\\\negthinspace\", \"\\\\!\"); // \\newcommand{\\negmedspace}{\\tmspace-\\medmuskip{.2222em}}\n// TODO: math mode should use \\medmuskip\n\ndefineMacro(\"\\\\negmedspace\", \"\\\\tmspace-{4mu}{.2222em}\"); // \\newcommand{\\negthickspace}{\\tmspace-\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip\n\ndefineMacro(\"\\\\negthickspace\", \"\\\\tmspace-{5mu}{.277em}\"); // \\def\\enspace{\\kern.5em }\n\ndefineMacro(\"\\\\enspace\", \"\\\\kern.5em \"); // \\def\\enskip{\\hskip.5em\\relax}\n\ndefineMacro(\"\\\\enskip\", \"\\\\hskip.5em\\\\relax\"); // \\def\\quad{\\hskip1em\\relax}\n\ndefineMacro(\"\\\\quad\", \"\\\\hskip1em\\\\relax\"); // \\def\\qquad{\\hskip2em\\relax}\n\ndefineMacro(\"\\\\qquad\", \"\\\\hskip2em\\\\relax\"); // \\tag@in@display form of \\tag\n\ndefineMacro(\"\\\\tag\", \"\\\\@ifstar\\\\tag@literal\\\\tag@paren\");\ndefineMacro(\"\\\\tag@paren\", \"\\\\tag@literal{({#1})}\");\ndefineMacro(\"\\\\tag@literal\", context => {\n  if (context.macros.get(\"\\\\df@tag\")) {\n    throw new src_ParseError(\"Multiple \\\\tag\");\n  }\n\n  return \"\\\\gdef\\\\df@tag{\\\\text{#1}}\";\n}); // \\renewcommand{\\bmod}{\\nonscript\\mskip-\\medmuskip\\mkern5mu\\mathbin\n//   {\\operator@font mod}\\penalty900\n//   \\mkern5mu\\nonscript\\mskip-\\medmuskip}\n// \\newcommand{\\pod}[1]{\\allowbreak\n//   \\if@display\\mkern18mu\\else\\mkern8mu\\fi(#1)}\n// \\renewcommand{\\pmod}[1]{\\pod{{\\operator@font mod}\\mkern6mu#1}}\n// \\newcommand{\\mod}[1]{\\allowbreak\\if@display\\mkern18mu\n//   \\else\\mkern12mu\\fi{\\operator@font mod}\\,\\,#1}\n// TODO: math mode should use \\medmuskip = 4mu plus 2mu minus 4mu\n\ndefineMacro(\"\\\\bmod\", \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\" + \"\\\\mathbin{\\\\rm mod}\" + \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\");\ndefineMacro(\"\\\\pod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern8mu}{\\\\mkern8mu}{\\\\mkern8mu}(#1)\");\ndefineMacro(\"\\\\pmod\", \"\\\\pod{{\\\\rm mod}\\\\mkern6mu#1}\");\ndefineMacro(\"\\\\mod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern12mu}{\\\\mkern12mu}{\\\\mkern12mu}\" + \"{\\\\rm mod}\\\\,\\\\,#1\"); //////////////////////////////////////////////////////////////////////\n// LaTeX source2e\n// \\expandafter\\let\\expandafter\\@normalcr\n//     \\csname\\expandafter\\@gobble\\string\\\\ \\endcsname\n// \\DeclareRobustCommand\\newline{\\@normalcr\\relax}\n\ndefineMacro(\"\\\\newline\", \"\\\\\\\\\\\\relax\"); // \\def\\TeX{T\\kern-.1667em\\lower.5ex\\hbox{E}\\kern-.125emX\\@}\n// TODO: Doesn't normally work in math mode because \\@ fails.  KaTeX doesn't\n// support \\@ yet, so that's omitted, and we add \\text so that the result\n// doesn't look funny in math mode.\n\ndefineMacro(\"\\\\TeX\", \"\\\\textrm{\\\\html@mathml{\" + \"T\\\\kern-.1667em\\\\raisebox{-.5ex}{E}\\\\kern-.125emX\" + \"}{TeX}}\"); // \\DeclareRobustCommand{\\LaTeX}{L\\kern-.36em%\n//         {\\sbox\\z@ T%\n//          \\vbox to\\ht\\z@{\\hbox{\\check@mathfonts\n//                               \\fontsize\\sf@size\\z@\n//                               \\math@fontsfalse\\selectfont\n//                               A}%\n//                         \\vss}%\n//         }%\n//         \\kern-.15em%\n//         \\TeX}\n// This code aligns the top of the A with the T (from the perspective of TeX's\n// boxes, though visually the A appears to extend above slightly).\n// We compute the corresponding \\raisebox when A is rendered in \\normalsize\n// \\scriptstyle, which has a scale factor of 0.7 (see Options.js).\n\nconst latexRaiseA = makeEm(fontMetricsData['Main-Regular'][\"T\".charCodeAt(0)][1] - 0.7 * fontMetricsData['Main-Regular'][\"A\".charCodeAt(0)][1]);\ndefineMacro(\"\\\\LaTeX\", \"\\\\textrm{\\\\html@mathml{\" + (\"L\\\\kern-.36em\\\\raisebox{\" + latexRaiseA + \"}{\\\\scriptstyle A}\") + \"\\\\kern-.15em\\\\TeX}{LaTeX}}\"); // New KaTeX logo based on tweaking LaTeX logo\n\ndefineMacro(\"\\\\KaTeX\", \"\\\\textrm{\\\\html@mathml{\" + (\"K\\\\kern-.17em\\\\raisebox{\" + latexRaiseA + \"}{\\\\scriptstyle A}\") + \"\\\\kern-.15em\\\\TeX}{KaTeX}}\"); // \\DeclareRobustCommand\\hspace{\\@ifstar\\@hspacer\\@hspace}\n// \\def\\@hspace#1{\\hskip  #1\\relax}\n// \\def\\@hspacer#1{\\vrule \\@width\\z@\\nobreak\n//                 \\hskip #1\\hskip \\z@skip}\n\ndefineMacro(\"\\\\hspace\", \"\\\\@ifstar\\\\@hspacer\\\\@hspace\");\ndefineMacro(\"\\\\@hspace\", \"\\\\hskip #1\\\\relax\");\ndefineMacro(\"\\\\@hspacer\", \"\\\\rule{0pt}{0pt}\\\\hskip #1\\\\relax\"); //////////////////////////////////////////////////////////////////////\n// mathtools.sty\n//\\providecommand\\ordinarycolon{:}\n\ndefineMacro(\"\\\\ordinarycolon\", \":\"); //\\def\\vcentcolon{\\mathrel{\\mathop\\ordinarycolon}}\n//TODO(edemaine): Not yet centered. Fix via \\raisebox or #726\n\ndefineMacro(\"\\\\vcentcolon\", \"\\\\mathrel{\\\\mathop\\\\ordinarycolon}\"); // \\providecommand*\\dblcolon{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}\n\ndefineMacro(\"\\\\dblcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-.9mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2237}}\"); // \\providecommand*\\coloneqq{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}\n\ndefineMacro(\"\\\\coloneqq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}=}}\" + \"{\\\\mathop{\\\\char\\\"2254}}\"); // ≔\n// \\providecommand*\\Coloneqq{\\dblcolon\\mathrel{\\mkern-1.2mu}=}\n\ndefineMacro(\"\\\\Coloneqq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}=}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"3d}}\"); // \\providecommand*\\coloneq{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\n\ndefineMacro(\"\\\\coloneq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"2212}}\"); // \\providecommand*\\Coloneq{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\n\ndefineMacro(\"\\\\Coloneq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"2212}}\"); // \\providecommand*\\eqqcolon{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}\n\ndefineMacro(\"\\\\eqqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2255}}\"); // ≕\n// \\providecommand*\\Eqqcolon{=\\mathrel{\\mkern-1.2mu}\\dblcolon}\n\ndefineMacro(\"\\\\Eqqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}}\" + \"{\\\\mathop{\\\\char\\\"3d\\\\char\\\"2237}}\"); // \\providecommand*\\eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}\n\ndefineMacro(\"\\\\eqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2239}}\"); // \\providecommand*\\Eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}\n\ndefineMacro(\"\\\\Eqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}}\" + \"{\\\\mathop{\\\\char\\\"2212\\\\char\\\"2237}}\"); // \\providecommand*\\colonapprox{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}\n\ndefineMacro(\"\\\\colonapprox\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"2248}}\"); // \\providecommand*\\Colonapprox{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}\n\ndefineMacro(\"\\\\Colonapprox\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"2248}}\"); // \\providecommand*\\colonsim{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}\n\ndefineMacro(\"\\\\colonsim\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"223c}}\"); // \\providecommand*\\Colonsim{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}\n\ndefineMacro(\"\\\\Colonsim\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"223c}}\"); // Some Unicode characters are implemented with macros to mathtools functions.\n\ndefineMacro(\"\\u2237\", \"\\\\dblcolon\"); // ::\n\ndefineMacro(\"\\u2239\", \"\\\\eqcolon\"); // -:\n\ndefineMacro(\"\\u2254\", \"\\\\coloneqq\"); // :=\n\ndefineMacro(\"\\u2255\", \"\\\\eqqcolon\"); // =:\n\ndefineMacro(\"\\u2A74\", \"\\\\Coloneqq\"); // ::=\n//////////////////////////////////////////////////////////////////////\n// colonequals.sty\n// Alternate names for mathtools's macros:\n\ndefineMacro(\"\\\\ratio\", \"\\\\vcentcolon\");\ndefineMacro(\"\\\\coloncolon\", \"\\\\dblcolon\");\ndefineMacro(\"\\\\colonequals\", \"\\\\coloneqq\");\ndefineMacro(\"\\\\coloncolonequals\", \"\\\\Coloneqq\");\ndefineMacro(\"\\\\equalscolon\", \"\\\\eqqcolon\");\ndefineMacro(\"\\\\equalscoloncolon\", \"\\\\Eqqcolon\");\ndefineMacro(\"\\\\colonminus\", \"\\\\coloneq\");\ndefineMacro(\"\\\\coloncolonminus\", \"\\\\Coloneq\");\ndefineMacro(\"\\\\minuscolon\", \"\\\\eqcolon\");\ndefineMacro(\"\\\\minuscoloncolon\", \"\\\\Eqcolon\"); // \\colonapprox name is same in mathtools and colonequals.\n\ndefineMacro(\"\\\\coloncolonapprox\", \"\\\\Colonapprox\"); // \\colonsim name is same in mathtools and colonequals.\n\ndefineMacro(\"\\\\coloncolonsim\", \"\\\\Colonsim\"); // Additional macros, implemented by analogy with mathtools definitions:\n\ndefineMacro(\"\\\\simcolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\simcoloncolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\");\ndefineMacro(\"\\\\approxcolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\approxcoloncolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\"); // Present in newtxmath, pxfonts and txfonts\n\ndefineMacro(\"\\\\notni\", \"\\\\html@mathml{\\\\not\\\\ni}{\\\\mathrel{\\\\char`\\u220C}}\");\ndefineMacro(\"\\\\limsup\", \"\\\\DOTSB\\\\operatorname*{lim\\\\,sup}\");\ndefineMacro(\"\\\\liminf\", \"\\\\DOTSB\\\\operatorname*{lim\\\\,inf}\"); //////////////////////////////////////////////////////////////////////\n// From amsopn.sty\n\ndefineMacro(\"\\\\injlim\", \"\\\\DOTSB\\\\operatorname*{inj\\\\,lim}\");\ndefineMacro(\"\\\\projlim\", \"\\\\DOTSB\\\\operatorname*{proj\\\\,lim}\");\ndefineMacro(\"\\\\varlimsup\", \"\\\\DOTSB\\\\operatorname*{\\\\overline{lim}}\");\ndefineMacro(\"\\\\varliminf\", \"\\\\DOTSB\\\\operatorname*{\\\\underline{lim}}\");\ndefineMacro(\"\\\\varinjlim\", \"\\\\DOTSB\\\\operatorname*{\\\\underrightarrow{lim}}\");\ndefineMacro(\"\\\\varprojlim\", \"\\\\DOTSB\\\\operatorname*{\\\\underleftarrow{lim}}\"); //////////////////////////////////////////////////////////////////////\n// MathML alternates for KaTeX glyphs in the Unicode private area\n\ndefineMacro(\"\\\\gvertneqq\", \"\\\\html@mathml{\\\\@gvertneqq}{\\u2269}\");\ndefineMacro(\"\\\\lvertneqq\", \"\\\\html@mathml{\\\\@lvertneqq}{\\u2268}\");\ndefineMacro(\"\\\\ngeqq\", \"\\\\html@mathml{\\\\@ngeqq}{\\u2271}\");\ndefineMacro(\"\\\\ngeqslant\", \"\\\\html@mathml{\\\\@ngeqslant}{\\u2271}\");\ndefineMacro(\"\\\\nleqq\", \"\\\\html@mathml{\\\\@nleqq}{\\u2270}\");\ndefineMacro(\"\\\\nleqslant\", \"\\\\html@mathml{\\\\@nleqslant}{\\u2270}\");\ndefineMacro(\"\\\\nshortmid\", \"\\\\html@mathml{\\\\@nshortmid}{∤}\");\ndefineMacro(\"\\\\nshortparallel\", \"\\\\html@mathml{\\\\@nshortparallel}{∦}\");\ndefineMacro(\"\\\\nsubseteqq\", \"\\\\html@mathml{\\\\@nsubseteqq}{\\u2288}\");\ndefineMacro(\"\\\\nsupseteqq\", \"\\\\html@mathml{\\\\@nsupseteqq}{\\u2289}\");\ndefineMacro(\"\\\\varsubsetneq\", \"\\\\html@mathml{\\\\@varsubsetneq}{⊊}\");\ndefineMacro(\"\\\\varsubsetneqq\", \"\\\\html@mathml{\\\\@varsubsetneqq}{⫋}\");\ndefineMacro(\"\\\\varsupsetneq\", \"\\\\html@mathml{\\\\@varsupsetneq}{⊋}\");\ndefineMacro(\"\\\\varsupsetneqq\", \"\\\\html@mathml{\\\\@varsupsetneqq}{⫌}\");\ndefineMacro(\"\\\\imath\", \"\\\\html@mathml{\\\\@imath}{\\u0131}\");\ndefineMacro(\"\\\\jmath\", \"\\\\html@mathml{\\\\@jmath}{\\u0237}\"); //////////////////////////////////////////////////////////////////////\n// stmaryrd and semantic\n// The stmaryrd and semantic packages render the next four items by calling a\n// glyph. Those glyphs do not exist in the KaTeX fonts. Hence the macros.\n\ndefineMacro(\"\\\\llbracket\", \"\\\\html@mathml{\" + \"\\\\mathopen{[\\\\mkern-3.2mu[}}\" + \"{\\\\mathopen{\\\\char`\\u27e6}}\");\ndefineMacro(\"\\\\rrbracket\", \"\\\\html@mathml{\" + \"\\\\mathclose{]\\\\mkern-3.2mu]}}\" + \"{\\\\mathclose{\\\\char`\\u27e7}}\");\ndefineMacro(\"\\u27e6\", \"\\\\llbracket\"); // blackboard bold [\n\ndefineMacro(\"\\u27e7\", \"\\\\rrbracket\"); // blackboard bold ]\n\ndefineMacro(\"\\\\lBrace\", \"\\\\html@mathml{\" + \"\\\\mathopen{\\\\{\\\\mkern-3.2mu[}}\" + \"{\\\\mathopen{\\\\char`\\u2983}}\");\ndefineMacro(\"\\\\rBrace\", \"\\\\html@mathml{\" + \"\\\\mathclose{]\\\\mkern-3.2mu\\\\}}}\" + \"{\\\\mathclose{\\\\char`\\u2984}}\");\ndefineMacro(\"\\u2983\", \"\\\\lBrace\"); // blackboard bold {\n\ndefineMacro(\"\\u2984\", \"\\\\rBrace\"); // blackboard bold }\n// TODO: Create variable sized versions of the last two items. I believe that\n// will require new font glyphs.\n// The stmaryrd function `\\minuso` provides a \"Plimsoll\" symbol that\n// superimposes the characters \\circ and \\mathminus. Used in chemistry.\n\ndefineMacro(\"\\\\minuso\", \"\\\\mathbin{\\\\html@mathml{\" + \"{\\\\mathrlap{\\\\mathchoice{\\\\kern{0.145em}}{\\\\kern{0.145em}}\" + \"{\\\\kern{0.1015em}}{\\\\kern{0.0725em}}\\\\circ}{-}}}\" + \"{\\\\char`⦵}}\");\ndefineMacro(\"⦵\", \"\\\\minuso\"); //////////////////////////////////////////////////////////////////////\n// texvc.sty\n// The texvc package contains macros available in mediawiki pages.\n// We omit the functions deprecated at\n// https://en.wikipedia.org/wiki/Help:Displaying_a_formula#Deprecated_syntax\n// We also omit texvc's \\O, which conflicts with \\text{\\O}\n\ndefineMacro(\"\\\\darr\", \"\\\\downarrow\");\ndefineMacro(\"\\\\dArr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\Darr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\lang\", \"\\\\langle\");\ndefineMacro(\"\\\\rang\", \"\\\\rangle\");\ndefineMacro(\"\\\\uarr\", \"\\\\uparrow\");\ndefineMacro(\"\\\\uArr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\Uarr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\N\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\R\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Z\", \"\\\\mathbb{Z}\");\ndefineMacro(\"\\\\alef\", \"\\\\aleph\");\ndefineMacro(\"\\\\alefsym\", \"\\\\aleph\");\ndefineMacro(\"\\\\Alpha\", \"\\\\mathrm{A}\");\ndefineMacro(\"\\\\Beta\", \"\\\\mathrm{B}\");\ndefineMacro(\"\\\\bull\", \"\\\\bullet\");\ndefineMacro(\"\\\\Chi\", \"\\\\mathrm{X}\");\ndefineMacro(\"\\\\clubs\", \"\\\\clubsuit\");\ndefineMacro(\"\\\\cnums\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Complex\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Dagger\", \"\\\\ddagger\");\ndefineMacro(\"\\\\diamonds\", \"\\\\diamondsuit\");\ndefineMacro(\"\\\\empty\", \"\\\\emptyset\");\ndefineMacro(\"\\\\Epsilon\", \"\\\\mathrm{E}\");\ndefineMacro(\"\\\\Eta\", \"\\\\mathrm{H}\");\ndefineMacro(\"\\\\exist\", \"\\\\exists\");\ndefineMacro(\"\\\\harr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\hArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Harr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\hearts\", \"\\\\heartsuit\");\ndefineMacro(\"\\\\image\", \"\\\\Im\");\ndefineMacro(\"\\\\infin\", \"\\\\infty\");\ndefineMacro(\"\\\\Iota\", \"\\\\mathrm{I}\");\ndefineMacro(\"\\\\isin\", \"\\\\in\");\ndefineMacro(\"\\\\Kappa\", \"\\\\mathrm{K}\");\ndefineMacro(\"\\\\larr\", \"\\\\leftarrow\");\ndefineMacro(\"\\\\lArr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\Larr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\lrarr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\lrArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Lrarr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Mu\", \"\\\\mathrm{M}\");\ndefineMacro(\"\\\\natnums\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\Nu\", \"\\\\mathrm{N}\");\ndefineMacro(\"\\\\Omicron\", \"\\\\mathrm{O}\");\ndefineMacro(\"\\\\plusmn\", \"\\\\pm\");\ndefineMacro(\"\\\\rarr\", \"\\\\rightarrow\");\ndefineMacro(\"\\\\rArr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\Rarr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\real\", \"\\\\Re\");\ndefineMacro(\"\\\\reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Rho\", \"\\\\mathrm{P}\");\ndefineMacro(\"\\\\sdot\", \"\\\\cdot\");\ndefineMacro(\"\\\\sect\", \"\\\\S\");\ndefineMacro(\"\\\\spades\", \"\\\\spadesuit\");\ndefineMacro(\"\\\\sub\", \"\\\\subset\");\ndefineMacro(\"\\\\sube\", \"\\\\subseteq\");\ndefineMacro(\"\\\\supe\", \"\\\\supseteq\");\ndefineMacro(\"\\\\Tau\", \"\\\\mathrm{T}\");\ndefineMacro(\"\\\\thetasym\", \"\\\\vartheta\"); // TODO: defineMacro(\"\\\\varcoppa\", \"\\\\\\mbox{\\\\coppa}\");\n\ndefineMacro(\"\\\\weierp\", \"\\\\wp\");\ndefineMacro(\"\\\\Zeta\", \"\\\\mathrm{Z}\"); //////////////////////////////////////////////////////////////////////\n// statmath.sty\n// https://ctan.math.illinois.edu/macros/latex/contrib/statmath/statmath.pdf\n\ndefineMacro(\"\\\\argmin\", \"\\\\DOTSB\\\\operatorname*{arg\\\\,min}\");\ndefineMacro(\"\\\\argmax\", \"\\\\DOTSB\\\\operatorname*{arg\\\\,max}\");\ndefineMacro(\"\\\\plim\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{plim}}\\\\limits\"); //////////////////////////////////////////////////////////////////////\n// braket.sty\n// http://ctan.math.washington.edu/tex-archive/macros/latex/contrib/braket/braket.pdf\n\ndefineMacro(\"\\\\bra\", \"\\\\mathinner{\\\\langle{#1}|}\");\ndefineMacro(\"\\\\ket\", \"\\\\mathinner{|{#1}\\\\rangle}\");\ndefineMacro(\"\\\\braket\", \"\\\\mathinner{\\\\langle{#1}\\\\rangle}\");\ndefineMacro(\"\\\\Bra\", \"\\\\left\\\\langle#1\\\\right|\");\ndefineMacro(\"\\\\Ket\", \"\\\\left|#1\\\\right\\\\rangle\");\n\nconst braketHelper = one => context => {\n  const left = context.consumeArg().tokens;\n  const middle = context.consumeArg().tokens;\n  const middleDouble = context.consumeArg().tokens;\n  const right = context.consumeArg().tokens;\n  const oldMiddle = context.macros.get(\"|\");\n  const oldMiddleDouble = context.macros.get(\"\\\\|\");\n  context.macros.beginGroup();\n\n  const midMacro = double => context => {\n    if (one) {\n      // Only modify the first instance of | or \\|\n      context.macros.set(\"|\", oldMiddle);\n\n      if (middleDouble.length) {\n        context.macros.set(\"\\\\|\", oldMiddleDouble);\n      }\n    }\n\n    let doubled = double;\n\n    if (!double && middleDouble.length) {\n      // Mimic \\@ifnextchar\n      const nextToken = context.future();\n\n      if (nextToken.text === \"|\") {\n        context.popToken();\n        doubled = true;\n      }\n    }\n\n    return {\n      tokens: doubled ? middleDouble : middle,\n      numArgs: 0\n    };\n  };\n\n  context.macros.set(\"|\", midMacro(false));\n\n  if (middleDouble.length) {\n    context.macros.set(\"\\\\|\", midMacro(true));\n  }\n\n  const arg = context.consumeArg().tokens;\n  const expanded = context.expandTokens([...right, ...arg, ...left // reversed\n  ]);\n  context.macros.endGroup();\n  return {\n    tokens: expanded.reverse(),\n    numArgs: 0\n  };\n};\n\ndefineMacro(\"\\\\bra@ket\", braketHelper(false));\ndefineMacro(\"\\\\bra@set\", braketHelper(true));\ndefineMacro(\"\\\\Braket\", \"\\\\bra@ket{\\\\left\\\\langle}\" + \"{\\\\,\\\\middle\\\\vert\\\\,}{\\\\,\\\\middle\\\\vert\\\\,}{\\\\right\\\\rangle}\");\ndefineMacro(\"\\\\Set\", \"\\\\bra@set{\\\\left\\\\{\\\\:}\" + \"{\\\\;\\\\middle\\\\vert\\\\;}{\\\\;\\\\middle\\\\Vert\\\\;}{\\\\:\\\\right\\\\}}\");\ndefineMacro(\"\\\\set\", \"\\\\bra@set{\\\\{\\\\,}{\\\\mid}{}{\\\\,\\\\}}\"); // has no support for special || or \\|\n//////////////////////////////////////////////////////////////////////\n// actuarialangle.dtx\n\ndefineMacro(\"\\\\angln\", \"{\\\\angl n}\"); // Custom Khan Academy colors, should be moved to an optional package\n\ndefineMacro(\"\\\\blue\", \"\\\\textcolor{##6495ed}{#1}\");\ndefineMacro(\"\\\\orange\", \"\\\\textcolor{##ffa500}{#1}\");\ndefineMacro(\"\\\\pink\", \"\\\\textcolor{##ff00af}{#1}\");\ndefineMacro(\"\\\\red\", \"\\\\textcolor{##df0030}{#1}\");\ndefineMacro(\"\\\\green\", \"\\\\textcolor{##28ae7b}{#1}\");\ndefineMacro(\"\\\\gray\", \"\\\\textcolor{gray}{#1}\");\ndefineMacro(\"\\\\purple\", \"\\\\textcolor{##9d38bd}{#1}\");\ndefineMacro(\"\\\\blueA\", \"\\\\textcolor{##ccfaff}{#1}\");\ndefineMacro(\"\\\\blueB\", \"\\\\textcolor{##80f6ff}{#1}\");\ndefineMacro(\"\\\\blueC\", \"\\\\textcolor{##63d9ea}{#1}\");\ndefineMacro(\"\\\\blueD\", \"\\\\textcolor{##11accd}{#1}\");\ndefineMacro(\"\\\\blueE\", \"\\\\textcolor{##0c7f99}{#1}\");\ndefineMacro(\"\\\\tealA\", \"\\\\textcolor{##94fff5}{#1}\");\ndefineMacro(\"\\\\tealB\", \"\\\\textcolor{##26edd5}{#1}\");\ndefineMacro(\"\\\\tealC\", \"\\\\textcolor{##01d1c1}{#1}\");\ndefineMacro(\"\\\\tealD\", \"\\\\textcolor{##01a995}{#1}\");\ndefineMacro(\"\\\\tealE\", \"\\\\textcolor{##208170}{#1}\");\ndefineMacro(\"\\\\greenA\", \"\\\\textcolor{##b6ffb0}{#1}\");\ndefineMacro(\"\\\\greenB\", \"\\\\textcolor{##8af281}{#1}\");\ndefineMacro(\"\\\\greenC\", \"\\\\textcolor{##74cf70}{#1}\");\ndefineMacro(\"\\\\greenD\", \"\\\\textcolor{##1fab54}{#1}\");\ndefineMacro(\"\\\\greenE\", \"\\\\textcolor{##0d923f}{#1}\");\ndefineMacro(\"\\\\goldA\", \"\\\\textcolor{##ffd0a9}{#1}\");\ndefineMacro(\"\\\\goldB\", \"\\\\textcolor{##ffbb71}{#1}\");\ndefineMacro(\"\\\\goldC\", \"\\\\textcolor{##ff9c39}{#1}\");\ndefineMacro(\"\\\\goldD\", \"\\\\textcolor{##e07d10}{#1}\");\ndefineMacro(\"\\\\goldE\", \"\\\\textcolor{##a75a05}{#1}\");\ndefineMacro(\"\\\\redA\", \"\\\\textcolor{##fca9a9}{#1}\");\ndefineMacro(\"\\\\redB\", \"\\\\textcolor{##ff8482}{#1}\");\ndefineMacro(\"\\\\redC\", \"\\\\textcolor{##f9685d}{#1}\");\ndefineMacro(\"\\\\redD\", \"\\\\textcolor{##e84d39}{#1}\");\ndefineMacro(\"\\\\redE\", \"\\\\textcolor{##bc2612}{#1}\");\ndefineMacro(\"\\\\maroonA\", \"\\\\textcolor{##ffbde0}{#1}\");\ndefineMacro(\"\\\\maroonB\", \"\\\\textcolor{##ff92c6}{#1}\");\ndefineMacro(\"\\\\maroonC\", \"\\\\textcolor{##ed5fa6}{#1}\");\ndefineMacro(\"\\\\maroonD\", \"\\\\textcolor{##ca337c}{#1}\");\ndefineMacro(\"\\\\maroonE\", \"\\\\textcolor{##9e034e}{#1}\");\ndefineMacro(\"\\\\purpleA\", \"\\\\textcolor{##ddd7ff}{#1}\");\ndefineMacro(\"\\\\purpleB\", \"\\\\textcolor{##c6b9fc}{#1}\");\ndefineMacro(\"\\\\purpleC\", \"\\\\textcolor{##aa87ff}{#1}\");\ndefineMacro(\"\\\\purpleD\", \"\\\\textcolor{##7854ab}{#1}\");\ndefineMacro(\"\\\\purpleE\", \"\\\\textcolor{##543b78}{#1}\");\ndefineMacro(\"\\\\mintA\", \"\\\\textcolor{##f5f9e8}{#1}\");\ndefineMacro(\"\\\\mintB\", \"\\\\textcolor{##edf2df}{#1}\");\ndefineMacro(\"\\\\mintC\", \"\\\\textcolor{##e0e5cc}{#1}\");\ndefineMacro(\"\\\\grayA\", \"\\\\textcolor{##f6f7f7}{#1}\");\ndefineMacro(\"\\\\grayB\", \"\\\\textcolor{##f0f1f2}{#1}\");\ndefineMacro(\"\\\\grayC\", \"\\\\textcolor{##e3e5e6}{#1}\");\ndefineMacro(\"\\\\grayD\", \"\\\\textcolor{##d6d8da}{#1}\");\ndefineMacro(\"\\\\grayE\", \"\\\\textcolor{##babec2}{#1}\");\ndefineMacro(\"\\\\grayF\", \"\\\\textcolor{##888d93}{#1}\");\ndefineMacro(\"\\\\grayG\", \"\\\\textcolor{##626569}{#1}\");\ndefineMacro(\"\\\\grayH\", \"\\\\textcolor{##3b3e40}{#1}\");\ndefineMacro(\"\\\\grayI\", \"\\\\textcolor{##21242c}{#1}\");\ndefineMacro(\"\\\\kaBlue\", \"\\\\textcolor{##314453}{#1}\");\ndefineMacro(\"\\\\kaGreen\", \"\\\\textcolor{##71B307}{#1}\");\n;// CONCATENATED MODULE: ./src/MacroExpander.js\n/**\n * This file contains the “gullet” where macros are expanded\n * until only non-macro tokens remain.\n */\n\n\n\n\n\n\n\n// List of commands that act like macros but aren't defined as a macro,\n// function, or symbol.  Used in `isDefined`.\nconst implicitCommands = {\n  \"^\": true,\n  // Parser.js\n  \"_\": true,\n  // Parser.js\n  \"\\\\limits\": true,\n  // Parser.js\n  \"\\\\nolimits\": true // Parser.js\n\n};\nclass MacroExpander {\n  constructor(input, settings, mode) {\n    this.settings = void 0;\n    this.expansionCount = void 0;\n    this.lexer = void 0;\n    this.macros = void 0;\n    this.stack = void 0;\n    this.mode = void 0;\n    this.settings = settings;\n    this.expansionCount = 0;\n    this.feed(input); // Make new global namespace\n\n    this.macros = new Namespace(src_macros, settings.macros);\n    this.mode = mode;\n    this.stack = []; // contains tokens in REVERSE order\n  }\n  /**\n   * Feed a new input string to the same MacroExpander\n   * (with existing macros etc.).\n   */\n\n\n  feed(input) {\n    this.lexer = new Lexer(input, this.settings);\n  }\n  /**\n   * Switches between \"text\" and \"math\" modes.\n   */\n\n\n  switchMode(newMode) {\n    this.mode = newMode;\n  }\n  /**\n   * Start a new group nesting within all namespaces.\n   */\n\n\n  beginGroup() {\n    this.macros.beginGroup();\n  }\n  /**\n   * End current group nesting within all namespaces.\n   */\n\n\n  endGroup() {\n    this.macros.endGroup();\n  }\n  /**\n   * Ends all currently nested groups (if any), restoring values before the\n   * groups began.  Useful in case of an error in the middle of parsing.\n   */\n\n\n  endGroups() {\n    this.macros.endGroups();\n  }\n  /**\n   * Returns the topmost token on the stack, without expanding it.\n   * Similar in behavior to TeX's `\\futurelet`.\n   */\n\n\n  future() {\n    if (this.stack.length === 0) {\n      this.pushToken(this.lexer.lex());\n    }\n\n    return this.stack[this.stack.length - 1];\n  }\n  /**\n   * Remove and return the next unexpanded token.\n   */\n\n\n  popToken() {\n    this.future(); // ensure non-empty stack\n\n    return this.stack.pop();\n  }\n  /**\n   * Add a given token to the token stack.  In particular, this get be used\n   * to put back a token returned from one of the other methods.\n   */\n\n\n  pushToken(token) {\n    this.stack.push(token);\n  }\n  /**\n   * Append an array of tokens to the token stack.\n   */\n\n\n  pushTokens(tokens) {\n    this.stack.push(...tokens);\n  }\n  /**\n   * Find an macro argument without expanding tokens and append the array of\n   * tokens to the token stack. Uses Token as a container for the result.\n   */\n\n\n  scanArgument(isOptional) {\n    let start;\n    let end;\n    let tokens;\n\n    if (isOptional) {\n      this.consumeSpaces(); // \\@ifnextchar gobbles any space following it\n\n      if (this.future().text !== \"[\") {\n        return null;\n      }\n\n      start = this.popToken(); // don't include [ in tokens\n\n      ({\n        tokens,\n        end\n      } = this.consumeArg([\"]\"]));\n    } else {\n      ({\n        tokens,\n        start,\n        end\n      } = this.consumeArg());\n    } // indicate the end of an argument\n\n\n    this.pushToken(new Token(\"EOF\", end.loc));\n    this.pushTokens(tokens);\n    return start.range(end, \"\");\n  }\n  /**\n   * Consume all following space tokens, without expansion.\n   */\n\n\n  consumeSpaces() {\n    for (;;) {\n      const token = this.future();\n\n      if (token.text === \" \") {\n        this.stack.pop();\n      } else {\n        break;\n      }\n    }\n  }\n  /**\n   * Consume an argument from the token stream, and return the resulting array\n   * of tokens and start/end token.\n   */\n\n\n  consumeArg(delims) {\n    // The argument for a delimited parameter is the shortest (possibly\n    // empty) sequence of tokens with properly nested {...} groups that is\n    // followed ... by this particular list of non-parameter tokens.\n    // The argument for an undelimited parameter is the next nonblank\n    // token, unless that token is ‘{’, when the argument will be the\n    // entire {...} group that follows.\n    const tokens = [];\n    const isDelimited = delims && delims.length > 0;\n\n    if (!isDelimited) {\n      // Ignore spaces between arguments.  As the TeXbook says:\n      // \"After you have said ‘\\def\\row#1#2{...}’, you are allowed to\n      //  put spaces between the arguments (e.g., ‘\\row x n’), because\n      //  TeX doesn’t use single spaces as undelimited arguments.\"\n      this.consumeSpaces();\n    }\n\n    const start = this.future();\n    let tok;\n    let depth = 0;\n    let match = 0;\n\n    do {\n      tok = this.popToken();\n      tokens.push(tok);\n\n      if (tok.text === \"{\") {\n        ++depth;\n      } else if (tok.text === \"}\") {\n        --depth;\n\n        if (depth === -1) {\n          throw new src_ParseError(\"Extra }\", tok);\n        }\n      } else if (tok.text === \"EOF\") {\n        throw new src_ParseError(\"Unexpected end of input in a macro argument\" + \", expected '\" + (delims && isDelimited ? delims[match] : \"}\") + \"'\", tok);\n      }\n\n      if (delims && isDelimited) {\n        if ((depth === 0 || depth === 1 && delims[match] === \"{\") && tok.text === delims[match]) {\n          ++match;\n\n          if (match === delims.length) {\n            // don't include delims in tokens\n            tokens.splice(-match, match);\n            break;\n          }\n        } else {\n          match = 0;\n        }\n      }\n    } while (depth !== 0 || isDelimited); // If the argument found ... has the form ‘{<nested tokens>}’,\n    // ... the outermost braces enclosing the argument are removed\n\n\n    if (start.text === \"{\" && tokens[tokens.length - 1].text === \"}\") {\n      tokens.pop();\n      tokens.shift();\n    }\n\n    tokens.reverse(); // to fit in with stack order\n\n    return {\n      tokens,\n      start,\n      end: tok\n    };\n  }\n  /**\n   * Consume the specified number of (delimited) arguments from the token\n   * stream and return the resulting array of arguments.\n   */\n\n\n  consumeArgs(numArgs, delimiters) {\n    if (delimiters) {\n      if (delimiters.length !== numArgs + 1) {\n        throw new src_ParseError(\"The length of delimiters doesn't match the number of args!\");\n      }\n\n      const delims = delimiters[0];\n\n      for (let i = 0; i < delims.length; i++) {\n        const tok = this.popToken();\n\n        if (delims[i] !== tok.text) {\n          throw new src_ParseError(\"Use of the macro doesn't match its definition\", tok);\n        }\n      }\n    }\n\n    const args = [];\n\n    for (let i = 0; i < numArgs; i++) {\n      args.push(this.consumeArg(delimiters && delimiters[i + 1]).tokens);\n    }\n\n    return args;\n  }\n  /**\n   * Increment `expansionCount` by the specified amount.\n   * Throw an error if it exceeds `maxExpand`.\n   */\n\n\n  countExpansion(amount) {\n    this.expansionCount += amount;\n\n    if (this.expansionCount > this.settings.maxExpand) {\n      throw new src_ParseError(\"Too many expansions: infinite loop or \" + \"need to increase maxExpand setting\");\n    }\n  }\n  /**\n   * Expand the next token only once if possible.\n   *\n   * If the token is expanded, the resulting tokens will be pushed onto\n   * the stack in reverse order, and the number of such tokens will be\n   * returned.  This number might be zero or positive.\n   *\n   * If not, the return value is `false`, and the next token remains at the\n   * top of the stack.\n   *\n   * In either case, the next token will be on the top of the stack,\n   * or the stack will be empty (in case of empty expansion\n   * and no other tokens).\n   *\n   * Used to implement `expandAfterFuture` and `expandNextToken`.\n   *\n   * If expandableOnly, only expandable tokens are expanded and\n   * an undefined control sequence results in an error.\n   */\n\n\n  expandOnce(expandableOnly) {\n    const topToken = this.popToken();\n    const name = topToken.text;\n    const expansion = !topToken.noexpand ? this._getExpansion(name) : null;\n\n    if (expansion == null || expandableOnly && expansion.unexpandable) {\n      if (expandableOnly && expansion == null && name[0] === \"\\\\\" && !this.isDefined(name)) {\n        throw new src_ParseError(\"Undefined control sequence: \" + name);\n      }\n\n      this.pushToken(topToken);\n      return false;\n    }\n\n    this.countExpansion(1);\n    let tokens = expansion.tokens;\n    const args = this.consumeArgs(expansion.numArgs, expansion.delimiters);\n\n    if (expansion.numArgs) {\n      // paste arguments in place of the placeholders\n      tokens = tokens.slice(); // make a shallow copy\n\n      for (let i = tokens.length - 1; i >= 0; --i) {\n        let tok = tokens[i];\n\n        if (tok.text === \"#\") {\n          if (i === 0) {\n            throw new src_ParseError(\"Incomplete placeholder at end of macro body\", tok);\n          }\n\n          tok = tokens[--i]; // next token on stack\n\n          if (tok.text === \"#\") {\n            // ## → #\n            tokens.splice(i + 1, 1); // drop first #\n          } else if (/^[1-9]$/.test(tok.text)) {\n            // replace the placeholder with the indicated argument\n            tokens.splice(i, 2, ...args[+tok.text - 1]);\n          } else {\n            throw new src_ParseError(\"Not a valid argument number\", tok);\n          }\n        }\n      }\n    } // Concatenate expansion onto top of stack.\n\n\n    this.pushTokens(tokens);\n    return tokens.length;\n  }\n  /**\n   * Expand the next token only once (if possible), and return the resulting\n   * top token on the stack (without removing anything from the stack).\n   * Similar in behavior to TeX's `\\expandafter\\futurelet`.\n   * Equivalent to expandOnce() followed by future().\n   */\n\n\n  expandAfterFuture() {\n    this.expandOnce();\n    return this.future();\n  }\n  /**\n   * Recursively expand first token, then return first non-expandable token.\n   */\n\n\n  expandNextToken() {\n    for (;;) {\n      if (this.expandOnce() === false) {\n        // fully expanded\n        const token = this.stack.pop(); // the token after \\noexpand is interpreted as if its meaning\n        // were ‘\\relax’\n\n        if (token.treatAsRelax) {\n          token.text = \"\\\\relax\";\n        }\n\n        return token;\n      }\n    } // Flow unable to figure out that this pathway is impossible.\n    // https://github.com/facebook/flow/issues/4808\n\n\n    throw new Error(); // eslint-disable-line no-unreachable\n  }\n  /**\n   * Fully expand the given macro name and return the resulting list of\n   * tokens, or return `undefined` if no such macro is defined.\n   */\n\n\n  expandMacro(name) {\n    return this.macros.has(name) ? this.expandTokens([new Token(name)]) : undefined;\n  }\n  /**\n   * Fully expand the given token stream and return the resulting list of\n   * tokens.  Note that the input tokens are in reverse order, but the\n   * output tokens are in forward order.\n   */\n\n\n  expandTokens(tokens) {\n    const output = [];\n    const oldStackLength = this.stack.length;\n    this.pushTokens(tokens);\n\n    while (this.stack.length > oldStackLength) {\n      // Expand only expandable tokens\n      if (this.expandOnce(true) === false) {\n        // fully expanded\n        const token = this.stack.pop();\n\n        if (token.treatAsRelax) {\n          // the expansion of \\noexpand is the token itself\n          token.noexpand = false;\n          token.treatAsRelax = false;\n        }\n\n        output.push(token);\n      }\n    } // Count all of these tokens as additional expansions, to prevent\n    // exponential blowup from linearly many \\edef's.\n\n\n    this.countExpansion(output.length);\n    return output;\n  }\n  /**\n   * Fully expand the given macro name and return the result as a string,\n   * or return `undefined` if no such macro is defined.\n   */\n\n\n  expandMacroAsText(name) {\n    const tokens = this.expandMacro(name);\n\n    if (tokens) {\n      return tokens.map(token => token.text).join(\"\");\n    } else {\n      return tokens;\n    }\n  }\n  /**\n   * Returns the expanded macro as a reversed array of tokens and a macro\n   * argument count.  Or returns `null` if no such macro.\n   */\n\n\n  _getExpansion(name) {\n    const definition = this.macros.get(name);\n\n    if (definition == null) {\n      // mainly checking for undefined here\n      return definition;\n    } // If a single character has an associated catcode other than 13\n    // (active character), then don't expand it.\n\n\n    if (name.length === 1) {\n      const catcode = this.lexer.catcodes[name];\n\n      if (catcode != null && catcode !== 13) {\n        return;\n      }\n    }\n\n    const expansion = typeof definition === \"function\" ? definition(this) : definition;\n\n    if (typeof expansion === \"string\") {\n      let numArgs = 0;\n\n      if (expansion.indexOf(\"#\") !== -1) {\n        const stripped = expansion.replace(/##/g, \"\");\n\n        while (stripped.indexOf(\"#\" + (numArgs + 1)) !== -1) {\n          ++numArgs;\n        }\n      }\n\n      const bodyLexer = new Lexer(expansion, this.settings);\n      const tokens = [];\n      let tok = bodyLexer.lex();\n\n      while (tok.text !== \"EOF\") {\n        tokens.push(tok);\n        tok = bodyLexer.lex();\n      }\n\n      tokens.reverse(); // to fit in with stack using push and pop\n\n      const expanded = {\n        tokens,\n        numArgs\n      };\n      return expanded;\n    }\n\n    return expansion;\n  }\n  /**\n   * Determine whether a command is currently \"defined\" (has some\n   * functionality), meaning that it's a macro (in the current group),\n   * a function, a symbol, or one of the special commands listed in\n   * `implicitCommands`.\n   */\n\n\n  isDefined(name) {\n    return this.macros.has(name) || src_functions.hasOwnProperty(name) || src_symbols.math.hasOwnProperty(name) || src_symbols.text.hasOwnProperty(name) || implicitCommands.hasOwnProperty(name);\n  }\n  /**\n   * Determine whether a command is expandable.\n   */\n\n\n  isExpandable(name) {\n    const macro = this.macros.get(name);\n    return macro != null ? typeof macro === \"string\" || typeof macro === \"function\" || !macro.unexpandable : src_functions.hasOwnProperty(name) && !src_functions[name].primitive;\n  }\n\n}\n;// CONCATENATED MODULE: ./src/unicodeSupOrSub.js\n// Helpers for Parser.js handling of Unicode (sub|super)script characters.\nconst unicodeSubRegEx = /^[₊₋₌₍₎₀₁₂₃₄₅₆₇₈₉ₐₑₕᵢⱼₖₗₘₙₒₚᵣₛₜᵤᵥₓᵦᵧᵨᵩᵪ]/;\nconst uSubsAndSups = Object.freeze({\n  '₊': '+',\n  '₋': '-',\n  '₌': '=',\n  '₍': '(',\n  '₎': ')',\n  '₀': '0',\n  '₁': '1',\n  '₂': '2',\n  '₃': '3',\n  '₄': '4',\n  '₅': '5',\n  '₆': '6',\n  '₇': '7',\n  '₈': '8',\n  '₉': '9',\n  '\\u2090': 'a',\n  '\\u2091': 'e',\n  '\\u2095': 'h',\n  '\\u1D62': 'i',\n  '\\u2C7C': 'j',\n  '\\u2096': 'k',\n  '\\u2097': 'l',\n  '\\u2098': 'm',\n  '\\u2099': 'n',\n  '\\u2092': 'o',\n  '\\u209A': 'p',\n  '\\u1D63': 'r',\n  '\\u209B': 's',\n  '\\u209C': 't',\n  '\\u1D64': 'u',\n  '\\u1D65': 'v',\n  '\\u2093': 'x',\n  '\\u1D66': 'β',\n  '\\u1D67': 'γ',\n  '\\u1D68': 'ρ',\n  '\\u1D69': '\\u03d5',\n  '\\u1D6A': 'χ',\n  '⁺': '+',\n  '⁻': '-',\n  '⁼': '=',\n  '⁽': '(',\n  '⁾': ')',\n  '⁰': '0',\n  '¹': '1',\n  '²': '2',\n  '³': '3',\n  '⁴': '4',\n  '⁵': '5',\n  '⁶': '6',\n  '⁷': '7',\n  '⁸': '8',\n  '⁹': '9',\n  '\\u1D2C': 'A',\n  '\\u1D2E': 'B',\n  '\\u1D30': 'D',\n  '\\u1D31': 'E',\n  '\\u1D33': 'G',\n  '\\u1D34': 'H',\n  '\\u1D35': 'I',\n  '\\u1D36': 'J',\n  '\\u1D37': 'K',\n  '\\u1D38': 'L',\n  '\\u1D39': 'M',\n  '\\u1D3A': 'N',\n  '\\u1D3C': 'O',\n  '\\u1D3E': 'P',\n  '\\u1D3F': 'R',\n  '\\u1D40': 'T',\n  '\\u1D41': 'U',\n  '\\u2C7D': 'V',\n  '\\u1D42': 'W',\n  '\\u1D43': 'a',\n  '\\u1D47': 'b',\n  '\\u1D9C': 'c',\n  '\\u1D48': 'd',\n  '\\u1D49': 'e',\n  '\\u1DA0': 'f',\n  '\\u1D4D': 'g',\n  '\\u02B0': 'h',\n  '\\u2071': 'i',\n  '\\u02B2': 'j',\n  '\\u1D4F': 'k',\n  '\\u02E1': 'l',\n  '\\u1D50': 'm',\n  '\\u207F': 'n',\n  '\\u1D52': 'o',\n  '\\u1D56': 'p',\n  '\\u02B3': 'r',\n  '\\u02E2': 's',\n  '\\u1D57': 't',\n  '\\u1D58': 'u',\n  '\\u1D5B': 'v',\n  '\\u02B7': 'w',\n  '\\u02E3': 'x',\n  '\\u02B8': 'y',\n  '\\u1DBB': 'z',\n  '\\u1D5D': 'β',\n  '\\u1D5E': 'γ',\n  '\\u1D5F': 'δ',\n  '\\u1D60': '\\u03d5',\n  '\\u1D61': 'χ',\n  '\\u1DBF': 'θ'\n});\n;// CONCATENATED MODULE: ./src/Parser.js\n/* eslint no-constant-condition:0 */\n\n\n\n\n\n\n\n\n\n\n // Pre-evaluate both modules as unicodeSymbols require String.normalize()\n\nconst unicodeAccents = {\n  \"́\": {\n    \"text\": \"\\\\'\",\n    \"math\": \"\\\\acute\"\n  },\n  \"̀\": {\n    \"text\": \"\\\\`\",\n    \"math\": \"\\\\grave\"\n  },\n  \"̈\": {\n    \"text\": \"\\\\\\\"\",\n    \"math\": \"\\\\ddot\"\n  },\n  \"̃\": {\n    \"text\": \"\\\\~\",\n    \"math\": \"\\\\tilde\"\n  },\n  \"̄\": {\n    \"text\": \"\\\\=\",\n    \"math\": \"\\\\bar\"\n  },\n  \"̆\": {\n    \"text\": \"\\\\u\",\n    \"math\": \"\\\\breve\"\n  },\n  \"̌\": {\n    \"text\": \"\\\\v\",\n    \"math\": \"\\\\check\"\n  },\n  \"̂\": {\n    \"text\": \"\\\\^\",\n    \"math\": \"\\\\hat\"\n  },\n  \"̇\": {\n    \"text\": \"\\\\.\",\n    \"math\": \"\\\\dot\"\n  },\n  \"̊\": {\n    \"text\": \"\\\\r\",\n    \"math\": \"\\\\mathring\"\n  },\n  \"̋\": {\n    \"text\": \"\\\\H\"\n  },\n  \"̧\": {\n    \"text\": \"\\\\c\"\n  }\n};\nconst unicodeSymbols = {\n  \"á\": \"á\",\n  \"à\": \"à\",\n  \"ä\": \"ä\",\n  \"ǟ\": \"ǟ\",\n  \"ã\": \"ã\",\n  \"ā\": \"ā\",\n  \"ă\": \"ă\",\n  \"ắ\": \"ắ\",\n  \"ằ\": \"ằ\",\n  \"ẵ\": \"ẵ\",\n  \"ǎ\": \"ǎ\",\n  \"â\": \"â\",\n  \"ấ\": \"ấ\",\n  \"ầ\": \"ầ\",\n  \"ẫ\": \"ẫ\",\n  \"ȧ\": \"ȧ\",\n  \"ǡ\": \"ǡ\",\n  \"å\": \"å\",\n  \"ǻ\": \"ǻ\",\n  \"ḃ\": \"ḃ\",\n  \"ć\": \"ć\",\n  \"ḉ\": \"ḉ\",\n  \"č\": \"č\",\n  \"ĉ\": \"ĉ\",\n  \"ċ\": \"ċ\",\n  \"ç\": \"ç\",\n  \"ď\": \"ď\",\n  \"ḋ\": \"ḋ\",\n  \"ḑ\": \"ḑ\",\n  \"é\": \"é\",\n  \"è\": \"è\",\n  \"ë\": \"ë\",\n  \"ẽ\": \"ẽ\",\n  \"ē\": \"ē\",\n  \"ḗ\": \"ḗ\",\n  \"ḕ\": \"ḕ\",\n  \"ĕ\": \"ĕ\",\n  \"ḝ\": \"ḝ\",\n  \"ě\": \"ě\",\n  \"ê\": \"ê\",\n  \"ế\": \"ế\",\n  \"ề\": \"ề\",\n  \"ễ\": \"ễ\",\n  \"ė\": \"ė\",\n  \"ȩ\": \"ȩ\",\n  \"ḟ\": \"ḟ\",\n  \"ǵ\": \"ǵ\",\n  \"ḡ\": \"ḡ\",\n  \"ğ\": \"ğ\",\n  \"ǧ\": \"ǧ\",\n  \"ĝ\": \"ĝ\",\n  \"ġ\": \"ġ\",\n  \"ģ\": \"ģ\",\n  \"ḧ\": \"ḧ\",\n  \"ȟ\": \"ȟ\",\n  \"ĥ\": \"ĥ\",\n  \"ḣ\": \"ḣ\",\n  \"ḩ\": \"ḩ\",\n  \"í\": \"í\",\n  \"ì\": \"ì\",\n  \"ï\": \"ï\",\n  \"ḯ\": \"ḯ\",\n  \"ĩ\": \"ĩ\",\n  \"ī\": \"ī\",\n  \"ĭ\": \"ĭ\",\n  \"ǐ\": \"ǐ\",\n  \"î\": \"î\",\n  \"ǰ\": \"ǰ\",\n  \"ĵ\": \"ĵ\",\n  \"ḱ\": \"ḱ\",\n  \"ǩ\": \"ǩ\",\n  \"ķ\": \"ķ\",\n  \"ĺ\": \"ĺ\",\n  \"ľ\": \"ľ\",\n  \"ļ\": \"ļ\",\n  \"ḿ\": \"ḿ\",\n  \"ṁ\": \"ṁ\",\n  \"ń\": \"ń\",\n  \"ǹ\": \"ǹ\",\n  \"ñ\": \"ñ\",\n  \"ň\": \"ň\",\n  \"ṅ\": \"ṅ\",\n  \"ņ\": \"ņ\",\n  \"ó\": \"ó\",\n  \"ò\": \"ò\",\n  \"ö\": \"ö\",\n  \"ȫ\": \"ȫ\",\n  \"õ\": \"õ\",\n  \"ṍ\": \"ṍ\",\n  \"ṏ\": \"ṏ\",\n  \"ȭ\": \"ȭ\",\n  \"ō\": \"ō\",\n  \"ṓ\": \"ṓ\",\n  \"ṑ\": \"ṑ\",\n  \"ŏ\": \"ŏ\",\n  \"ǒ\": \"ǒ\",\n  \"ô\": \"ô\",\n  \"ố\": \"ố\",\n  \"ồ\": \"ồ\",\n  \"ỗ\": \"ỗ\",\n  \"ȯ\": \"ȯ\",\n  \"ȱ\": \"ȱ\",\n  \"ő\": \"ő\",\n  \"ṕ\": \"ṕ\",\n  \"ṗ\": \"ṗ\",\n  \"ŕ\": \"ŕ\",\n  \"ř\": \"ř\",\n  \"ṙ\": \"ṙ\",\n  \"ŗ\": \"ŗ\",\n  \"ś\": \"ś\",\n  \"ṥ\": \"ṥ\",\n  \"š\": \"š\",\n  \"ṧ\": \"ṧ\",\n  \"ŝ\": \"ŝ\",\n  \"ṡ\": \"ṡ\",\n  \"ş\": \"ş\",\n  \"ẗ\": \"ẗ\",\n  \"ť\": \"ť\",\n  \"ṫ\": \"ṫ\",\n  \"ţ\": \"ţ\",\n  \"ú\": \"ú\",\n  \"ù\": \"ù\",\n  \"ü\": \"ü\",\n  \"ǘ\": \"ǘ\",\n  \"ǜ\": \"ǜ\",\n  \"ǖ\": \"ǖ\",\n  \"ǚ\": \"ǚ\",\n  \"ũ\": \"ũ\",\n  \"ṹ\": \"ṹ\",\n  \"ū\": \"ū\",\n  \"ṻ\": \"ṻ\",\n  \"ŭ\": \"ŭ\",\n  \"ǔ\": \"ǔ\",\n  \"û\": \"û\",\n  \"ů\": \"ů\",\n  \"ű\": \"ű\",\n  \"ṽ\": \"ṽ\",\n  \"ẃ\": \"ẃ\",\n  \"ẁ\": \"ẁ\",\n  \"ẅ\": \"ẅ\",\n  \"ŵ\": \"ŵ\",\n  \"ẇ\": \"ẇ\",\n  \"ẘ\": \"ẘ\",\n  \"ẍ\": \"ẍ\",\n  \"ẋ\": \"ẋ\",\n  \"ý\": \"ý\",\n  \"ỳ\": \"ỳ\",\n  \"ÿ\": \"ÿ\",\n  \"ỹ\": \"ỹ\",\n  \"ȳ\": \"ȳ\",\n  \"ŷ\": \"ŷ\",\n  \"ẏ\": \"ẏ\",\n  \"ẙ\": \"ẙ\",\n  \"ź\": \"ź\",\n  \"ž\": \"ž\",\n  \"ẑ\": \"ẑ\",\n  \"ż\": \"ż\",\n  \"Á\": \"Á\",\n  \"À\": \"À\",\n  \"Ä\": \"Ä\",\n  \"Ǟ\": \"Ǟ\",\n  \"Ã\": \"Ã\",\n  \"Ā\": \"Ā\",\n  \"Ă\": \"Ă\",\n  \"Ắ\": \"Ắ\",\n  \"Ằ\": \"Ằ\",\n  \"Ẵ\": \"Ẵ\",\n  \"Ǎ\": \"Ǎ\",\n  \"Â\": \"Â\",\n  \"Ấ\": \"Ấ\",\n  \"Ầ\": \"Ầ\",\n  \"Ẫ\": \"Ẫ\",\n  \"Ȧ\": \"Ȧ\",\n  \"Ǡ\": \"Ǡ\",\n  \"Å\": \"Å\",\n  \"Ǻ\": \"Ǻ\",\n  \"Ḃ\": \"Ḃ\",\n  \"Ć\": \"Ć\",\n  \"Ḉ\": \"Ḉ\",\n  \"Č\": \"Č\",\n  \"Ĉ\": \"Ĉ\",\n  \"Ċ\": \"Ċ\",\n  \"Ç\": \"Ç\",\n  \"Ď\": \"Ď\",\n  \"Ḋ\": \"Ḋ\",\n  \"Ḑ\": \"Ḑ\",\n  \"É\": \"É\",\n  \"È\": \"È\",\n  \"Ë\": \"Ë\",\n  \"Ẽ\": \"Ẽ\",\n  \"Ē\": \"Ē\",\n  \"Ḗ\": \"Ḗ\",\n  \"Ḕ\": \"Ḕ\",\n  \"Ĕ\": \"Ĕ\",\n  \"Ḝ\": \"Ḝ\",\n  \"Ě\": \"Ě\",\n  \"Ê\": \"Ê\",\n  \"Ế\": \"Ế\",\n  \"Ề\": \"Ề\",\n  \"Ễ\": \"Ễ\",\n  \"Ė\": \"Ė\",\n  \"Ȩ\": \"Ȩ\",\n  \"Ḟ\": \"Ḟ\",\n  \"Ǵ\": \"Ǵ\",\n  \"Ḡ\": \"Ḡ\",\n  \"Ğ\": \"Ğ\",\n  \"Ǧ\": \"Ǧ\",\n  \"Ĝ\": \"Ĝ\",\n  \"Ġ\": \"Ġ\",\n  \"Ģ\": \"Ģ\",\n  \"Ḧ\": \"Ḧ\",\n  \"Ȟ\": \"Ȟ\",\n  \"Ĥ\": \"Ĥ\",\n  \"Ḣ\": \"Ḣ\",\n  \"Ḩ\": \"Ḩ\",\n  \"Í\": \"Í\",\n  \"Ì\": \"Ì\",\n  \"Ï\": \"Ï\",\n  \"Ḯ\": \"Ḯ\",\n  \"Ĩ\": \"Ĩ\",\n  \"Ī\": \"Ī\",\n  \"Ĭ\": \"Ĭ\",\n  \"Ǐ\": \"Ǐ\",\n  \"Î\": \"Î\",\n  \"İ\": \"İ\",\n  \"Ĵ\": \"Ĵ\",\n  \"Ḱ\": \"Ḱ\",\n  \"Ǩ\": \"Ǩ\",\n  \"Ķ\": \"Ķ\",\n  \"Ĺ\": \"Ĺ\",\n  \"Ľ\": \"Ľ\",\n  \"Ļ\": \"Ļ\",\n  \"Ḿ\": \"Ḿ\",\n  \"Ṁ\": \"Ṁ\",\n  \"Ń\": \"Ń\",\n  \"Ǹ\": \"Ǹ\",\n  \"Ñ\": \"Ñ\",\n  \"Ň\": \"Ň\",\n  \"Ṅ\": \"Ṅ\",\n  \"Ņ\": \"Ņ\",\n  \"Ó\": \"Ó\",\n  \"Ò\": \"Ò\",\n  \"Ö\": \"Ö\",\n  \"Ȫ\": \"Ȫ\",\n  \"Õ\": \"Õ\",\n  \"Ṍ\": \"Ṍ\",\n  \"Ṏ\": \"Ṏ\",\n  \"Ȭ\": \"Ȭ\",\n  \"Ō\": \"Ō\",\n  \"Ṓ\": \"Ṓ\",\n  \"Ṑ\": \"Ṑ\",\n  \"Ŏ\": \"Ŏ\",\n  \"Ǒ\": \"Ǒ\",\n  \"Ô\": \"Ô\",\n  \"Ố\": \"Ố\",\n  \"Ồ\": \"Ồ\",\n  \"Ỗ\": \"Ỗ\",\n  \"Ȯ\": \"Ȯ\",\n  \"Ȱ\": \"Ȱ\",\n  \"Ő\": \"Ő\",\n  \"Ṕ\": \"Ṕ\",\n  \"Ṗ\": \"Ṗ\",\n  \"Ŕ\": \"Ŕ\",\n  \"Ř\": \"Ř\",\n  \"Ṙ\": \"Ṙ\",\n  \"Ŗ\": \"Ŗ\",\n  \"Ś\": \"Ś\",\n  \"Ṥ\": \"Ṥ\",\n  \"Š\": \"Š\",\n  \"Ṧ\": \"Ṧ\",\n  \"Ŝ\": \"Ŝ\",\n  \"Ṡ\": \"Ṡ\",\n  \"Ş\": \"Ş\",\n  \"Ť\": \"Ť\",\n  \"Ṫ\": \"Ṫ\",\n  \"Ţ\": \"Ţ\",\n  \"Ú\": \"Ú\",\n  \"Ù\": \"Ù\",\n  \"Ü\": \"Ü\",\n  \"Ǘ\": \"Ǘ\",\n  \"Ǜ\": \"Ǜ\",\n  \"Ǖ\": \"Ǖ\",\n  \"Ǚ\": \"Ǚ\",\n  \"Ũ\": \"Ũ\",\n  \"Ṹ\": \"Ṹ\",\n  \"Ū\": \"Ū\",\n  \"Ṻ\": \"Ṻ\",\n  \"Ŭ\": \"Ŭ\",\n  \"Ǔ\": \"Ǔ\",\n  \"Û\": \"Û\",\n  \"Ů\": \"Ů\",\n  \"Ű\": \"Ű\",\n  \"Ṽ\": \"Ṽ\",\n  \"Ẃ\": \"Ẃ\",\n  \"Ẁ\": \"Ẁ\",\n  \"Ẅ\": \"Ẅ\",\n  \"Ŵ\": \"Ŵ\",\n  \"Ẇ\": \"Ẇ\",\n  \"Ẍ\": \"Ẍ\",\n  \"Ẋ\": \"Ẋ\",\n  \"Ý\": \"Ý\",\n  \"Ỳ\": \"Ỳ\",\n  \"Ÿ\": \"Ÿ\",\n  \"Ỹ\": \"Ỹ\",\n  \"Ȳ\": \"Ȳ\",\n  \"Ŷ\": \"Ŷ\",\n  \"Ẏ\": \"Ẏ\",\n  \"Ź\": \"Ź\",\n  \"Ž\": \"Ž\",\n  \"Ẑ\": \"Ẑ\",\n  \"Ż\": \"Ż\",\n  \"ά\": \"ά\",\n  \"ὰ\": \"ὰ\",\n  \"ᾱ\": \"ᾱ\",\n  \"ᾰ\": \"ᾰ\",\n  \"έ\": \"έ\",\n  \"ὲ\": \"ὲ\",\n  \"ή\": \"ή\",\n  \"ὴ\": \"ὴ\",\n  \"ί\": \"ί\",\n  \"ὶ\": \"ὶ\",\n  \"ϊ\": \"ϊ\",\n  \"ΐ\": \"ΐ\",\n  \"ῒ\": \"ῒ\",\n  \"ῑ\": \"ῑ\",\n  \"ῐ\": \"ῐ\",\n  \"ό\": \"ό\",\n  \"ὸ\": \"ὸ\",\n  \"ύ\": \"ύ\",\n  \"ὺ\": \"ὺ\",\n  \"ϋ\": \"ϋ\",\n  \"ΰ\": \"ΰ\",\n  \"ῢ\": \"ῢ\",\n  \"ῡ\": \"ῡ\",\n  \"ῠ\": \"ῠ\",\n  \"ώ\": \"ώ\",\n  \"ὼ\": \"ὼ\",\n  \"Ύ\": \"Ύ\",\n  \"Ὺ\": \"Ὺ\",\n  \"Ϋ\": \"Ϋ\",\n  \"Ῡ\": \"Ῡ\",\n  \"Ῠ\": \"Ῠ\",\n  \"Ώ\": \"Ώ\",\n  \"Ὼ\": \"Ὼ\"\n};\n\n/**\n * This file contains the parser used to parse out a TeX expression from the\n * input. Since TeX isn't context-free, standard parsers don't work particularly\n * well.\n *\n * The strategy of this parser is as such:\n *\n * The main functions (the `.parse...` ones) take a position in the current\n * parse string to parse tokens from. The lexer (found in Lexer.js, stored at\n * this.gullet.lexer) also supports pulling out tokens at arbitrary places. When\n * individual tokens are needed at a position, the lexer is called to pull out a\n * token, which is then used.\n *\n * The parser has a property called \"mode\" indicating the mode that\n * the parser is currently in. Currently it has to be one of \"math\" or\n * \"text\", which denotes whether the current environment is a math-y\n * one or a text-y one (e.g. inside \\text). Currently, this serves to\n * limit the functions which can be used in text mode.\n *\n * The main functions then return an object which contains the useful data that\n * was parsed at its given point, and a new position at the end of the parsed\n * data. The main functions can call each other and continue the parsing by\n * using the returned position as a new starting point.\n *\n * There are also extra `.handle...` functions, which pull out some reused\n * functionality into self-contained functions.\n *\n * The functions return ParseNodes.\n */\nclass Parser {\n  constructor(input, settings) {\n    this.mode = void 0;\n    this.gullet = void 0;\n    this.settings = void 0;\n    this.leftrightDepth = void 0;\n    this.nextToken = void 0;\n    // Start in math mode\n    this.mode = \"math\"; // Create a new macro expander (gullet) and (indirectly via that) also a\n    // new lexer (mouth) for this parser (stomach, in the language of TeX)\n\n    this.gullet = new MacroExpander(input, settings, this.mode); // Store the settings for use in parsing\n\n    this.settings = settings; // Count leftright depth (for \\middle errors)\n\n    this.leftrightDepth = 0;\n  }\n  /**\n   * Checks a result to make sure it has the right type, and throws an\n   * appropriate error otherwise.\n   */\n\n\n  expect(text, consume) {\n    if (consume === void 0) {\n      consume = true;\n    }\n\n    if (this.fetch().text !== text) {\n      throw new src_ParseError(\"Expected '\" + text + \"', got '\" + this.fetch().text + \"'\", this.fetch());\n    }\n\n    if (consume) {\n      this.consume();\n    }\n  }\n  /**\n   * Discards the current lookahead token, considering it consumed.\n   */\n\n\n  consume() {\n    this.nextToken = null;\n  }\n  /**\n   * Return the current lookahead token, or if there isn't one (at the\n   * beginning, or if the previous lookahead token was consume()d),\n   * fetch the next token as the new lookahead token and return it.\n   */\n\n\n  fetch() {\n    if (this.nextToken == null) {\n      this.nextToken = this.gullet.expandNextToken();\n    }\n\n    return this.nextToken;\n  }\n  /**\n   * Switches between \"text\" and \"math\" modes.\n   */\n\n\n  switchMode(newMode) {\n    this.mode = newMode;\n    this.gullet.switchMode(newMode);\n  }\n  /**\n   * Main parsing function, which parses an entire input.\n   */\n\n\n  parse() {\n    if (!this.settings.globalGroup) {\n      // Create a group namespace for the math expression.\n      // (LaTeX creates a new group for every $...$, $$...$$, \\[...\\].)\n      this.gullet.beginGroup();\n    } // Use old \\color behavior (same as LaTeX's \\textcolor) if requested.\n    // We do this within the group for the math expression, so it doesn't\n    // pollute settings.macros.\n\n\n    if (this.settings.colorIsTextColor) {\n      this.gullet.macros.set(\"\\\\color\", \"\\\\textcolor\");\n    }\n\n    try {\n      // Try to parse the input\n      const parse = this.parseExpression(false); // If we succeeded, make sure there's an EOF at the end\n\n      this.expect(\"EOF\"); // End the group namespace for the expression\n\n      if (!this.settings.globalGroup) {\n        this.gullet.endGroup();\n      }\n\n      return parse; // Close any leftover groups in case of a parse error.\n    } finally {\n      this.gullet.endGroups();\n    }\n  }\n  /**\n   * Fully parse a separate sequence of tokens as a separate job.\n   * Tokens should be specified in reverse order, as in a MacroDefinition.\n   */\n\n\n  subparse(tokens) {\n    // Save the next token from the current job.\n    const oldToken = this.nextToken;\n    this.consume(); // Run the new job, terminating it with an excess '}'\n\n    this.gullet.pushToken(new Token(\"}\"));\n    this.gullet.pushTokens(tokens);\n    const parse = this.parseExpression(false);\n    this.expect(\"}\"); // Restore the next token from the current job.\n\n    this.nextToken = oldToken;\n    return parse;\n  }\n\n  /**\n   * Parses an \"expression\", which is a list of atoms.\n   *\n   * `breakOnInfix`: Should the parsing stop when we hit infix nodes? This\n   *                 happens when functions have higher precedence han infix\n   *                 nodes in implicit parses.\n   *\n   * `breakOnTokenText`: The text of the token that the expression should end\n   *                     with, or `null` if something else should end the\n   *                     expression.\n   */\n  parseExpression(breakOnInfix, breakOnTokenText) {\n    const body = []; // Keep adding atoms to the body until we can't parse any more atoms (either\n    // we reached the end, a }, or a \\right)\n\n    while (true) {\n      // Ignore spaces in math mode\n      if (this.mode === \"math\") {\n        this.consumeSpaces();\n      }\n\n      const lex = this.fetch();\n\n      if (Parser.endOfExpression.indexOf(lex.text) !== -1) {\n        break;\n      }\n\n      if (breakOnTokenText && lex.text === breakOnTokenText) {\n        break;\n      }\n\n      if (breakOnInfix && src_functions[lex.text] && src_functions[lex.text].infix) {\n        break;\n      }\n\n      const atom = this.parseAtom(breakOnTokenText);\n\n      if (!atom) {\n        break;\n      } else if (atom.type === \"internal\") {\n        continue;\n      }\n\n      body.push(atom);\n    }\n\n    if (this.mode === \"text\") {\n      this.formLigatures(body);\n    }\n\n    return this.handleInfixNodes(body);\n  }\n  /**\n   * Rewrites infix operators such as \\over with corresponding commands such\n   * as \\frac.\n   *\n   * There can only be one infix operator per group.  If there's more than one\n   * then the expression is ambiguous.  This can be resolved by adding {}.\n   */\n\n\n  handleInfixNodes(body) {\n    let overIndex = -1;\n    let funcName;\n\n    for (let i = 0; i < body.length; i++) {\n      if (body[i].type === \"infix\") {\n        if (overIndex !== -1) {\n          throw new src_ParseError(\"only one infix operator per group\", body[i].token);\n        }\n\n        overIndex = i;\n        funcName = body[i].replaceWith;\n      }\n    }\n\n    if (overIndex !== -1 && funcName) {\n      let numerNode;\n      let denomNode;\n      const numerBody = body.slice(0, overIndex);\n      const denomBody = body.slice(overIndex + 1);\n\n      if (numerBody.length === 1 && numerBody[0].type === \"ordgroup\") {\n        numerNode = numerBody[0];\n      } else {\n        numerNode = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: numerBody\n        };\n      }\n\n      if (denomBody.length === 1 && denomBody[0].type === \"ordgroup\") {\n        denomNode = denomBody[0];\n      } else {\n        denomNode = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: denomBody\n        };\n      }\n\n      let node;\n\n      if (funcName === \"\\\\\\\\abovefrac\") {\n        node = this.callFunction(funcName, [numerNode, body[overIndex], denomNode], []);\n      } else {\n        node = this.callFunction(funcName, [numerNode, denomNode], []);\n      }\n\n      return [node];\n    } else {\n      return body;\n    }\n  }\n  /**\n   * Handle a subscript or superscript with nice errors.\n   */\n\n\n  handleSupSubscript(name // For error reporting.\n  ) {\n    const symbolToken = this.fetch();\n    const symbol = symbolToken.text;\n    this.consume();\n    this.consumeSpaces(); // ignore spaces before sup/subscript argument\n\n    const group = this.parseGroup(name);\n\n    if (!group) {\n      throw new src_ParseError(\"Expected group after '\" + symbol + \"'\", symbolToken);\n    }\n\n    return group;\n  }\n  /**\n   * Converts the textual input of an unsupported command into a text node\n   * contained within a color node whose color is determined by errorColor\n   */\n\n\n  formatUnsupportedCmd(text) {\n    const textordArray = [];\n\n    for (let i = 0; i < text.length; i++) {\n      textordArray.push({\n        type: \"textord\",\n        mode: \"text\",\n        text: text[i]\n      });\n    }\n\n    const textNode = {\n      type: \"text\",\n      mode: this.mode,\n      body: textordArray\n    };\n    const colorNode = {\n      type: \"color\",\n      mode: this.mode,\n      color: this.settings.errorColor,\n      body: [textNode]\n    };\n    return colorNode;\n  }\n  /**\n   * Parses a group with optional super/subscripts.\n   */\n\n\n  parseAtom(breakOnTokenText) {\n    // The body of an atom is an implicit group, so that things like\n    // \\left(x\\right)^2 work correctly.\n    const base = this.parseGroup(\"atom\", breakOnTokenText); // In text mode, we don't have superscripts or subscripts\n\n    if (this.mode === \"text\") {\n      return base;\n    } // Note that base may be empty (i.e. null) at this point.\n\n\n    let superscript;\n    let subscript;\n\n    while (true) {\n      // Guaranteed in math mode, so eat any spaces first.\n      this.consumeSpaces(); // Lex the first token\n\n      const lex = this.fetch();\n\n      if (lex.text === \"\\\\limits\" || lex.text === \"\\\\nolimits\") {\n        // We got a limit control\n        if (base && base.type === \"op\") {\n          const limits = lex.text === \"\\\\limits\";\n          base.limits = limits;\n          base.alwaysHandleSupSub = true;\n        } else if (base && base.type === \"operatorname\") {\n          if (base.alwaysHandleSupSub) {\n            base.limits = lex.text === \"\\\\limits\";\n          }\n        } else {\n          throw new src_ParseError(\"Limit controls must follow a math operator\", lex);\n        }\n\n        this.consume();\n      } else if (lex.text === \"^\") {\n        // We got a superscript start\n        if (superscript) {\n          throw new src_ParseError(\"Double superscript\", lex);\n        }\n\n        superscript = this.handleSupSubscript(\"superscript\");\n      } else if (lex.text === \"_\") {\n        // We got a subscript start\n        if (subscript) {\n          throw new src_ParseError(\"Double subscript\", lex);\n        }\n\n        subscript = this.handleSupSubscript(\"subscript\");\n      } else if (lex.text === \"'\") {\n        // We got a prime\n        if (superscript) {\n          throw new src_ParseError(\"Double superscript\", lex);\n        }\n\n        const prime = {\n          type: \"textord\",\n          mode: this.mode,\n          text: \"\\\\prime\"\n        }; // Many primes can be grouped together, so we handle this here\n\n        const primes = [prime];\n        this.consume(); // Keep lexing tokens until we get something that's not a prime\n\n        while (this.fetch().text === \"'\") {\n          // For each one, add another prime to the list\n          primes.push(prime);\n          this.consume();\n        } // If there's a superscript following the primes, combine that\n        // superscript in with the primes.\n\n\n        if (this.fetch().text === \"^\") {\n          primes.push(this.handleSupSubscript(\"superscript\"));\n        } // Put everything into an ordgroup as the superscript\n\n\n        superscript = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: primes\n        };\n      } else if (uSubsAndSups[lex.text]) {\n        // A Unicode subscript or superscript character.\n        // We treat these similarly to the unicode-math package.\n        // So we render a string of Unicode (sub|super)scripts the\n        // same as a (sub|super)script of regular characters.\n        const isSub = unicodeSubRegEx.test(lex.text);\n        const subsupTokens = [];\n        subsupTokens.push(new Token(uSubsAndSups[lex.text]));\n        this.consume(); // Continue fetching tokens to fill out the string.\n\n        while (true) {\n          const token = this.fetch().text;\n\n          if (!uSubsAndSups[token]) {\n            break;\n          }\n\n          if (unicodeSubRegEx.test(token) !== isSub) {\n            break;\n          }\n\n          subsupTokens.unshift(new Token(uSubsAndSups[token]));\n          this.consume();\n        } // Now create a (sub|super)script.\n\n\n        const body = this.subparse(subsupTokens);\n\n        if (isSub) {\n          subscript = {\n            type: \"ordgroup\",\n            mode: \"math\",\n            body\n          };\n        } else {\n          superscript = {\n            type: \"ordgroup\",\n            mode: \"math\",\n            body\n          };\n        }\n      } else {\n        // If it wasn't ^, _, or ', stop parsing super/subscripts\n        break;\n      }\n    } // Base must be set if superscript or subscript are set per logic above,\n    // but need to check here for type check to pass.\n\n\n    if (superscript || subscript) {\n      // If we got either a superscript or subscript, create a supsub\n      return {\n        type: \"supsub\",\n        mode: this.mode,\n        base: base,\n        sup: superscript,\n        sub: subscript\n      };\n    } else {\n      // Otherwise return the original body\n      return base;\n    }\n  }\n  /**\n   * Parses an entire function, including its base and all of its arguments.\n   */\n\n\n  parseFunction(breakOnTokenText, name // For determining its context\n  ) {\n    const token = this.fetch();\n    const func = token.text;\n    const funcData = src_functions[func];\n\n    if (!funcData) {\n      return null;\n    }\n\n    this.consume(); // consume command token\n\n    if (name && name !== \"atom\" && !funcData.allowedInArgument) {\n      throw new src_ParseError(\"Got function '\" + func + \"' with no arguments\" + (name ? \" as \" + name : \"\"), token);\n    } else if (this.mode === \"text\" && !funcData.allowedInText) {\n      throw new src_ParseError(\"Can't use function '\" + func + \"' in text mode\", token);\n    } else if (this.mode === \"math\" && funcData.allowedInMath === false) {\n      throw new src_ParseError(\"Can't use function '\" + func + \"' in math mode\", token);\n    }\n\n    const {\n      args,\n      optArgs\n    } = this.parseArguments(func, funcData);\n    return this.callFunction(func, args, optArgs, token, breakOnTokenText);\n  }\n  /**\n   * Call a function handler with a suitable context and arguments.\n   */\n\n\n  callFunction(name, args, optArgs, token, breakOnTokenText) {\n    const context = {\n      funcName: name,\n      parser: this,\n      token,\n      breakOnTokenText\n    };\n    const func = src_functions[name];\n\n    if (func && func.handler) {\n      return func.handler(context, args, optArgs);\n    } else {\n      throw new src_ParseError(\"No function handler for \" + name);\n    }\n  }\n  /**\n   * Parses the arguments of a function or environment\n   */\n\n\n  parseArguments(func, // Should look like \"\\name\" or \"\\begin{name}\".\n  funcData) {\n    const totalArgs = funcData.numArgs + funcData.numOptionalArgs;\n\n    if (totalArgs === 0) {\n      return {\n        args: [],\n        optArgs: []\n      };\n    }\n\n    const args = [];\n    const optArgs = [];\n\n    for (let i = 0; i < totalArgs; i++) {\n      let argType = funcData.argTypes && funcData.argTypes[i];\n      const isOptional = i < funcData.numOptionalArgs;\n\n      if (funcData.primitive && argType == null || // \\sqrt expands into primitive if optional argument doesn't exist\n      funcData.type === \"sqrt\" && i === 1 && optArgs[0] == null) {\n        argType = \"primitive\";\n      }\n\n      const arg = this.parseGroupOfType(\"argument to '\" + func + \"'\", argType, isOptional);\n\n      if (isOptional) {\n        optArgs.push(arg);\n      } else if (arg != null) {\n        args.push(arg);\n      } else {\n        // should be unreachable\n        throw new src_ParseError(\"Null argument, please report this as a bug\");\n      }\n    }\n\n    return {\n      args,\n      optArgs\n    };\n  }\n  /**\n   * Parses a group when the mode is changing.\n   */\n\n\n  parseGroupOfType(name, type, optional) {\n    switch (type) {\n      case \"color\":\n        return this.parseColorGroup(optional);\n\n      case \"size\":\n        return this.parseSizeGroup(optional);\n\n      case \"url\":\n        return this.parseUrlGroup(optional);\n\n      case \"math\":\n      case \"text\":\n        return this.parseArgumentGroup(optional, type);\n\n      case \"hbox\":\n        {\n          // hbox argument type wraps the argument in the equivalent of\n          // \\hbox, which is like \\text but switching to \\textstyle size.\n          const group = this.parseArgumentGroup(optional, \"text\");\n          return group != null ? {\n            type: \"styling\",\n            mode: group.mode,\n            body: [group],\n            style: \"text\" // simulate \\textstyle\n\n          } : null;\n        }\n\n      case \"raw\":\n        {\n          const token = this.parseStringGroup(\"raw\", optional);\n          return token != null ? {\n            type: \"raw\",\n            mode: \"text\",\n            string: token.text\n          } : null;\n        }\n\n      case \"primitive\":\n        {\n          if (optional) {\n            throw new src_ParseError(\"A primitive argument cannot be optional\");\n          }\n\n          const group = this.parseGroup(name);\n\n          if (group == null) {\n            throw new src_ParseError(\"Expected group as \" + name, this.fetch());\n          }\n\n          return group;\n        }\n\n      case \"original\":\n      case null:\n      case undefined:\n        return this.parseArgumentGroup(optional);\n\n      default:\n        throw new src_ParseError(\"Unknown group type as \" + name, this.fetch());\n    }\n  }\n  /**\n   * Discard any space tokens, fetching the next non-space token.\n   */\n\n\n  consumeSpaces() {\n    while (this.fetch().text === \" \") {\n      this.consume();\n    }\n  }\n  /**\n   * Parses a group, essentially returning the string formed by the\n   * brace-enclosed tokens plus some position information.\n   */\n\n\n  parseStringGroup(modeName, // Used to describe the mode in error messages.\n  optional) {\n    const argToken = this.gullet.scanArgument(optional);\n\n    if (argToken == null) {\n      return null;\n    }\n\n    let str = \"\";\n    let nextToken;\n\n    while ((nextToken = this.fetch()).text !== \"EOF\") {\n      str += nextToken.text;\n      this.consume();\n    }\n\n    this.consume(); // consume the end of the argument\n\n    argToken.text = str;\n    return argToken;\n  }\n  /**\n   * Parses a regex-delimited group: the largest sequence of tokens\n   * whose concatenated strings match `regex`. Returns the string\n   * formed by the tokens plus some position information.\n   */\n\n\n  parseRegexGroup(regex, modeName // Used to describe the mode in error messages.\n  ) {\n    const firstToken = this.fetch();\n    let lastToken = firstToken;\n    let str = \"\";\n    let nextToken;\n\n    while ((nextToken = this.fetch()).text !== \"EOF\" && regex.test(str + nextToken.text)) {\n      lastToken = nextToken;\n      str += lastToken.text;\n      this.consume();\n    }\n\n    if (str === \"\") {\n      throw new src_ParseError(\"Invalid \" + modeName + \": '\" + firstToken.text + \"'\", firstToken);\n    }\n\n    return firstToken.range(lastToken, str);\n  }\n  /**\n   * Parses a color description.\n   */\n\n\n  parseColorGroup(optional) {\n    const res = this.parseStringGroup(\"color\", optional);\n\n    if (res == null) {\n      return null;\n    }\n\n    const match = /^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(res.text);\n\n    if (!match) {\n      throw new src_ParseError(\"Invalid color: '\" + res.text + \"'\", res);\n    }\n\n    let color = match[0];\n\n    if (/^[0-9a-f]{6}$/i.test(color)) {\n      // We allow a 6-digit HTML color spec without a leading \"#\".\n      // This follows the xcolor package's HTML color model.\n      // Predefined color names are all missed by this RegEx pattern.\n      color = \"#\" + color;\n    }\n\n    return {\n      type: \"color-token\",\n      mode: this.mode,\n      color\n    };\n  }\n  /**\n   * Parses a size specification, consisting of magnitude and unit.\n   */\n\n\n  parseSizeGroup(optional) {\n    let res;\n    let isBlank = false; // don't expand before parseStringGroup\n\n    this.gullet.consumeSpaces();\n\n    if (!optional && this.gullet.future().text !== \"{\") {\n      res = this.parseRegexGroup(/^[-+]? *(?:$|\\d+|\\d+\\.\\d*|\\.\\d*) *[a-z]{0,2} *$/, \"size\");\n    } else {\n      res = this.parseStringGroup(\"size\", optional);\n    }\n\n    if (!res) {\n      return null;\n    }\n\n    if (!optional && res.text.length === 0) {\n      // Because we've tested for what is !optional, this block won't\n      // affect \\kern, \\hspace, etc. It will capture the mandatory arguments\n      // to \\genfrac and \\above.\n      res.text = \"0pt\"; // Enable \\above{}\n\n      isBlank = true; // This is here specifically for \\genfrac\n    }\n\n    const match = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(res.text);\n\n    if (!match) {\n      throw new src_ParseError(\"Invalid size: '\" + res.text + \"'\", res);\n    }\n\n    const data = {\n      number: +(match[1] + match[2]),\n      // sign + magnitude, cast to number\n      unit: match[3]\n    };\n\n    if (!validUnit(data)) {\n      throw new src_ParseError(\"Invalid unit: '\" + data.unit + \"'\", res);\n    }\n\n    return {\n      type: \"size\",\n      mode: this.mode,\n      value: data,\n      isBlank\n    };\n  }\n  /**\n   * Parses an URL, checking escaped letters and allowed protocols,\n   * and setting the catcode of % as an active character (as in \\hyperref).\n   */\n\n\n  parseUrlGroup(optional) {\n    this.gullet.lexer.setCatcode(\"%\", 13); // active character\n\n    this.gullet.lexer.setCatcode(\"~\", 12); // other character\n\n    const res = this.parseStringGroup(\"url\", optional);\n    this.gullet.lexer.setCatcode(\"%\", 14); // comment character\n\n    this.gullet.lexer.setCatcode(\"~\", 13); // active character\n\n    if (res == null) {\n      return null;\n    } // hyperref package allows backslashes alone in href, but doesn't\n    // generate valid links in such cases; we interpret this as\n    // \"undefined\" behaviour, and keep them as-is. Some browser will\n    // replace backslashes with forward slashes.\n\n\n    const url = res.text.replace(/\\\\([#$%&~_^{}])/g, '$1');\n    return {\n      type: \"url\",\n      mode: this.mode,\n      url\n    };\n  }\n  /**\n   * Parses an argument with the mode specified.\n   */\n\n\n  parseArgumentGroup(optional, mode) {\n    const argToken = this.gullet.scanArgument(optional);\n\n    if (argToken == null) {\n      return null;\n    }\n\n    const outerMode = this.mode;\n\n    if (mode) {\n      // Switch to specified mode\n      this.switchMode(mode);\n    }\n\n    this.gullet.beginGroup();\n    const expression = this.parseExpression(false, \"EOF\"); // TODO: find an alternative way to denote the end\n\n    this.expect(\"EOF\"); // expect the end of the argument\n\n    this.gullet.endGroup();\n    const result = {\n      type: \"ordgroup\",\n      mode: this.mode,\n      loc: argToken.loc,\n      body: expression\n    };\n\n    if (mode) {\n      // Switch mode back\n      this.switchMode(outerMode);\n    }\n\n    return result;\n  }\n  /**\n   * Parses an ordinary group, which is either a single nucleus (like \"x\")\n   * or an expression in braces (like \"{x+y}\") or an implicit group, a group\n   * that starts at the current position, and ends right before a higher explicit\n   * group ends, or at EOF.\n   */\n\n\n  parseGroup(name, // For error reporting.\n  breakOnTokenText) {\n    const firstToken = this.fetch();\n    const text = firstToken.text;\n    let result; // Try to parse an open brace or \\begingroup\n\n    if (text === \"{\" || text === \"\\\\begingroup\") {\n      this.consume();\n      const groupEnd = text === \"{\" ? \"}\" : \"\\\\endgroup\";\n      this.gullet.beginGroup(); // If we get a brace, parse an expression\n\n      const expression = this.parseExpression(false, groupEnd);\n      const lastToken = this.fetch();\n      this.expect(groupEnd); // Check that we got a matching closing brace\n\n      this.gullet.endGroup();\n      result = {\n        type: \"ordgroup\",\n        mode: this.mode,\n        loc: SourceLocation.range(firstToken, lastToken),\n        body: expression,\n        // A group formed by \\begingroup...\\endgroup is a semi-simple group\n        // which doesn't affect spacing in math mode, i.e., is transparent.\n        // https://tex.stackexchange.com/questions/1930/when-should-one-\n        // use-begingroup-instead-of-bgroup\n        semisimple: text === \"\\\\begingroup\" || undefined\n      };\n    } else {\n      // If there exists a function with this name, parse the function.\n      // Otherwise, just return a nucleus\n      result = this.parseFunction(breakOnTokenText, name) || this.parseSymbol();\n\n      if (result == null && text[0] === \"\\\\\" && !implicitCommands.hasOwnProperty(text)) {\n        if (this.settings.throwOnError) {\n          throw new src_ParseError(\"Undefined control sequence: \" + text, firstToken);\n        }\n\n        result = this.formatUnsupportedCmd(text);\n        this.consume();\n      }\n    }\n\n    return result;\n  }\n  /**\n   * Form ligature-like combinations of characters for text mode.\n   * This includes inputs like \"--\", \"---\", \"``\" and \"''\".\n   * The result will simply replace multiple textord nodes with a single\n   * character in each value by a single textord node having multiple\n   * characters in its value.  The representation is still ASCII source.\n   * The group will be modified in place.\n   */\n\n\n  formLigatures(group) {\n    let n = group.length - 1;\n\n    for (let i = 0; i < n; ++i) {\n      const a = group[i]; // $FlowFixMe: Not every node type has a `text` property.\n\n      const v = a.text;\n\n      if (v === \"-\" && group[i + 1].text === \"-\") {\n        if (i + 1 < n && group[i + 2].text === \"-\") {\n          group.splice(i, 3, {\n            type: \"textord\",\n            mode: \"text\",\n            loc: SourceLocation.range(a, group[i + 2]),\n            text: \"---\"\n          });\n          n -= 2;\n        } else {\n          group.splice(i, 2, {\n            type: \"textord\",\n            mode: \"text\",\n            loc: SourceLocation.range(a, group[i + 1]),\n            text: \"--\"\n          });\n          n -= 1;\n        }\n      }\n\n      if ((v === \"'\" || v === \"`\") && group[i + 1].text === v) {\n        group.splice(i, 2, {\n          type: \"textord\",\n          mode: \"text\",\n          loc: SourceLocation.range(a, group[i + 1]),\n          text: v + v\n        });\n        n -= 1;\n      }\n    }\n  }\n  /**\n   * Parse a single symbol out of the string. Here, we handle single character\n   * symbols and special functions like \\verb.\n   */\n\n\n  parseSymbol() {\n    const nucleus = this.fetch();\n    let text = nucleus.text;\n\n    if (/^\\\\verb[^a-zA-Z]/.test(text)) {\n      this.consume();\n      let arg = text.slice(5);\n      const star = arg.charAt(0) === \"*\";\n\n      if (star) {\n        arg = arg.slice(1);\n      } // Lexer's tokenRegex is constructed to always have matching\n      // first/last characters.\n\n\n      if (arg.length < 2 || arg.charAt(0) !== arg.slice(-1)) {\n        throw new src_ParseError(\"\\\\verb assertion failed --\\n                    please report what input caused this bug\");\n      }\n\n      arg = arg.slice(1, -1); // remove first and last char\n\n      return {\n        type: \"verb\",\n        mode: \"text\",\n        body: arg,\n        star\n      };\n    } // At this point, we should have a symbol, possibly with accents.\n    // First expand any accented base symbol according to unicodeSymbols.\n\n\n    if (unicodeSymbols.hasOwnProperty(text[0]) && !src_symbols[this.mode][text[0]]) {\n      // This behavior is not strict (XeTeX-compatible) in math mode.\n      if (this.settings.strict && this.mode === \"math\") {\n        this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Accented Unicode text character \\\"\" + text[0] + \"\\\" used in \" + \"math mode\", nucleus);\n      }\n\n      text = unicodeSymbols[text[0]] + text.slice(1);\n    } // Strip off any combining characters\n\n\n    const match = combiningDiacriticalMarksEndRegex.exec(text);\n\n    if (match) {\n      text = text.substring(0, match.index);\n\n      if (text === 'i') {\n        text = '\\u0131'; // dotless i, in math and text mode\n      } else if (text === 'j') {\n        text = '\\u0237'; // dotless j, in math and text mode\n      }\n    } // Recognize base symbol\n\n\n    let symbol;\n\n    if (src_symbols[this.mode][text]) {\n      if (this.settings.strict && this.mode === 'math' && extraLatin.indexOf(text) >= 0) {\n        this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Latin-1/Unicode text character \\\"\" + text[0] + \"\\\" used in \" + \"math mode\", nucleus);\n      }\n\n      const group = src_symbols[this.mode][text].group;\n      const loc = SourceLocation.range(nucleus);\n      let s;\n\n      if (ATOMS.hasOwnProperty(group)) {\n        // $FlowFixMe\n        const family = group;\n        s = {\n          type: \"atom\",\n          mode: this.mode,\n          family,\n          loc,\n          text\n        };\n      } else {\n        // $FlowFixMe\n        s = {\n          type: group,\n          mode: this.mode,\n          loc,\n          text\n        };\n      } // $FlowFixMe\n\n\n      symbol = s;\n    } else if (text.charCodeAt(0) >= 0x80) {\n      // no symbol for e.g. ^\n      if (this.settings.strict) {\n        if (!supportedCodepoint(text.charCodeAt(0))) {\n          this.settings.reportNonstrict(\"unknownSymbol\", \"Unrecognized Unicode character \\\"\" + text[0] + \"\\\"\" + (\" (\" + text.charCodeAt(0) + \")\"), nucleus);\n        } else if (this.mode === \"math\") {\n          this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Unicode text character \\\"\" + text[0] + \"\\\" used in math mode\", nucleus);\n        }\n      } // All nonmathematical Unicode characters are rendered as if they\n      // are in text mode (wrapped in \\text) because that's what it\n      // takes to render them in LaTeX.  Setting `mode: this.mode` is\n      // another natural choice (the user requested math mode), but\n      // this makes it more difficult for getCharacterMetrics() to\n      // distinguish Unicode characters without metrics and those for\n      // which we want to simulate the letter M.\n\n\n      symbol = {\n        type: \"textord\",\n        mode: \"text\",\n        loc: SourceLocation.range(nucleus),\n        text\n      };\n    } else {\n      return null; // EOF, ^, _, {, }, etc.\n    }\n\n    this.consume(); // Transform combining characters into accents\n\n    if (match) {\n      for (let i = 0; i < match[0].length; i++) {\n        const accent = match[0][i];\n\n        if (!unicodeAccents[accent]) {\n          throw new src_ParseError(\"Unknown accent ' \" + accent + \"'\", nucleus);\n        }\n\n        const command = unicodeAccents[accent][this.mode] || unicodeAccents[accent].text;\n\n        if (!command) {\n          throw new src_ParseError(\"Accent \" + accent + \" unsupported in \" + this.mode + \" mode\", nucleus);\n        }\n\n        symbol = {\n          type: \"accent\",\n          mode: this.mode,\n          loc: SourceLocation.range(nucleus),\n          label: command,\n          isStretchy: false,\n          isShifty: true,\n          // $FlowFixMe\n          base: symbol\n        };\n      }\n    } // $FlowFixMe\n\n\n    return symbol;\n  }\n\n}\nParser.endOfExpression = [\"}\", \"\\\\endgroup\", \"\\\\end\", \"\\\\right\", \"&\"];\n;// CONCATENATED MODULE: ./src/parseTree.js\n/**\n * Provides a single function for parsing an expression using a Parser\n * TODO(emily): Remove this\n */\n\n\n\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nconst parseTree = function (toParse, settings) {\n  if (!(typeof toParse === 'string' || toParse instanceof String)) {\n    throw new TypeError('KaTeX can only parse string typed expression');\n  }\n\n  const parser = new Parser(toParse, settings); // Blank out any \\df@tag to avoid spurious \"Duplicate \\tag\" errors\n\n  delete parser.gullet.macros.current[\"\\\\df@tag\"];\n  let tree = parser.parse(); // Prevent a color definition from persisting between calls to katex.render().\n\n  delete parser.gullet.macros.current[\"\\\\current@color\"];\n  delete parser.gullet.macros.current[\"\\\\color\"]; // If the input used \\tag, it will set the \\df@tag macro to the tag.\n  // In this case, we separately parse the tag and wrap the tree.\n\n  if (parser.gullet.macros.get(\"\\\\df@tag\")) {\n    if (!settings.displayMode) {\n      throw new src_ParseError(\"\\\\tag works only in display equations\");\n    }\n\n    tree = [{\n      type: \"tag\",\n      mode: \"text\",\n      body: tree,\n      tag: parser.subparse([new Token(\"\\\\df@tag\")])\n    }];\n  }\n\n  return tree;\n};\n\n/* harmony default export */ var src_parseTree = (parseTree);\n;// CONCATENATED MODULE: ./katex.js\n/* eslint no-console:0 */\n\n/**\n * This is the main entry point for KaTeX. Here, we expose functions for\n * rendering expressions either to DOM nodes or to markup strings.\n *\n * We also expose the ParseError class to check if errors thrown from KaTeX are\n * errors in the expression, or errors in javascript handling.\n */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Parse and build an expression, and place that expression in the DOM node\n * given.\n */\nlet render = function (expression, baseNode, options) {\n  baseNode.textContent = \"\";\n  const node = renderToDomTree(expression, options).toNode();\n  baseNode.appendChild(node);\n}; // KaTeX's styles don't work properly in quirks mode. Print out an error, and\n// disable rendering.\n\n\nif (typeof document !== \"undefined\") {\n  if (document.compatMode !== \"CSS1Compat\") {\n    typeof console !== \"undefined\" && console.warn(\"Warning: KaTeX doesn't work in quirks mode. Make sure your \" + \"website has a suitable doctype.\");\n\n    render = function () {\n      throw new src_ParseError(\"KaTeX doesn't work in quirks mode.\");\n    };\n  }\n}\n/**\n * Parse and build an expression, and return the markup for that.\n */\n\n\nconst renderToString = function (expression, options) {\n  const markup = renderToDomTree(expression, options).toMarkup();\n  return markup;\n};\n/**\n * Parse an expression and return the parse tree.\n */\n\n\nconst generateParseTree = function (expression, options) {\n  const settings = new Settings(options);\n  return src_parseTree(expression, settings);\n};\n/**\n * If the given error is a KaTeX ParseError and options.throwOnError is false,\n * renders the invalid LaTeX as a span with hover title giving the KaTeX\n * error message.  Otherwise, simply throws the error.\n */\n\n\nconst renderError = function (error, expression, options) {\n  if (options.throwOnError || !(error instanceof src_ParseError)) {\n    throw error;\n  }\n\n  const node = buildCommon.makeSpan([\"katex-error\"], [new SymbolNode(expression)]);\n  node.setAttribute(\"title\", error.toString());\n  node.setAttribute(\"style\", \"color:\" + options.errorColor);\n  return node;\n};\n/**\n * Generates and returns the katex build tree. This is used for advanced\n * use cases (like rendering to custom output).\n */\n\n\nconst renderToDomTree = function (expression, options) {\n  const settings = new Settings(options);\n\n  try {\n    const tree = src_parseTree(expression, settings);\n    return buildTree(tree, expression, settings);\n  } catch (error) {\n    return renderError(error, expression, settings);\n  }\n};\n/**\n * Generates and returns the katex build tree, with just HTML (no MathML).\n * This is used for advanced use cases (like rendering to custom output).\n */\n\n\nconst renderToHTMLTree = function (expression, options) {\n  const settings = new Settings(options);\n\n  try {\n    const tree = src_parseTree(expression, settings);\n    return buildHTMLTree(tree, expression, settings);\n  } catch (error) {\n    return renderError(error, expression, settings);\n  }\n};\n\nconst version = \"0.16.21\";\nconst __domTree = {\n  Span: Span,\n  Anchor: Anchor,\n  SymbolNode: SymbolNode,\n  SvgNode: SvgNode,\n  PathNode: PathNode,\n  LineNode: LineNode\n}; // ESM exports\n\n // CJS exports and ESM default export\n\n/* harmony default export */ var katex = ({\n  /**\n   * Current KaTeX version\n   */\n  version,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML combination, and adds\n   * it as a child to the specified DOM node.\n   */\n  render,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML combination string,\n   * for sending to the client.\n   */\n  renderToString,\n\n  /**\n   * KaTeX error, usually during parsing.\n   */\n  ParseError: src_ParseError,\n\n  /**\n   * The schema of Settings\n   */\n  SETTINGS_SCHEMA: SETTINGS_SCHEMA,\n\n  /**\n   * Parses the given LaTeX into KaTeX's internal parse tree structure,\n   * without rendering to HTML or MathML.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __parse: generateParseTree,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML internal DOM tree\n   * representation, without flattening that representation to a string.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __renderToDomTree: renderToDomTree,\n\n  /**\n   * Renders the given LaTeX into an HTML internal DOM tree representation,\n   * without MathML and without flattening that representation to a string.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __renderToHTMLTree: renderToHTMLTree,\n\n  /**\n   * extends internal font metrics object with a new object\n   * each key in the new object represents a font name\n  */\n  __setFontMetrics: setFontMetrics,\n\n  /**\n   * adds a new symbol to builtin symbols table\n   */\n  __defineSymbol: defineSymbol,\n\n  /**\n   * adds a new function to builtin function list,\n   * which directly produce parse tree elements\n   * and have their own html/mathml builders\n   */\n  __defineFunction: defineFunction,\n\n  /**\n   * adds a new macro to builtin macro list\n   */\n  __defineMacro: defineMacro,\n\n  /**\n   * Expose the dom tree node types, which can be useful for type checking nodes.\n   *\n   * NOTE: These methods are not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __domTree\n});\n;// CONCATENATED MODULE: ./katex.webpack.js\n/**\n * This is the webpack entry point for KaTeX. As ECMAScript, flow[1] and jest[2]\n * doesn't support CSS modules natively, a separate entry point is used and\n * it is not flowtyped.\n *\n * [1] https://gist.github.com/lambdahands/d19e0da96285b749f0ef\n * [2] https://facebook.github.io/jest/docs/en/webpack.html\n */\n\n\n/* harmony default export */ var katex_webpack = (katex);\n__webpack_exports__ = __webpack_exports__[\"default\"];\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst katex_1 = __importDefault(require(\"katex\"));\n/**\n * Test if potential opening or closing delimiter\n */\nfunction isValidInlineDelim(state, pos) {\n    const prevChar = state.src[pos - 1];\n    const char = state.src[pos];\n    const nextChar = state.src[pos + 1];\n    if (char !== '$') {\n        return { can_open: false, can_close: false };\n    }\n    let canOpen = false;\n    let canClose = false;\n    if (prevChar !== '$' && prevChar !== '\\\\' && (prevChar === undefined || isWhitespace(prevChar) || !isWordCharacterOrNumber(prevChar))) {\n        canOpen = true;\n    }\n    if (nextChar !== '$' && (nextChar == undefined || isWhitespace(nextChar) || !isWordCharacterOrNumber(nextChar))) {\n        canClose = true;\n    }\n    return { can_open: canOpen, can_close: canClose };\n}\nfunction isWhitespace(char) {\n    return /^\\s$/u.test(char);\n}\nfunction isWordCharacterOrNumber(char) {\n    return /^[\\w\\d]$/u.test(char);\n}\nfunction isValidBlockDelim(state, pos) {\n    const prevChar = state.src[pos - 1];\n    const char = state.src[pos];\n    const nextChar = state.src[pos + 1];\n    const nextCharPlus1 = state.src[pos + 2];\n    if (char === '$'\n        && prevChar !== '$' && prevChar !== '\\\\'\n        && nextChar === '$'\n        && nextCharPlus1 !== '$') {\n        return { can_open: true, can_close: true };\n    }\n    return { can_open: false, can_close: false };\n}\nfunction inlineMath(state, silent) {\n    if (state.src[state.pos] !== \"$\") {\n        return false;\n    }\n    const lastToken = state.tokens.at(-1);\n    if (lastToken?.type === 'html_inline') {\n        // We may be inside of inside of inline html\n        if (/^<\\w+.+[^/]>$/.test(lastToken.content)) {\n            return false;\n        }\n    }\n    let res = isValidInlineDelim(state, state.pos);\n    if (!res.can_open) {\n        if (!silent) {\n            state.pending += \"$\";\n        }\n        state.pos += 1;\n        return true;\n    }\n    // First check for and bypass all properly escaped delimieters\n    // This loop will assume that the first leading backtick can not\n    // be the first character in state.src, which is known since\n    // we have found an opening delimieter already.\n    let start = state.pos + 1;\n    let match = start;\n    let pos;\n    while ((match = state.src.indexOf(\"$\", match)) !== -1) {\n        // Found potential $, look for escapes, pos will point to\n        // first non escape when complete\n        pos = match - 1;\n        while (state.src[pos] === \"\\\\\") {\n            pos -= 1;\n        }\n        // Even number of escapes, potential closing delimiter found\n        if (((match - pos) % 2) == 1) {\n            break;\n        }\n        match += 1;\n    }\n    // No closing delimter found.  Consume $ and continue.\n    if (match === -1) {\n        if (!silent) {\n            state.pending += \"$\";\n        }\n        state.pos = start;\n        return true;\n    }\n    // Check if we have empty content, ie: $$.  Do not parse.\n    if (match - start === 0) {\n        if (!silent) {\n            state.pending += \"$$\";\n        }\n        state.pos = start + 1;\n        return true;\n    }\n    // Check for valid closing delimiter\n    res = isValidInlineDelim(state, match);\n    if (!res.can_close) {\n        if (!silent) {\n            state.pending += \"$\";\n        }\n        state.pos = start;\n        return true;\n    }\n    if (!silent) {\n        const token = state.push('math_inline', 'math', 0);\n        token.markup = \"$\";\n        token.content = state.src.slice(start, match);\n    }\n    state.pos = match + 1;\n    return true;\n}\nfunction blockMath(state, start, end, silent) {\n    var lastLine, next, lastPos, found = false, token, pos = state.bMarks[start] + state.tShift[start], max = state.eMarks[start];\n    if (pos + 2 > max) {\n        return false;\n    }\n    if (state.src.slice(pos, pos + 2) !== '$$') {\n        return false;\n    }\n    pos += 2;\n    let firstLine = state.src.slice(pos, max);\n    if (silent) {\n        return true;\n    }\n    if (firstLine.trim().slice(-2) === '$$') {\n        // Single line expression\n        firstLine = firstLine.trim().slice(0, -2);\n        found = true;\n    }\n    for (next = start; !found;) {\n        next++;\n        if (next >= end) {\n            break;\n        }\n        pos = state.bMarks[next] + state.tShift[next];\n        max = state.eMarks[next];\n        if (pos < max && state.tShift[next] < state.blkIndent) {\n            // non-empty line with negative indent should stop the list:\n            break;\n        }\n        if (state.src.slice(pos, max).trim().slice(-2) === '$$') {\n            lastPos = state.src.slice(0, max).lastIndexOf('$$');\n            lastLine = state.src.slice(pos, lastPos);\n            found = true;\n        }\n        else if (state.src.slice(pos, max).trim().includes('$$')) {\n            lastPos = state.src.slice(0, max).trim().indexOf('$$');\n            lastLine = state.src.slice(pos, lastPos);\n            found = true;\n        }\n    }\n    state.line = next + 1;\n    token = state.push('math_block', 'math', 0);\n    token.block = true;\n    token.content = (firstLine && firstLine.trim() ? firstLine + '\\n' : '')\n        + state.getLines(start + 1, next, state.tShift[start], true)\n        + (lastLine && lastLine.trim() ? lastLine : '');\n    token.map = [start, state.line];\n    token.markup = '$$';\n    return true;\n}\nfunction blockBareMath(state, start, end, silent) {\n    const startPos = state.bMarks[start] + state.tShift[start];\n    const startMax = state.eMarks[start];\n    const firstLine = state.src.slice(startPos, startMax);\n    const beginMatch = firstLine.match(/^\\s*\\\\begin\\s*\\{([^{}]+)\\}/);\n    if (!beginMatch) {\n        return false;\n    }\n    if (start > 0) {\n        // Previous line must be blank for bare blocks. There are instead handled by inlineBareBlock\n        const previousStart = state.bMarks[start - 1] + state.tShift[start - 1];\n        const previousEnd = state.eMarks[start - 1];\n        const previousLine = state.src.slice(previousStart, previousEnd);\n        if (!/^\\s*$/.test(previousLine)) {\n            return false;\n        }\n    }\n    if (silent) {\n        return true;\n    }\n    const beginEndStack = [];\n    let next = start;\n    let lastLine;\n    let found = false;\n    outer: for (; !found; next++) {\n        if (next >= end) {\n            break;\n        }\n        const pos = state.bMarks[next] + state.tShift[next];\n        const max = state.eMarks[next];\n        if (pos < max && state.tShift[next] < state.blkIndent) {\n            // non-empty line with negative indent should stop the list:\n            break;\n        }\n        const line = state.src.slice(pos, max);\n        for (const match of line.matchAll(/(\\\\begin|\\\\end)\\s*\\{([^{}]+)\\}/g)) {\n            if (match[1] === '\\\\begin') {\n                beginEndStack.push(match[2].trim());\n            }\n            else if (match[1] === '\\\\end') {\n                beginEndStack.pop();\n                if (!beginEndStack.length) {\n                    lastLine = state.src.slice(pos, max);\n                    found = true;\n                    break outer;\n                }\n            }\n        }\n    }\n    state.line = next + 1;\n    const token = state.push('math_block', 'math', 0);\n    token.block = true;\n    token.content = (state.getLines(start, next, state.tShift[start], true) + (lastLine ?? '')).trim();\n    token.map = [start, state.line];\n    token.markup = '$$';\n    return true;\n}\nfunction inlineMathBlock(state, silent) {\n    var start, match, token, res, pos;\n    if (state.src.slice(state.pos, state.pos + 2) !== \"$$\") {\n        return false;\n    }\n    res = isValidBlockDelim(state, state.pos);\n    if (!res.can_open) {\n        if (!silent) {\n            state.pending += \"$$\";\n        }\n        state.pos += 2;\n        return true;\n    }\n    // First check for and bypass all properly escaped delimieters\n    // This loop will assume that the first leading backtick can not\n    // be the first character in state.src, which is known since\n    // we have found an opening delimieter already.\n    start = state.pos + 2;\n    match = start;\n    while ((match = state.src.indexOf(\"$$\", match)) !== -1) {\n        // Found potential $$, look for escapes, pos will point to\n        // first non escape when complete\n        pos = match - 1;\n        while (state.src[pos] === \"\\\\\") {\n            pos -= 1;\n        }\n        // Even number of escapes, potential closing delimiter found\n        if (((match - pos) % 2) == 1) {\n            break;\n        }\n        match += 2;\n    }\n    // No closing delimter found.  Consume $$ and continue.\n    if (match === -1) {\n        if (!silent) {\n            state.pending += \"$$\";\n        }\n        state.pos = start;\n        return true;\n    }\n    // Check if we have empty content, ie: $$$$.  Do not parse.\n    if (match - start === 0) {\n        if (!silent) {\n            state.pending += \"$$$$\";\n        }\n        state.pos = start + 2;\n        return true;\n    }\n    // Check for valid closing delimiter\n    res = isValidBlockDelim(state, match);\n    if (!res.can_close) {\n        if (!silent) {\n            state.pending += \"$$\";\n        }\n        state.pos = start;\n        return true;\n    }\n    if (!silent) {\n        token = state.push('math_block', 'math', 0);\n        token.block = true;\n        token.markup = \"$$\";\n        token.content = state.src.slice(start, match);\n    }\n    state.pos = match + 2;\n    return true;\n}\nfunction inlineBareBlock(state, silent) {\n    const text = state.src.slice(state.pos);\n    // Make sure this is not a normal bare block\n    if (!/^\\n\\\\begin/.test(text)) {\n        return false;\n    }\n    state.pos += 1;\n    if (silent) {\n        return true;\n    }\n    const lines = text.split(/\\n/g).slice(1);\n    let foundLine;\n    const beginEndStack = [];\n    outer: for (var i = 0; i < lines.length; ++i) {\n        const line = lines[i];\n        for (const match of line.matchAll(/(\\\\begin|\\\\end)\\s*\\{([^{}]+)\\}/g)) {\n            if (match[1] === '\\\\begin') {\n                beginEndStack.push(match[2].trim());\n            }\n            else if (match[1] === '\\\\end') {\n                beginEndStack.pop();\n                if (!beginEndStack.length) {\n                    foundLine = i;\n                    break outer;\n                }\n            }\n        }\n    }\n    if (typeof foundLine === 'undefined') {\n        return false;\n    }\n    const endIndex = lines.slice(0, foundLine + 1).reduce((p, c) => p + c.length, 0) + foundLine + 1;\n    const token = state.push('math_inline_bare_block', 'math', 0);\n    token.block = true;\n    token.markup = \"$$\";\n    token.content = text.slice(1, endIndex);\n    state.pos = state.pos + endIndex;\n    return true;\n}\n// For any html block that contains math, replace the html block token with new tokens that separate out\n// the html blocks from the math\nfunction handleMathInHtml(state, mathType, mathMarkup, mathRegex) {\n    const tokens = state.tokens;\n    for (let index = tokens.length - 1; index >= 0; index--) {\n        const currentToken = tokens[index];\n        const newTokens = [];\n        if (currentToken.type !== \"html_block\") {\n            continue;\n        }\n        const content = currentToken.content;\n        // Process for each math referenced within the html block\n        for (const match of content.matchAll(mathRegex)) {\n            if (!match.groups) {\n                continue;\n            }\n            const html_before_math = match.groups.html_before_math;\n            const math = match.groups.math;\n            const html_after_math = match.groups.html_after_math;\n            if (html_before_math) {\n                newTokens.push({ ...currentToken, type: \"html_block\", map: null, content: html_before_math });\n            }\n            if (math) {\n                newTokens.push({\n                    ...currentToken,\n                    type: mathType,\n                    map: null,\n                    content: math,\n                    markup: mathMarkup,\n                    block: true,\n                    tag: \"math\",\n                });\n            }\n            if (html_after_math) {\n                newTokens.push({ ...currentToken, type: \"html_block\", map: null, content: html_after_math });\n            }\n        }\n        // Replace the original html_block token with the newly expanded tokens\n        if (newTokens.length > 0) {\n            tokens.splice(index, 1, ...newTokens);\n        }\n    }\n    return true;\n}\nfunction escapeHtml(unsafe) {\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#039;\");\n}\nfunction default_1(md, options) {\n    const katex = options?.katex ?? katex_1.default;\n    const enableBareBlocks = options?.enableBareBlocks;\n    const enableMathBlockInHtml = options?.enableMathBlockInHtml;\n    const enableMathInlineInHtml = options?.enableMathInlineInHtml;\n    const enableFencedBlocks = options?.enableFencedBlocks;\n    // #region Parsing\n    md.inline.ruler.after('escape', 'math_inline', inlineMath);\n    md.inline.ruler.after('escape', 'math_inline_block', inlineMathBlock);\n    if (enableBareBlocks) {\n        md.inline.ruler.before('text', 'math_inline_bare_block', inlineBareBlock);\n    }\n    md.block.ruler.after('blockquote', 'math_block', (state, start, end, silent) => {\n        if (enableBareBlocks && blockBareMath(state, start, end, silent)) {\n            return true;\n        }\n        return blockMath(state, start, end, silent);\n    }, {\n        alt: ['paragraph', 'reference', 'blockquote', 'list']\n    });\n    // Regex to capture any html prior to math block, the math block (single or multi line), and any html after the math block\n    const math_block_within_html_regex = /(?<html_before_math>[\\s\\S]*?)\\$\\$(?<math>[\\s\\S]+?)\\$\\$(?<html_after_math>(?:(?!\\$\\$[\\s\\S]+?\\$\\$)[\\s\\S])*)/gm;\n    // Regex to capture any html prior to math inline, the math inline (single line), and any html after the math inline\n    const math_inline_within_html_regex = /(?<html_before_math>[\\s\\S]*?)\\$(?<math>.*?)\\$(?<html_after_math>(?:(?!\\$.*?\\$)[\\s\\S])*)/gm;\n    if (enableMathBlockInHtml) {\n        md.core.ruler.push(\"math_block_in_html_block\", (state) => {\n            return handleMathInHtml(state, \"math_block\", \"$$\", math_block_within_html_regex);\n        });\n    }\n    if (enableMathInlineInHtml) {\n        md.core.ruler.push(\"math_inline_in_html_block\", (state) => {\n            return handleMathInHtml(state, \"math_inline\", \"$\", math_inline_within_html_regex);\n        });\n    }\n    // #endregion\n    // #region Rendering\n    const katexInline = (latex) => {\n        const displayMode = /\\\\begin\\{(align|equation|gather|cd|alignat)\\}/ig.test(latex);\n        try {\n            return katex.renderToString(latex, { ...options, displayMode });\n        }\n        catch (error) {\n            if (options?.throwOnError) {\n                console.log(error);\n            }\n            return `<span class=\"katex-error\" title=\"${escapeHtml(latex)}\">${escapeHtml(error + '')}</span>`;\n        }\n    };\n    const inlineRenderer = (tokens, idx) => {\n        const content = tokens[idx].content;\n        // To support expression like $`1+1 = 2`$, check if the the expression has leading and trailing \"`\".\n        const hasBacktick = content.length > 2 && content[0] === \"`\" && content[content.length - 1] === \"`\";\n        const sanitized = hasBacktick ? content.slice(1, -1) : content;\n        return katexInline(sanitized);\n    };\n    const katexBlockRenderer = (latex) => {\n        try {\n            return `<p class=\"katex-block\">${katex.renderToString(latex, { ...options, displayMode: true })}</p>`;\n        }\n        catch (error) {\n            if (options?.throwOnError) {\n                console.log(error);\n            }\n            return `<p class=\"katex-block katex-error\" title=\"${escapeHtml(latex)}\">${escapeHtml(error + '')}</p>`;\n        }\n    };\n    const blockRenderer = (tokens, idx) => {\n        return katexBlockRenderer(tokens[idx].content) + '\\n';\n    };\n    md.renderer.rules.math_inline = inlineRenderer;\n    md.renderer.rules.math_inline_block = blockRenderer;\n    md.renderer.rules.math_inline_bare_block = blockRenderer;\n    md.renderer.rules.math_block = blockRenderer;\n    if (enableFencedBlocks) {\n        const mathLanguageId = 'math';\n        const originalFenceRenderer = md.renderer.rules.fence;\n        md.renderer.rules.fence = function (tokens, idx, options, env, self) {\n            const token = tokens[idx];\n            if (token.info.trim().toLowerCase() === mathLanguageId && enableFencedBlocks) {\n                return katexBlockRenderer(token.content) + '\\n';\n            }\n            else {\n                return originalFenceRenderer?.call(this, tokens, idx, options, env, self) || '';\n            }\n        };\n    }\n    // #endregion\n}\nexports.default = default_1;\n;\n//# sourceMappingURL=index.js.map", "import { walkTree } from \"markmap-common\";\nconst defaultOpts$1 = {\n  _useHtmlParser2: false\n};\nfunction flattenOptions(options, baseOptions) {\n  if (!options) {\n    return baseOptions !== null && baseOptions !== void 0 ? baseOptions : defaultOpts$1;\n  }\n  const opts = {\n    _useHtmlParser2: !!options.xmlMode,\n    ...baseOptions,\n    ...options\n  };\n  if (options.xml) {\n    opts._useHtmlParser2 = true;\n    opts.xmlMode = true;\n    if (options.xml !== true) {\n      Object.assign(opts, options.xml);\n    }\n  } else if (options.xmlMode) {\n    opts._useHtmlParser2 = true;\n  }\n  return opts;\n}\nvar ElementType;\n(function(ElementType2) {\n  ElementType2[\"Root\"] = \"root\";\n  ElementType2[\"Text\"] = \"text\";\n  ElementType2[\"Directive\"] = \"directive\";\n  ElementType2[\"Comment\"] = \"comment\";\n  ElementType2[\"Script\"] = \"script\";\n  ElementType2[\"Style\"] = \"style\";\n  ElementType2[\"Tag\"] = \"tag\";\n  ElementType2[\"CDATA\"] = \"cdata\";\n  ElementType2[\"Doctype\"] = \"doctype\";\n})(ElementType || (ElementType = {}));\nfunction isTag$1(elem) {\n  return elem.type === ElementType.Tag || elem.type === ElementType.Script || elem.type === ElementType.Style;\n}\nconst Root = ElementType.Root;\nconst Text$1 = ElementType.Text;\nconst Directive = ElementType.Directive;\nconst Comment$1 = ElementType.Comment;\nconst Script = ElementType.Script;\nconst Style = ElementType.Style;\nconst Tag = ElementType.Tag;\nconst CDATA$1 = ElementType.CDATA;\nconst Doctype = ElementType.Doctype;\nclass Node {\n  constructor() {\n    this.parent = null;\n    this.prev = null;\n    this.next = null;\n    this.startIndex = null;\n    this.endIndex = null;\n  }\n  // Read-write aliases for properties\n  /**\n   * Same as {@link parent}.\n   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n   */\n  get parentNode() {\n    return this.parent;\n  }\n  set parentNode(parent2) {\n    this.parent = parent2;\n  }\n  /**\n   * Same as {@link prev}.\n   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n   */\n  get previousSibling() {\n    return this.prev;\n  }\n  set previousSibling(prev2) {\n    this.prev = prev2;\n  }\n  /**\n   * Same as {@link next}.\n   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n   */\n  get nextSibling() {\n    return this.next;\n  }\n  set nextSibling(next2) {\n    this.next = next2;\n  }\n  /**\n   * Clone this node, and optionally its children.\n   *\n   * @param recursive Clone child nodes as well.\n   * @returns A clone of the node.\n   */\n  cloneNode(recursive = false) {\n    return cloneNode(this, recursive);\n  }\n}\nclass DataNode extends Node {\n  /**\n   * @param data The content of the data node\n   */\n  constructor(data2) {\n    super();\n    this.data = data2;\n  }\n  /**\n   * Same as {@link data}.\n   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n   */\n  get nodeValue() {\n    return this.data;\n  }\n  set nodeValue(data2) {\n    this.data = data2;\n  }\n}\nclass Text extends DataNode {\n  constructor() {\n    super(...arguments);\n    this.type = ElementType.Text;\n  }\n  get nodeType() {\n    return 3;\n  }\n}\nclass Comment extends DataNode {\n  constructor() {\n    super(...arguments);\n    this.type = ElementType.Comment;\n  }\n  get nodeType() {\n    return 8;\n  }\n}\nclass ProcessingInstruction extends DataNode {\n  constructor(name, data2) {\n    super(data2);\n    this.name = name;\n    this.type = ElementType.Directive;\n  }\n  get nodeType() {\n    return 1;\n  }\n}\nclass NodeWithChildren extends Node {\n  /**\n   * @param children Children of the node. Only certain node types can have children.\n   */\n  constructor(children2) {\n    super();\n    this.children = children2;\n  }\n  // Aliases\n  /** First child of the node. */\n  get firstChild() {\n    var _a2;\n    return (_a2 = this.children[0]) !== null && _a2 !== void 0 ? _a2 : null;\n  }\n  /** Last child of the node. */\n  get lastChild() {\n    return this.children.length > 0 ? this.children[this.children.length - 1] : null;\n  }\n  /**\n   * Same as {@link children}.\n   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n   */\n  get childNodes() {\n    return this.children;\n  }\n  set childNodes(children2) {\n    this.children = children2;\n  }\n}\nclass CDATA extends NodeWithChildren {\n  constructor() {\n    super(...arguments);\n    this.type = ElementType.CDATA;\n  }\n  get nodeType() {\n    return 4;\n  }\n}\nclass Document extends NodeWithChildren {\n  constructor() {\n    super(...arguments);\n    this.type = ElementType.Root;\n  }\n  get nodeType() {\n    return 9;\n  }\n}\nclass Element extends NodeWithChildren {\n  /**\n   * @param name Name of the tag, eg. `div`, `span`.\n   * @param attribs Object mapping attribute names to attribute values.\n   * @param children Children of the node.\n   */\n  constructor(name, attribs, children2 = [], type = name === \"script\" ? ElementType.Script : name === \"style\" ? ElementType.Style : ElementType.Tag) {\n    super(children2);\n    this.name = name;\n    this.attribs = attribs;\n    this.type = type;\n  }\n  get nodeType() {\n    return 1;\n  }\n  // DOM Level 1 aliases\n  /**\n   * Same as {@link name}.\n   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n   */\n  get tagName() {\n    return this.name;\n  }\n  set tagName(name) {\n    this.name = name;\n  }\n  get attributes() {\n    return Object.keys(this.attribs).map((name) => {\n      var _a2, _b;\n      return {\n        name,\n        value: this.attribs[name],\n        namespace: (_a2 = this[\"x-attribsNamespace\"]) === null || _a2 === void 0 ? void 0 : _a2[name],\n        prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name]\n      };\n    });\n  }\n}\nfunction isTag(node) {\n  return isTag$1(node);\n}\nfunction isCDATA(node) {\n  return node.type === ElementType.CDATA;\n}\nfunction isText(node) {\n  return node.type === ElementType.Text;\n}\nfunction isComment(node) {\n  return node.type === ElementType.Comment;\n}\nfunction isDirective(node) {\n  return node.type === ElementType.Directive;\n}\nfunction isDocument(node) {\n  return node.type === ElementType.Root;\n}\nfunction hasChildren(node) {\n  return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\nfunction cloneNode(node, recursive = false) {\n  let result;\n  if (isText(node)) {\n    result = new Text(node.data);\n  } else if (isComment(node)) {\n    result = new Comment(node.data);\n  } else if (isTag(node)) {\n    const children2 = recursive ? cloneChildren(node.children) : [];\n    const clone2 = new Element(node.name, { ...node.attribs }, children2);\n    children2.forEach((child) => child.parent = clone2);\n    if (node.namespace != null) {\n      clone2.namespace = node.namespace;\n    }\n    if (node[\"x-attribsNamespace\"]) {\n      clone2[\"x-attribsNamespace\"] = { ...node[\"x-attribsNamespace\"] };\n    }\n    if (node[\"x-attribsPrefix\"]) {\n      clone2[\"x-attribsPrefix\"] = { ...node[\"x-attribsPrefix\"] };\n    }\n    result = clone2;\n  } else if (isCDATA(node)) {\n    const children2 = recursive ? cloneChildren(node.children) : [];\n    const clone2 = new CDATA(children2);\n    children2.forEach((child) => child.parent = clone2);\n    result = clone2;\n  } else if (isDocument(node)) {\n    const children2 = recursive ? cloneChildren(node.children) : [];\n    const clone2 = new Document(children2);\n    children2.forEach((child) => child.parent = clone2);\n    if (node[\"x-mode\"]) {\n      clone2[\"x-mode\"] = node[\"x-mode\"];\n    }\n    result = clone2;\n  } else if (isDirective(node)) {\n    const instruction = new ProcessingInstruction(node.name, node.data);\n    if (node[\"x-name\"] != null) {\n      instruction[\"x-name\"] = node[\"x-name\"];\n      instruction[\"x-publicId\"] = node[\"x-publicId\"];\n      instruction[\"x-systemId\"] = node[\"x-systemId\"];\n    }\n    result = instruction;\n  } else {\n    throw new Error(`Not implemented yet: ${node.type}`);\n  }\n  result.startIndex = node.startIndex;\n  result.endIndex = node.endIndex;\n  if (node.sourceCodeLocation != null) {\n    result.sourceCodeLocation = node.sourceCodeLocation;\n  }\n  return result;\n}\nfunction cloneChildren(childs) {\n  const children2 = childs.map((child) => cloneNode(child, true));\n  for (let i = 1; i < children2.length; i++) {\n    children2[i].prev = children2[i - 1];\n    children2[i - 1].next = children2[i];\n  }\n  return children2;\n}\nconst defaultOpts = {\n  withStartIndices: false,\n  withEndIndices: false,\n  xmlMode: false\n};\nclass DomHandler {\n  /**\n   * @param callback Called once parsing has completed.\n   * @param options Settings for the handler.\n   * @param elementCB Callback whenever a tag is closed.\n   */\n  constructor(callback, options, elementCB) {\n    this.dom = [];\n    this.root = new Document(this.dom);\n    this.done = false;\n    this.tagStack = [this.root];\n    this.lastNode = null;\n    this.parser = null;\n    if (typeof options === \"function\") {\n      elementCB = options;\n      options = defaultOpts;\n    }\n    if (typeof callback === \"object\") {\n      options = callback;\n      callback = void 0;\n    }\n    this.callback = callback !== null && callback !== void 0 ? callback : null;\n    this.options = options !== null && options !== void 0 ? options : defaultOpts;\n    this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n  }\n  onparserinit(parser) {\n    this.parser = parser;\n  }\n  // Resets the handler back to starting state\n  onreset() {\n    this.dom = [];\n    this.root = new Document(this.dom);\n    this.done = false;\n    this.tagStack = [this.root];\n    this.lastNode = null;\n    this.parser = null;\n  }\n  // Signals the handler that parsing is done\n  onend() {\n    if (this.done)\n      return;\n    this.done = true;\n    this.parser = null;\n    this.handleCallback(null);\n  }\n  onerror(error) {\n    this.handleCallback(error);\n  }\n  onclosetag() {\n    this.lastNode = null;\n    const elem = this.tagStack.pop();\n    if (this.options.withEndIndices) {\n      elem.endIndex = this.parser.endIndex;\n    }\n    if (this.elementCB)\n      this.elementCB(elem);\n  }\n  onopentag(name, attribs) {\n    const type = this.options.xmlMode ? ElementType.Tag : void 0;\n    const element = new Element(name, attribs, void 0, type);\n    this.addNode(element);\n    this.tagStack.push(element);\n  }\n  ontext(data2) {\n    const { lastNode } = this;\n    if (lastNode && lastNode.type === ElementType.Text) {\n      lastNode.data += data2;\n      if (this.options.withEndIndices) {\n        lastNode.endIndex = this.parser.endIndex;\n      }\n    } else {\n      const node = new Text(data2);\n      this.addNode(node);\n      this.lastNode = node;\n    }\n  }\n  oncomment(data2) {\n    if (this.lastNode && this.lastNode.type === ElementType.Comment) {\n      this.lastNode.data += data2;\n      return;\n    }\n    const node = new Comment(data2);\n    this.addNode(node);\n    this.lastNode = node;\n  }\n  oncommentend() {\n    this.lastNode = null;\n  }\n  oncdatastart() {\n    const text2 = new Text(\"\");\n    const node = new CDATA([text2]);\n    this.addNode(node);\n    text2.parent = node;\n    this.lastNode = text2;\n  }\n  oncdataend() {\n    this.lastNode = null;\n  }\n  onprocessinginstruction(name, data2) {\n    const node = new ProcessingInstruction(name, data2);\n    this.addNode(node);\n  }\n  handleCallback(error) {\n    if (typeof this.callback === \"function\") {\n      this.callback(error, this.dom);\n    } else if (error) {\n      throw error;\n    }\n  }\n  addNode(node) {\n    const parent2 = this.tagStack[this.tagStack.length - 1];\n    const previousSibling = parent2.children[parent2.children.length - 1];\n    if (this.options.withStartIndices) {\n      node.startIndex = this.parser.startIndex;\n    }\n    if (this.options.withEndIndices) {\n      node.endIndex = this.parser.endIndex;\n    }\n    parent2.children.push(node);\n    if (previousSibling) {\n      node.prev = previousSibling;\n      previousSibling.next = node;\n    }\n    node.parent = parent2;\n    this.lastNode = null;\n  }\n}\nconst htmlDecodeTree = new Uint16Array(\n  // prettier-ignore\n  'ᵁ<Õıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\\0\\0\\0\\0\\0\\0ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\\\bfms¦³¹ÈÏlig耻Æ䃆P耻&䀦cute耻Á䃁reve;䄂Āiyx}rc耻Â䃂;䐐r;쀀𝔄rave耻À䃀pha;䎑acr;䄀d;橓Āgp¡on;䄄f;쀀𝔸plyFunction;恡ing耻Å䃅Ācs¾Ãr;쀀𝒜ign;扔ilde耻Ã䃃ml耻Ä䃄ЀaceforsuåûþėĜĢħĪĀcrêòkslash;或Ŷöø;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀𝔅pf;쀀𝔹eve;䋘còēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻©䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻Ç䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷òſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀𝒞pĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀𝔇Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\\0\\0\\0͔͂\\0Ѕf;쀀𝔻ƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegraìȹoɴ͹\\0\\0ͻ»͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔eåˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\\0\\0ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\\0ц\\0ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\\0ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀𝒟rok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻Ð䃐cute耻É䃉ƀaiyӒӗӜron;䄚rc耻Ê䃊;䐭ot;䄖r;쀀𝔈rave耻È䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\\0\\0ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀𝔼silon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻Ë䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀𝔉lledɓ֗\\0\\0֣mallSquare;旼erySmallSquare;斪Ͱֺ\\0ֿ\\0\\0ׄf;쀀𝔽All;戀riertrf;愱cò׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀𝔊;拙pf;쀀𝔾eater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀𝒢;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\\0ڲf;愍izontalLine;攀Āctۃۅòکrok;䄦mpńېۘownHumðįqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻Í䃍Āiyܓܘrc耻Î䃎;䐘ot;䄰r;愑rave耻Ì䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lieóϝǴ݉\\0ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀𝕀a;䎙cr;愐ilde;䄨ǫޚ\\0ޞcy;䐆l耻Ï䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀𝔍pf;쀀𝕁ǣ߇\\0ߌr;쀀𝒥rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀𝔎pf;쀀𝕂cr;쀀𝒦րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\\0ࣃbleBracket;柦nǔࣈ\\0࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ightáΜs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀𝔏Ā;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊightáοightáϊf;쀀𝕃erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂòࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀𝔐nusPlus;戓pf;쀀𝕄cò੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘ë૙eryThiî૙tedĀGL૸ଆreaterGreateòٳessLesóੈLine;䀊r;쀀𝔑ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀𝒩ilde耻Ñ䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻Ó䃓Āiy෎ීrc耻Ô䃔;䐞blac;䅐r;쀀𝔒rave耻Ò䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀𝕆enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀𝒪ash耻Ø䃘iŬื฼de耻Õ䃕es;樷ml耻Ö䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀𝔓i;䎦;䎠usMinus;䂱Āipຢອncareplanåڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀𝒫;䎨ȀUfos༑༖༛༟OT耻\"䀢r;쀀𝔔pf;愚cr;쀀𝒬؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻®䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r»ཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\\0စbleBracket;柧nǔည\\0နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀𝔖ortȀDLRUᄪᄴᄾᅉownArrow»ОeftArrow»࢚ightArrow»࿝pArrow;憑gma;䎣allCircle;战pf;쀀𝕊ɲᅭ\\0\\0ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀𝒮ar;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Tháྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et»ሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻Þ䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀𝔗Āeiቻ኉ǲኀ\\0ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀𝕋ipleDot;惛Āctዖዛr;쀀𝒯rok;䅦ૡዷጎጚጦ\\0ጬጱ\\0\\0\\0\\0\\0ጸጽ፷ᎅ\\0᏿ᐄᐊᐐĀcrዻጁute耻Ú䃚rĀ;oጇገ憟cir;楉rǣጓ\\0጖y;䐎ve;䅬Āiyጞጣrc耻Û䃛;䐣blac;䅰r;쀀𝔘rave耻Ù䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀𝕌ЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥ownáϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀𝒰ilde;䅨ml耻Ü䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀𝔙pf;쀀𝕍cr;쀀𝒱dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀𝔚pf;쀀𝕎cr;쀀𝒲Ȁfiosᓋᓐᓒᓘr;쀀𝔛;䎞pf;쀀𝕏cr;쀀𝒳ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻Ý䃝Āiyᔉᔍrc;䅶;䐫r;쀀𝔜pf;쀀𝕐cr;쀀𝒴ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\\0ᕛoWidtè૙a;䎖r;愨pf;愤cr;쀀𝒵௡ᖃᖊᖐ\\0ᖰᖶᖿ\\0\\0\\0\\0ᗆᗛᗫᙟ᙭\\0ᚕ᚛ᚲᚹ\\0ᚾcute耻á䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻â䃢te肻´̆;䐰lig耻æ䃦Ā;r²ᖺ;쀀𝔞rave耻à䃠ĀepᗊᗖĀfpᗏᗔsym;愵èᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\\0\\0ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e»ᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢»¹arr;捼Āgpᙣᙧon;䄅f;쀀𝕒΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒñᚃing耻å䃥ƀctyᚡᚦᚨr;쀀𝒶;䀪mpĀ;e዁ᚯñʈilde耻ã䃣ml耻ä䃤Āciᛂᛈoninôɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e»ᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰séᜌnoõēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀𝔟g΀costuvwឍឝឳេ៕៛៞ƀaiuបពរðݠrc;旯p»፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\\0\\0ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄eåᑄåᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\\0ᠳƲᠯ\\0ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀𝕓Ā;tᏋᡣom»Ꮜtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻¦䂦Ȁceioᥑᥖᥚᥠr;쀀𝒷mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t»᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\\0᧨ᨑᨕᨲ\\0ᨷᩐ\\0\\0᪴\\0\\0᫁\\0\\0ᬡᬮ᭍᭒\\0᯽\\0ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁îړȀaeiu᧰᧻ᨁᨅǰ᧵\\0᧸s;橍on;䄍dil耻ç䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻¸ƭptyv;榲t脀¢;eᨭᨮ䂢räƲr;쀀𝔠ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark»ᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\\0\\0᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟»ཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it»᪼ˬ᫇᫔᫺\\0ᬊonĀ;eᫍᫎ䀺Ā;qÇÆɭ᫙\\0\\0᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁îᅠeĀmx᫱᫶ent»᫩eóɍǧ᫾\\0ᬇĀ;dኻᬂot;橭nôɆƀfryᬐᬔᬗ;쀀𝕔oäɔ脀©;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀𝒸Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\\0\\0᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\\0\\0ᯒreã᭳uã᭵ee;拎edge;拏en耻¤䂤earrowĀlrᯮ᯳eft»ᮀight»ᮽeäᯝĀciᰁᰇoninôǷnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍rò΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸òᄳhĀ;vᱚᱛ怐»ऊūᱡᱧarow;椏aã̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻°䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀𝔡arĀlrᲳᲵ»ࣜ»သʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀÷;o᳧ᳰntimes;拇nø᳷cy;䑒cɯᴆ\\0\\0ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀𝕕ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedgåúnƀadhᄮᵝᵧownarrowóᲃarpoonĀlrᵲᵶefôᲴighôᲶŢᵿᶅkaro÷གɯᶊ\\0\\0ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀𝒹;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃ròЩaòྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴoôᲉĀcsḎḔute耻é䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻ê䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀𝔢ƀ;rsṐṑṗ檚ave耻è䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et»ẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀𝕖ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on»ớ;䏵ȀcsuvỪỳἋἣĀioữḱrc»Ḯɩỹ\\0\\0ỻíՈantĀglἂἆtr»ṝess»Ṻƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯oô͒ĀahὉὋ;䎷耻ð䃰Āmrὓὗl耻ë䃫o;悬ƀcipὡὤὧl;䀡sôծĀeoὬὴctatioîՙnentialåչৡᾒ\\0ᾞ\\0ᾡᾧ\\0\\0ῆῌ\\0ΐ\\0ῦῪ \\0 ⁚llingdotseñṄy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\\0\\0᾽g;耀ﬀig;耀ﬄ;쀀𝔣lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\\0ῳf;쀀𝕗ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\\0⁐β•‥‧‪‬\\0‮耻½䂽;慓耻¼䂼;慕;慙;慛Ƴ‴\\0‶;慔;慖ʴ‾⁁\\0\\0⁃耻¾䂾;慗;慜5;慘ƶ⁌\\0⁎;慚;慝8;慞l;恄wn;挢cr;쀀𝒻ࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lanô٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀𝔤Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox»ℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀𝕘Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\\0↎proø₞r;楸qĀlqؿ↖lesó₈ií٫Āen↣↭rtneqq;쀀≩︀Å↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽ròΠȀilmr⇐⇔⇗⇛rsðᒄf»․ilôکĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it»∊lip;怦con;抹r;쀀𝔥sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀𝕙bar;怕ƀclt≯≴≸r;쀀𝒽asè⇴rok;䄧Ābp⊂⊇ull;恃hen»ᱛૡ⊣\\0⊪\\0⊸⋅⋎\\0⋕⋳\\0\\0⋸⌢⍧⍢⍿\\0⎆⎪⎴cute耻í䃭ƀ;iyݱ⊰⊵rc耻î䃮;䐸Ācx⊼⊿y;䐵cl耻¡䂡ĀfrΟ⋉;쀀𝔦rave耻ì䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓inåގarôܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝doô⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙eróᕣã⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀𝕚a;䎹uest耻¿䂿Āci⎊⎏r;쀀𝒾nʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\\0⎼cy;䑖l耻ï䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀𝔧ath;䈷pf;쀀𝕛ǣ⏬\\0⏱r;쀀𝒿rcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀𝔨reen;䄸cy;䑅cy;䑜pf;쀀𝕜cr;쀀𝓀஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼rò৆òΕail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\\0⒪\\0⒱\\0\\0\\0\\0\\0⒵Ⓔ\\0ⓆⓈⓍ\\0⓹ute;䄺mptyv;榴raîࡌbda;䎻gƀ;dlࢎⓁⓃ;榑åࢎ;檅uo耻«䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝ë≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼ìࢰâ┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□aé⓶arpoonĀdu▯▴own»њp»०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoonó྘quigarro÷⇰hreetimes;拋ƀ;qs▋ও◺lanôবʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋pproøⓆot;拖qĀgq♃♅ôউgtò⒌ôছiíলƀilr♕࣡♚sht;楼;쀀𝔩Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖rò◁orneòᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che»⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox»⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽rëࣁgƀlmr⛿✍✔eftĀar০✇ightá৲apsto;柼ightá৽parrowĀlr✥✩efô⓭ight;憬ƀafl✶✹✽r;榅;쀀𝕝us;樭imes;樴š❋❏st;戗áፎƀ;ef❗❘᠀旊nge»❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇ròࢨorneòᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀𝓁mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹reå◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀Å⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻¯䂯Āet⡗⡙;時Ā;e⡞⡟朠se»⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻owîҌefôएðᏑker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle»ᘦr;쀀𝔪o;愧ƀcdn⢯⢴⣉ro耻µ䂵Ȁ;acdᑤ⢽⣀⣄sôᚧir;櫰ot肻·Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛ò−ðઁĀdp⣩⣮els;抧f;쀀𝕞Āct⣸⣽r;쀀𝓂pos»ᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la»˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉roø඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\\0⧣p肻 ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\\0⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸uiöୣĀei⩊⩎ar;椨í஘istĀ;s஠டr;쀀𝔫ȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lanô௢ií௪Ā;rஶ⪁»ஷƀAap⪊⪍⪑rò⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹rò⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro÷⫁ightarro÷⪐ƀ;qs఻⪺⫪lanôౕĀ;sౕ⫴»శiíౝĀ;rవ⫾iĀ;eచథiäඐĀpt⬌⬑f;쀀𝕟膀¬;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lleì୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳uåಥĀ;cಘ⭸Ā;eಒ⭽ñಘȀAait⮈⮋⮝⮧rò⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow»⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉uå൅;쀀𝓃ortɭ⬅\\0\\0⯖ará⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭å೸åഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗñസȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇìௗlde耻ñ䃱çృiangleĀlrⱒⱜeftĀ;eచⱚñదightĀ;eೋⱥñ೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0ⴭ\\0ⴸⵈⵠⵥ⵲ⶄᬇ\\0\\0ⶍⶫ\\0ⷈⷎ\\0ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻ó䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻ô䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀𝔬ͯ⵹\\0\\0⵼\\0ⶂn;䋛ave耻ò䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨrò᪀Āir⶝ⶠr;榾oss;榻nå๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀𝕠ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨rò᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f»ⷿ耻ª䂪耻º䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧ò⸁ash耻ø䃸l;折iŬⸯ⸴de耻õ䃵esĀ;aǛ⸺s;樶ml耻ö䃶bar;挽ૡ⹞\\0⹽\\0⺀⺝\\0⺢⺹\\0\\0⻋ຜ\\0⼓\\0\\0⼫⾼\\0⿈rȀ;astЃ⹧⹲຅脀¶;l⹭⹮䂶leìЃɩ⹸\\0\\0⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀𝔭ƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕maô੶ne;明ƀ;tv⺿⻀⻈䏀chfork»´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎ö⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻±ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀𝕡nd耻£䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷uå໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾pproø⽃urlyeñ໙ñ໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨iíໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺ð⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴ï໻rel;抰Āci⿀⿅r;쀀𝓅;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀𝔮pf;쀀𝕢rime;恗cr;쀀𝓆ƀaeo⿸〉〓tĀei⿾々rnionóڰnt;樖stĀ;e【】䀿ñἙô༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがròႳòϝail;検aròᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕iãᅮmptyv;榳gȀ;del࿑らるろ;榒;榥å࿑uo耻»䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞ë≝ð✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶aló༞ƀabrョリヮrò៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗ì࿲âヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜnåႻarôྩt;断ƀilrㅩဣㅮsht;楽;쀀𝔯ĀaoㅷㆆrĀduㅽㅿ»ѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭaéトarpoonĀduㆻㆿowîㅾp»႒eftĀah㇊㇐rrowó࿪arpoonóՑightarrows;應quigarro÷ニhreetimes;拌g;䋚ingdotseñἲƀahm㈍㈐㈓rò࿪aòՑ;怏oustĀ;a㈞㈟掱che»㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾rëဃƀafl㉇㉊㉎r;榆;쀀𝕣us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒arò㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀𝓇Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠reåㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\\0㍺㎤\\0\\0㏬㏰\\0㐨㑈㑚㒭㒱㓊㓱\\0㘖\\0\\0㘳cute;䅛quï➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\\0㋼;檸on;䅡uåᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓iíሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒ë∨Ā;oਸ਼਴t耻§䂧i;䀻war;椩mĀin㍩ðnuóñt;朶rĀ;o㍶⁕쀀𝔰Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\\0\\0㎜iäᑤaraì⹯耻­䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲aròᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetmé㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀𝕤aĀdr㑍ЂesĀ;u㑔㑕晠it»㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍ñᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝ñᆮƀ;afᅻ㒦ְrť㒫ֱ»ᅼaròᅈȀcemt㒹㒾㓂㓅r;쀀𝓈tmîñiì㐕aræᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psiloîỠhé⺯s»⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦pproø㋺urlyeñᇾñᇳƀaes㖂㖈㌛pproø㌚qñ㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻¹䂹耻²䂲耻³䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨ë∮Ā;oਫ਩war;椪lig耻ß䃟௡㙑㙝㙠ዎ㙳㙹\\0㙾㛂\\0\\0\\0\\0\\0㛛㜃\\0㜉㝬\\0\\0\\0㞇ɲ㙖\\0\\0㙛get;挖;䏄rë๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀𝔱Ȁeiko㚆㚝㚵㚼ǲ㚋\\0㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮pproø዁im»ኬsðኞĀas㚺㚮ð዁rn耻þ䃾Ǭ̟㛆⋧es膀×;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀á⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀𝕥rk;櫚á㍢rime;怴ƀaip㜏㜒㝤dåቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own»ᶻeftĀ;e⠀㜾ñम;扜ightĀ;e㊪㝋ñၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀𝓉;䑆cy;䑛rok;䅧Āio㞋㞎xô᝷headĀlr㞗㞠eftarro÷ࡏightarrow»ཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶ròϭar;楣Ācr㟜㟢ute耻ú䃺òᅐrǣ㟪\\0㟭y;䑞ve;䅭Āiy㟵㟺rc耻û䃻;䑃ƀabh㠃㠆㠋ròᎭlac;䅱aòᏃĀir㠓㠘sht;楾;쀀𝔲rave耻ù䃹š㠧㠱rĀlr㠬㠮»ॗ»ႃlk;斀Āct㠹㡍ɯ㠿\\0\\0㡊rnĀ;e㡅㡆挜r»㡆op;挏ri;旸Āal㡖㡚cr;䅫肻¨͉Āgp㡢㡦on;䅳f;쀀𝕦̀adhlsuᅋ㡸㡽፲㢑㢠ownáᎳarpoonĀlr㢈㢌efô㠭ighô㠯iƀ;hl㢙㢚㢜䏅»ᏺon»㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\\0\\0㣁rnĀ;e㢼㢽挝r»㢽op;挎ng;䅯ri;旹cr;쀀𝓊ƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨»᠓Āam㣯㣲rò㢨l耻ü䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠ròϷarĀ;v㤦㤧櫨;櫩asèϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖appá␕othinçẖƀhir㓫⻈㥙opô⾵Ā;hᎷ㥢ïㆍĀiu㥩㥭gmá㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟etá㚜iangleĀlr㦪㦯eft»थight»ၑy;䐲ash»ံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨaòᑩr;쀀𝔳tré㦮suĀbp㧯㧱»ജ»൙pf;쀀𝕧roð໻tré㦴Ācu㨆㨋r;쀀𝓋Ābp㨐㨘nĀEe㦀㨖»㥾nĀEe㦒㨞»㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀𝔴pf;쀀𝕨Ā;eᑹ㩦atèᑹcr;쀀𝓌ૣណ㪇\\0㪋\\0㪐㪛\\0\\0㪝㪨㪫㪯\\0\\0㫃㫎\\0㫘ៜ៟tré៑r;쀀𝔵ĀAa㪔㪗ròσrò৶;䎾ĀAa㪡㪤ròθrò৫að✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀𝕩imåឲĀAa㫇㫊ròώròਁĀcq㫒ីr;쀀𝓍Āpt៖㫜ré។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻ý䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻¥䂥r;쀀𝔶cy;䑗pf;쀀𝕪cr;쀀𝓎Ācm㬦㬩y;䑎l耻ÿ䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡træᕟa;䎶r;쀀𝔷cy;䐶grarr;懝pf;쀀𝕫cr;쀀𝓏Ājn㮅㮇;怍j;怌'.split(\"\").map((c) => c.charCodeAt(0))\n);\nconst xmlDecodeTree = new Uint16Array(\n  // prettier-ignore\n  \"Ȁaglq\t\u0015\u0018\\x1Bɭ\u000F\\0\\0\u0012p;䀦os;䀧t;䀾t;䀼uot;䀢\".split(\"\").map((c) => c.charCodeAt(0))\n);\nvar _a;\nconst decodeMap = /* @__PURE__ */ new Map([\n  [0, 65533],\n  // C1 Unicode control character reference replacements\n  [128, 8364],\n  [130, 8218],\n  [131, 402],\n  [132, 8222],\n  [133, 8230],\n  [134, 8224],\n  [135, 8225],\n  [136, 710],\n  [137, 8240],\n  [138, 352],\n  [139, 8249],\n  [140, 338],\n  [142, 381],\n  [145, 8216],\n  [146, 8217],\n  [147, 8220],\n  [148, 8221],\n  [149, 8226],\n  [150, 8211],\n  [151, 8212],\n  [152, 732],\n  [153, 8482],\n  [154, 353],\n  [155, 8250],\n  [156, 339],\n  [158, 382],\n  [159, 376]\n]);\nconst fromCodePoint = (\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n  (_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function(codePoint) {\n    let output = \"\";\n    if (codePoint > 65535) {\n      codePoint -= 65536;\n      output += String.fromCharCode(codePoint >>> 10 & 1023 | 55296);\n      codePoint = 56320 | codePoint & 1023;\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n  }\n);\nfunction replaceCodePoint(codePoint) {\n  var _a2;\n  if (codePoint >= 55296 && codePoint <= 57343 || codePoint > 1114111) {\n    return 65533;\n  }\n  return (_a2 = decodeMap.get(codePoint)) !== null && _a2 !== void 0 ? _a2 : codePoint;\n}\nvar CharCodes$1;\n(function(CharCodes2) {\n  CharCodes2[CharCodes2[\"NUM\"] = 35] = \"NUM\";\n  CharCodes2[CharCodes2[\"SEMI\"] = 59] = \"SEMI\";\n  CharCodes2[CharCodes2[\"EQUALS\"] = 61] = \"EQUALS\";\n  CharCodes2[CharCodes2[\"ZERO\"] = 48] = \"ZERO\";\n  CharCodes2[CharCodes2[\"NINE\"] = 57] = \"NINE\";\n  CharCodes2[CharCodes2[\"LOWER_A\"] = 97] = \"LOWER_A\";\n  CharCodes2[CharCodes2[\"LOWER_F\"] = 102] = \"LOWER_F\";\n  CharCodes2[CharCodes2[\"LOWER_X\"] = 120] = \"LOWER_X\";\n  CharCodes2[CharCodes2[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n  CharCodes2[CharCodes2[\"UPPER_A\"] = 65] = \"UPPER_A\";\n  CharCodes2[CharCodes2[\"UPPER_F\"] = 70] = \"UPPER_F\";\n  CharCodes2[CharCodes2[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes$1 || (CharCodes$1 = {}));\nconst TO_LOWER_BIT = 32;\nvar BinTrieFlags;\n(function(BinTrieFlags2) {\n  BinTrieFlags2[BinTrieFlags2[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n  BinTrieFlags2[BinTrieFlags2[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n  BinTrieFlags2[BinTrieFlags2[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n  return code >= CharCodes$1.ZERO && code <= CharCodes$1.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n  return code >= CharCodes$1.UPPER_A && code <= CharCodes$1.UPPER_F || code >= CharCodes$1.LOWER_A && code <= CharCodes$1.LOWER_F;\n}\nfunction isAsciiAlphaNumeric(code) {\n  return code >= CharCodes$1.UPPER_A && code <= CharCodes$1.UPPER_Z || code >= CharCodes$1.LOWER_A && code <= CharCodes$1.LOWER_Z || isNumber(code);\n}\nfunction isEntityInAttributeInvalidEnd(code) {\n  return code === CharCodes$1.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function(EntityDecoderState2) {\n  EntityDecoderState2[EntityDecoderState2[\"EntityStart\"] = 0] = \"EntityStart\";\n  EntityDecoderState2[EntityDecoderState2[\"NumericStart\"] = 1] = \"NumericStart\";\n  EntityDecoderState2[EntityDecoderState2[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n  EntityDecoderState2[EntityDecoderState2[\"NumericHex\"] = 3] = \"NumericHex\";\n  EntityDecoderState2[EntityDecoderState2[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nvar DecodingMode;\n(function(DecodingMode2) {\n  DecodingMode2[DecodingMode2[\"Legacy\"] = 0] = \"Legacy\";\n  DecodingMode2[DecodingMode2[\"Strict\"] = 1] = \"Strict\";\n  DecodingMode2[DecodingMode2[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\nclass EntityDecoder {\n  constructor(decodeTree, emitCodePoint, errors) {\n    this.decodeTree = decodeTree;\n    this.emitCodePoint = emitCodePoint;\n    this.errors = errors;\n    this.state = EntityDecoderState.EntityStart;\n    this.consumed = 1;\n    this.result = 0;\n    this.treeIndex = 0;\n    this.excess = 1;\n    this.decodeMode = DecodingMode.Strict;\n  }\n  /** Resets the instance to make it reusable. */\n  startEntity(decodeMode) {\n    this.decodeMode = decodeMode;\n    this.state = EntityDecoderState.EntityStart;\n    this.result = 0;\n    this.treeIndex = 0;\n    this.excess = 1;\n    this.consumed = 1;\n  }\n  /**\n   * Write an entity to the decoder. This can be called multiple times with partial entities.\n   * If the entity is incomplete, the decoder will return -1.\n   *\n   * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n   * entity is incomplete, and resume when the next string is written.\n   *\n   * @param string The string containing the entity (or a continuation of the entity).\n   * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  write(str, offset) {\n    switch (this.state) {\n      case EntityDecoderState.EntityStart: {\n        if (str.charCodeAt(offset) === CharCodes$1.NUM) {\n          this.state = EntityDecoderState.NumericStart;\n          this.consumed += 1;\n          return this.stateNumericStart(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NamedEntity;\n        return this.stateNamedEntity(str, offset);\n      }\n      case EntityDecoderState.NumericStart: {\n        return this.stateNumericStart(str, offset);\n      }\n      case EntityDecoderState.NumericDecimal: {\n        return this.stateNumericDecimal(str, offset);\n      }\n      case EntityDecoderState.NumericHex: {\n        return this.stateNumericHex(str, offset);\n      }\n      case EntityDecoderState.NamedEntity: {\n        return this.stateNamedEntity(str, offset);\n      }\n    }\n  }\n  /**\n   * Switches between the numeric decimal and hexadecimal states.\n   *\n   * Equivalent to the `Numeric character reference state` in the HTML spec.\n   *\n   * @param str The string containing the entity (or a continuation of the entity).\n   * @param offset The current offset.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  stateNumericStart(str, offset) {\n    if (offset >= str.length) {\n      return -1;\n    }\n    if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes$1.LOWER_X) {\n      this.state = EntityDecoderState.NumericHex;\n      this.consumed += 1;\n      return this.stateNumericHex(str, offset + 1);\n    }\n    this.state = EntityDecoderState.NumericDecimal;\n    return this.stateNumericDecimal(str, offset);\n  }\n  addToNumericResult(str, start, end2, base) {\n    if (start !== end2) {\n      const digitCount = end2 - start;\n      this.result = this.result * Math.pow(base, digitCount) + parseInt(str.substr(start, digitCount), base);\n      this.consumed += digitCount;\n    }\n  }\n  /**\n   * Parses a hexadecimal numeric entity.\n   *\n   * Equivalent to the `Hexademical character reference state` in the HTML spec.\n   *\n   * @param str The string containing the entity (or a continuation of the entity).\n   * @param offset The current offset.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  stateNumericHex(str, offset) {\n    const startIdx = offset;\n    while (offset < str.length) {\n      const char = str.charCodeAt(offset);\n      if (isNumber(char) || isHexadecimalCharacter(char)) {\n        offset += 1;\n      } else {\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return this.emitNumericEntity(char, 3);\n      }\n    }\n    this.addToNumericResult(str, startIdx, offset, 16);\n    return -1;\n  }\n  /**\n   * Parses a decimal numeric entity.\n   *\n   * Equivalent to the `Decimal character reference state` in the HTML spec.\n   *\n   * @param str The string containing the entity (or a continuation of the entity).\n   * @param offset The current offset.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  stateNumericDecimal(str, offset) {\n    const startIdx = offset;\n    while (offset < str.length) {\n      const char = str.charCodeAt(offset);\n      if (isNumber(char)) {\n        offset += 1;\n      } else {\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return this.emitNumericEntity(char, 2);\n      }\n    }\n    this.addToNumericResult(str, startIdx, offset, 10);\n    return -1;\n  }\n  /**\n   * Validate and emit a numeric entity.\n   *\n   * Implements the logic from the `Hexademical character reference start\n   * state` and `Numeric character reference end state` in the HTML spec.\n   *\n   * @param lastCp The last code point of the entity. Used to see if the\n   *               entity was terminated with a semicolon.\n   * @param expectedLength The minimum number of characters that should be\n   *                       consumed. Used to validate that at least one digit\n   *                       was consumed.\n   * @returns The number of characters that were consumed.\n   */\n  emitNumericEntity(lastCp, expectedLength) {\n    var _a2;\n    if (this.consumed <= expectedLength) {\n      (_a2 = this.errors) === null || _a2 === void 0 ? void 0 : _a2.absenceOfDigitsInNumericCharacterReference(this.consumed);\n      return 0;\n    }\n    if (lastCp === CharCodes$1.SEMI) {\n      this.consumed += 1;\n    } else if (this.decodeMode === DecodingMode.Strict) {\n      return 0;\n    }\n    this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n    if (this.errors) {\n      if (lastCp !== CharCodes$1.SEMI) {\n        this.errors.missingSemicolonAfterCharacterReference();\n      }\n      this.errors.validateNumericCharacterReference(this.result);\n    }\n    return this.consumed;\n  }\n  /**\n   * Parses a named entity.\n   *\n   * Equivalent to the `Named character reference state` in the HTML spec.\n   *\n   * @param str The string containing the entity (or a continuation of the entity).\n   * @param offset The current offset.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  stateNamedEntity(str, offset) {\n    const { decodeTree } = this;\n    let current = decodeTree[this.treeIndex];\n    let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n    for (; offset < str.length; offset++, this.excess++) {\n      const char = str.charCodeAt(offset);\n      this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n      if (this.treeIndex < 0) {\n        return this.result === 0 || // If we are parsing an attribute\n        this.decodeMode === DecodingMode.Attribute && // We shouldn't have consumed any characters after the entity,\n        (valueLength === 0 || // And there should be no invalid characters.\n        isEntityInAttributeInvalidEnd(char)) ? 0 : this.emitNotTerminatedNamedEntity();\n      }\n      current = decodeTree[this.treeIndex];\n      valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n      if (valueLength !== 0) {\n        if (char === CharCodes$1.SEMI) {\n          return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n        }\n        if (this.decodeMode !== DecodingMode.Strict) {\n          this.result = this.treeIndex;\n          this.consumed += this.excess;\n          this.excess = 0;\n        }\n      }\n    }\n    return -1;\n  }\n  /**\n   * Emit a named entity that was not terminated with a semicolon.\n   *\n   * @returns The number of characters consumed.\n   */\n  emitNotTerminatedNamedEntity() {\n    var _a2;\n    const { result, decodeTree } = this;\n    const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n    this.emitNamedEntityData(result, valueLength, this.consumed);\n    (_a2 = this.errors) === null || _a2 === void 0 ? void 0 : _a2.missingSemicolonAfterCharacterReference();\n    return this.consumed;\n  }\n  /**\n   * Emit a named entity.\n   *\n   * @param result The index of the entity in the decode tree.\n   * @param valueLength The number of bytes in the entity.\n   * @param consumed The number of characters consumed.\n   *\n   * @returns The number of characters consumed.\n   */\n  emitNamedEntityData(result, valueLength, consumed) {\n    const { decodeTree } = this;\n    this.emitCodePoint(valueLength === 1 ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH : decodeTree[result + 1], consumed);\n    if (valueLength === 3) {\n      this.emitCodePoint(decodeTree[result + 2], consumed);\n    }\n    return consumed;\n  }\n  /**\n   * Signal to the parser that the end of the input was reached.\n   *\n   * Remaining data will be emitted and relevant errors will be produced.\n   *\n   * @returns The number of characters consumed.\n   */\n  end() {\n    var _a2;\n    switch (this.state) {\n      case EntityDecoderState.NamedEntity: {\n        return this.result !== 0 && (this.decodeMode !== DecodingMode.Attribute || this.result === this.treeIndex) ? this.emitNotTerminatedNamedEntity() : 0;\n      }\n      // Otherwise, emit a numeric entity if we have one.\n      case EntityDecoderState.NumericDecimal: {\n        return this.emitNumericEntity(0, 2);\n      }\n      case EntityDecoderState.NumericHex: {\n        return this.emitNumericEntity(0, 3);\n      }\n      case EntityDecoderState.NumericStart: {\n        (_a2 = this.errors) === null || _a2 === void 0 ? void 0 : _a2.absenceOfDigitsInNumericCharacterReference(this.consumed);\n        return 0;\n      }\n      case EntityDecoderState.EntityStart: {\n        return 0;\n      }\n    }\n  }\n}\nfunction getDecoder(decodeTree) {\n  let ret = \"\";\n  const decoder = new EntityDecoder(decodeTree, (str) => ret += fromCodePoint(str));\n  return function decodeWithTrie(str, decodeMode) {\n    let lastIndex = 0;\n    let offset = 0;\n    while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n      ret += str.slice(lastIndex, offset);\n      decoder.startEntity(decodeMode);\n      const len = decoder.write(\n        str,\n        // Skip the \"&\"\n        offset + 1\n      );\n      if (len < 0) {\n        lastIndex = offset + decoder.end();\n        break;\n      }\n      lastIndex = offset + len;\n      offset = len === 0 ? lastIndex + 1 : lastIndex;\n    }\n    const result = ret + str.slice(lastIndex);\n    ret = \"\";\n    return result;\n  };\n}\nfunction determineBranch(decodeTree, current, nodeIdx, char) {\n  const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n  const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n  if (branchCount === 0) {\n    return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n  }\n  if (jumpOffset) {\n    const value = char - jumpOffset;\n    return value < 0 || value >= branchCount ? -1 : decodeTree[nodeIdx + value] - 1;\n  }\n  let lo = nodeIdx;\n  let hi = lo + branchCount - 1;\n  while (lo <= hi) {\n    const mid = lo + hi >>> 1;\n    const midVal = decodeTree[mid];\n    if (midVal < char) {\n      lo = mid + 1;\n    } else if (midVal > char) {\n      hi = mid - 1;\n    } else {\n      return decodeTree[mid + branchCount];\n    }\n  }\n  return -1;\n}\ngetDecoder(htmlDecodeTree);\ngetDecoder(xmlDecodeTree);\nconst xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = /* @__PURE__ */ new Map([\n  [34, \"&quot;\"],\n  [38, \"&amp;\"],\n  [39, \"&apos;\"],\n  [60, \"&lt;\"],\n  [62, \"&gt;\"]\n]);\nconst getCodePoint = (\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  String.prototype.codePointAt != null ? (str, index2) => str.codePointAt(index2) : (\n    // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n    (c, index2) => (c.charCodeAt(index2) & 64512) === 55296 ? (c.charCodeAt(index2) - 55296) * 1024 + c.charCodeAt(index2 + 1) - 56320 + 65536 : c.charCodeAt(index2)\n  )\n);\nfunction encodeXML(str) {\n  let ret = \"\";\n  let lastIdx = 0;\n  let match;\n  while ((match = xmlReplacer.exec(str)) !== null) {\n    const i = match.index;\n    const char = str.charCodeAt(i);\n    const next2 = xmlCodeMap.get(char);\n    if (next2 !== void 0) {\n      ret += str.substring(lastIdx, i) + next2;\n      lastIdx = i + 1;\n    } else {\n      ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n      lastIdx = xmlReplacer.lastIndex += Number((char & 64512) === 55296);\n    }\n  }\n  return ret + str.substr(lastIdx);\n}\nfunction getEscaper(regex, map2) {\n  return function escape(data2) {\n    let match;\n    let lastIdx = 0;\n    let result = \"\";\n    while (match = regex.exec(data2)) {\n      if (lastIdx !== match.index) {\n        result += data2.substring(lastIdx, match.index);\n      }\n      result += map2.get(match[0].charCodeAt(0));\n      lastIdx = match.index + 1;\n    }\n    return result + data2.substring(lastIdx);\n  };\n}\nconst escapeAttribute = getEscaper(/[\"&\\u00A0]/g, /* @__PURE__ */ new Map([\n  [34, \"&quot;\"],\n  [38, \"&amp;\"],\n  [160, \"&nbsp;\"]\n]));\nconst escapeText = getEscaper(/[&<>\\u00A0]/g, /* @__PURE__ */ new Map([\n  [38, \"&amp;\"],\n  [60, \"&lt;\"],\n  [62, \"&gt;\"],\n  [160, \"&nbsp;\"]\n]));\nconst elementNames = new Map([\n  \"altGlyph\",\n  \"altGlyphDef\",\n  \"altGlyphItem\",\n  \"animateColor\",\n  \"animateMotion\",\n  \"animateTransform\",\n  \"clipPath\",\n  \"feBlend\",\n  \"feColorMatrix\",\n  \"feComponentTransfer\",\n  \"feComposite\",\n  \"feConvolveMatrix\",\n  \"feDiffuseLighting\",\n  \"feDisplacementMap\",\n  \"feDistantLight\",\n  \"feDropShadow\",\n  \"feFlood\",\n  \"feFuncA\",\n  \"feFuncB\",\n  \"feFuncG\",\n  \"feFuncR\",\n  \"feGaussianBlur\",\n  \"feImage\",\n  \"feMerge\",\n  \"feMergeNode\",\n  \"feMorphology\",\n  \"feOffset\",\n  \"fePointLight\",\n  \"feSpecularLighting\",\n  \"feSpotLight\",\n  \"feTile\",\n  \"feTurbulence\",\n  \"foreignObject\",\n  \"glyphRef\",\n  \"linearGradient\",\n  \"radialGradient\",\n  \"textPath\"\n].map((val2) => [val2.toLowerCase(), val2]));\nconst attributeNames = new Map([\n  \"definitionURL\",\n  \"attributeName\",\n  \"attributeType\",\n  \"baseFrequency\",\n  \"baseProfile\",\n  \"calcMode\",\n  \"clipPathUnits\",\n  \"diffuseConstant\",\n  \"edgeMode\",\n  \"filterUnits\",\n  \"glyphRef\",\n  \"gradientTransform\",\n  \"gradientUnits\",\n  \"kernelMatrix\",\n  \"kernelUnitLength\",\n  \"keyPoints\",\n  \"keySplines\",\n  \"keyTimes\",\n  \"lengthAdjust\",\n  \"limitingConeAngle\",\n  \"markerHeight\",\n  \"markerUnits\",\n  \"markerWidth\",\n  \"maskContentUnits\",\n  \"maskUnits\",\n  \"numOctaves\",\n  \"pathLength\",\n  \"patternContentUnits\",\n  \"patternTransform\",\n  \"patternUnits\",\n  \"pointsAtX\",\n  \"pointsAtY\",\n  \"pointsAtZ\",\n  \"preserveAlpha\",\n  \"preserveAspectRatio\",\n  \"primitiveUnits\",\n  \"refX\",\n  \"refY\",\n  \"repeatCount\",\n  \"repeatDur\",\n  \"requiredExtensions\",\n  \"requiredFeatures\",\n  \"specularConstant\",\n  \"specularExponent\",\n  \"spreadMethod\",\n  \"startOffset\",\n  \"stdDeviation\",\n  \"stitchTiles\",\n  \"surfaceScale\",\n  \"systemLanguage\",\n  \"tableValues\",\n  \"targetX\",\n  \"targetY\",\n  \"textLength\",\n  \"viewBox\",\n  \"viewTarget\",\n  \"xChannelSelector\",\n  \"yChannelSelector\",\n  \"zoomAndPan\"\n].map((val2) => [val2.toLowerCase(), val2]));\nconst unencodedElements = /* @__PURE__ */ new Set([\n  \"style\",\n  \"script\",\n  \"xmp\",\n  \"iframe\",\n  \"noembed\",\n  \"noframes\",\n  \"plaintext\",\n  \"noscript\"\n]);\nfunction replaceQuotes(value) {\n  return value.replace(/\"/g, \"&quot;\");\n}\nfunction formatAttributes(attributes2, opts) {\n  var _a2;\n  if (!attributes2)\n    return;\n  const encode = ((_a2 = opts.encodeEntities) !== null && _a2 !== void 0 ? _a2 : opts.decodeEntities) === false ? replaceQuotes : opts.xmlMode || opts.encodeEntities !== \"utf8\" ? encodeXML : escapeAttribute;\n  return Object.keys(attributes2).map((key) => {\n    var _a3, _b;\n    const value = (_a3 = attributes2[key]) !== null && _a3 !== void 0 ? _a3 : \"\";\n    if (opts.xmlMode === \"foreign\") {\n      key = (_b = attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;\n    }\n    if (!opts.emptyAttrs && !opts.xmlMode && value === \"\") {\n      return key;\n    }\n    return `${key}=\"${encode(value)}\"`;\n  }).join(\" \");\n}\nconst singleTag = /* @__PURE__ */ new Set([\n  \"area\",\n  \"base\",\n  \"basefont\",\n  \"br\",\n  \"col\",\n  \"command\",\n  \"embed\",\n  \"frame\",\n  \"hr\",\n  \"img\",\n  \"input\",\n  \"isindex\",\n  \"keygen\",\n  \"link\",\n  \"meta\",\n  \"param\",\n  \"source\",\n  \"track\",\n  \"wbr\"\n]);\nfunction render$1(node, options = {}) {\n  const nodes = \"length\" in node ? node : [node];\n  let output = \"\";\n  for (let i = 0; i < nodes.length; i++) {\n    output += renderNode(nodes[i], options);\n  }\n  return output;\n}\nfunction renderNode(node, options) {\n  switch (node.type) {\n    case Root:\n      return render$1(node.children, options);\n    // @ts-expect-error We don't use `Doctype` yet\n    case Doctype:\n    case Directive:\n      return renderDirective(node);\n    case Comment$1:\n      return renderComment(node);\n    case CDATA$1:\n      return renderCdata(node);\n    case Script:\n    case Style:\n    case Tag:\n      return renderTag(node, options);\n    case Text$1:\n      return renderText(node, options);\n  }\n}\nconst foreignModeIntegrationPoints = /* @__PURE__ */ new Set([\n  \"mi\",\n  \"mo\",\n  \"mn\",\n  \"ms\",\n  \"mtext\",\n  \"annotation-xml\",\n  \"foreignObject\",\n  \"desc\",\n  \"title\"\n]);\nconst foreignElements = /* @__PURE__ */ new Set([\"svg\", \"math\"]);\nfunction renderTag(elem, opts) {\n  var _a2;\n  if (opts.xmlMode === \"foreign\") {\n    elem.name = (_a2 = elementNames.get(elem.name)) !== null && _a2 !== void 0 ? _a2 : elem.name;\n    if (elem.parent && foreignModeIntegrationPoints.has(elem.parent.name)) {\n      opts = { ...opts, xmlMode: false };\n    }\n  }\n  if (!opts.xmlMode && foreignElements.has(elem.name)) {\n    opts = { ...opts, xmlMode: \"foreign\" };\n  }\n  let tag = `<${elem.name}`;\n  const attribs = formatAttributes(elem.attribs, opts);\n  if (attribs) {\n    tag += ` ${attribs}`;\n  }\n  if (elem.children.length === 0 && (opts.xmlMode ? (\n    // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags\n    opts.selfClosingTags !== false\n  ) : (\n    // User explicitly asked for self-closing tags, even in HTML mode\n    opts.selfClosingTags && singleTag.has(elem.name)\n  ))) {\n    if (!opts.xmlMode)\n      tag += \" \";\n    tag += \"/>\";\n  } else {\n    tag += \">\";\n    if (elem.children.length > 0) {\n      tag += render$1(elem.children, opts);\n    }\n    if (opts.xmlMode || !singleTag.has(elem.name)) {\n      tag += `</${elem.name}>`;\n    }\n  }\n  return tag;\n}\nfunction renderDirective(elem) {\n  return `<${elem.data}>`;\n}\nfunction renderText(elem, opts) {\n  var _a2;\n  let data2 = elem.data || \"\";\n  if (((_a2 = opts.encodeEntities) !== null && _a2 !== void 0 ? _a2 : opts.decodeEntities) !== false && !(!opts.xmlMode && elem.parent && unencodedElements.has(elem.parent.name))) {\n    data2 = opts.xmlMode || opts.encodeEntities !== \"utf8\" ? encodeXML(data2) : escapeText(data2);\n  }\n  return data2;\n}\nfunction renderCdata(elem) {\n  return `<![CDATA[${elem.children[0].data}]]>`;\n}\nfunction renderComment(elem) {\n  return `<!--${elem.data}-->`;\n}\nfunction getOuterHTML(node, options) {\n  return render$1(node, options);\n}\nfunction getInnerHTML(node, options) {\n  return hasChildren(node) ? node.children.map((node2) => getOuterHTML(node2, options)).join(\"\") : \"\";\n}\nfunction getText(node) {\n  if (Array.isArray(node))\n    return node.map(getText).join(\"\");\n  if (isTag(node))\n    return node.name === \"br\" ? \"\\n\" : getText(node.children);\n  if (isCDATA(node))\n    return getText(node.children);\n  if (isText(node))\n    return node.data;\n  return \"\";\n}\nfunction textContent(node) {\n  if (Array.isArray(node))\n    return node.map(textContent).join(\"\");\n  if (hasChildren(node) && !isComment(node)) {\n    return textContent(node.children);\n  }\n  if (isText(node))\n    return node.data;\n  return \"\";\n}\nfunction innerText(node) {\n  if (Array.isArray(node))\n    return node.map(innerText).join(\"\");\n  if (hasChildren(node) && (node.type === ElementType.Tag || isCDATA(node))) {\n    return innerText(node.children);\n  }\n  if (isText(node))\n    return node.data;\n  return \"\";\n}\nfunction getChildren(elem) {\n  return hasChildren(elem) ? elem.children : [];\n}\nfunction getParent(elem) {\n  return elem.parent || null;\n}\nfunction getSiblings(elem) {\n  const parent2 = getParent(elem);\n  if (parent2 != null)\n    return getChildren(parent2);\n  const siblings2 = [elem];\n  let { prev: prev2, next: next2 } = elem;\n  while (prev2 != null) {\n    siblings2.unshift(prev2);\n    ({ prev: prev2 } = prev2);\n  }\n  while (next2 != null) {\n    siblings2.push(next2);\n    ({ next: next2 } = next2);\n  }\n  return siblings2;\n}\nfunction getAttributeValue(elem, name) {\n  var _a2;\n  return (_a2 = elem.attribs) === null || _a2 === void 0 ? void 0 : _a2[name];\n}\nfunction hasAttrib(elem, name) {\n  return elem.attribs != null && Object.prototype.hasOwnProperty.call(elem.attribs, name) && elem.attribs[name] != null;\n}\nfunction getName(elem) {\n  return elem.name;\n}\nfunction nextElementSibling(elem) {\n  let { next: next2 } = elem;\n  while (next2 !== null && !isTag(next2))\n    ({ next: next2 } = next2);\n  return next2;\n}\nfunction prevElementSibling(elem) {\n  let { prev: prev2 } = elem;\n  while (prev2 !== null && !isTag(prev2))\n    ({ prev: prev2 } = prev2);\n  return prev2;\n}\nfunction removeElement(elem) {\n  if (elem.prev)\n    elem.prev.next = elem.next;\n  if (elem.next)\n    elem.next.prev = elem.prev;\n  if (elem.parent) {\n    const childs = elem.parent.children;\n    const childsIndex = childs.lastIndexOf(elem);\n    if (childsIndex >= 0) {\n      childs.splice(childsIndex, 1);\n    }\n  }\n  elem.next = null;\n  elem.prev = null;\n  elem.parent = null;\n}\nfunction replaceElement(elem, replacement) {\n  const prev2 = replacement.prev = elem.prev;\n  if (prev2) {\n    prev2.next = replacement;\n  }\n  const next2 = replacement.next = elem.next;\n  if (next2) {\n    next2.prev = replacement;\n  }\n  const parent2 = replacement.parent = elem.parent;\n  if (parent2) {\n    const childs = parent2.children;\n    childs[childs.lastIndexOf(elem)] = replacement;\n    elem.parent = null;\n  }\n}\nfunction appendChild(parent2, child) {\n  removeElement(child);\n  child.next = null;\n  child.parent = parent2;\n  if (parent2.children.push(child) > 1) {\n    const sibling = parent2.children[parent2.children.length - 2];\n    sibling.next = child;\n    child.prev = sibling;\n  } else {\n    child.prev = null;\n  }\n}\nfunction append$1(elem, next2) {\n  removeElement(next2);\n  const { parent: parent2 } = elem;\n  const currNext = elem.next;\n  next2.next = currNext;\n  next2.prev = elem;\n  elem.next = next2;\n  next2.parent = parent2;\n  if (currNext) {\n    currNext.prev = next2;\n    if (parent2) {\n      const childs = parent2.children;\n      childs.splice(childs.lastIndexOf(currNext), 0, next2);\n    }\n  } else if (parent2) {\n    parent2.children.push(next2);\n  }\n}\nfunction prependChild(parent2, child) {\n  removeElement(child);\n  child.parent = parent2;\n  child.prev = null;\n  if (parent2.children.unshift(child) !== 1) {\n    const sibling = parent2.children[1];\n    sibling.prev = child;\n    child.next = sibling;\n  } else {\n    child.next = null;\n  }\n}\nfunction prepend$1(elem, prev2) {\n  removeElement(prev2);\n  const { parent: parent2 } = elem;\n  if (parent2) {\n    const childs = parent2.children;\n    childs.splice(childs.indexOf(elem), 0, prev2);\n  }\n  if (elem.prev) {\n    elem.prev.next = prev2;\n  }\n  prev2.parent = parent2;\n  prev2.prev = elem.prev;\n  prev2.next = elem;\n  elem.prev = prev2;\n}\nfunction filter$2(test, node, recurse = true, limit = Infinity) {\n  return find$2(test, Array.isArray(node) ? node : [node], recurse, limit);\n}\nfunction find$2(test, nodes, recurse, limit) {\n  const result = [];\n  const nodeStack = [nodes];\n  const indexStack = [0];\n  for (; ; ) {\n    if (indexStack[0] >= nodeStack[0].length) {\n      if (indexStack.length === 1) {\n        return result;\n      }\n      nodeStack.shift();\n      indexStack.shift();\n      continue;\n    }\n    const elem = nodeStack[0][indexStack[0]++];\n    if (test(elem)) {\n      result.push(elem);\n      if (--limit <= 0)\n        return result;\n    }\n    if (recurse && hasChildren(elem) && elem.children.length > 0) {\n      indexStack.unshift(0);\n      nodeStack.unshift(elem.children);\n    }\n  }\n}\nfunction findOneChild(test, nodes) {\n  return nodes.find(test);\n}\nfunction findOne(test, nodes, recurse = true) {\n  let elem = null;\n  for (let i = 0; i < nodes.length && !elem; i++) {\n    const node = nodes[i];\n    if (!isTag(node)) {\n      continue;\n    } else if (test(node)) {\n      elem = node;\n    } else if (recurse && node.children.length > 0) {\n      elem = findOne(test, node.children, true);\n    }\n  }\n  return elem;\n}\nfunction existsOne(test, nodes) {\n  return nodes.some((checked) => isTag(checked) && (test(checked) || existsOne(test, checked.children)));\n}\nfunction findAll(test, nodes) {\n  const result = [];\n  const nodeStack = [nodes];\n  const indexStack = [0];\n  for (; ; ) {\n    if (indexStack[0] >= nodeStack[0].length) {\n      if (nodeStack.length === 1) {\n        return result;\n      }\n      nodeStack.shift();\n      indexStack.shift();\n      continue;\n    }\n    const elem = nodeStack[0][indexStack[0]++];\n    if (!isTag(elem))\n      continue;\n    if (test(elem))\n      result.push(elem);\n    if (elem.children.length > 0) {\n      indexStack.unshift(0);\n      nodeStack.unshift(elem.children);\n    }\n  }\n}\nconst Checks = {\n  tag_name(name) {\n    if (typeof name === \"function\") {\n      return (elem) => isTag(elem) && name(elem.name);\n    } else if (name === \"*\") {\n      return isTag;\n    }\n    return (elem) => isTag(elem) && elem.name === name;\n  },\n  tag_type(type) {\n    if (typeof type === \"function\") {\n      return (elem) => type(elem.type);\n    }\n    return (elem) => elem.type === type;\n  },\n  tag_contains(data2) {\n    if (typeof data2 === \"function\") {\n      return (elem) => isText(elem) && data2(elem.data);\n    }\n    return (elem) => isText(elem) && elem.data === data2;\n  }\n};\nfunction getAttribCheck(attrib, value) {\n  if (typeof value === \"function\") {\n    return (elem) => isTag(elem) && value(elem.attribs[attrib]);\n  }\n  return (elem) => isTag(elem) && elem.attribs[attrib] === value;\n}\nfunction combineFuncs(a, b) {\n  return (elem) => a(elem) || b(elem);\n}\nfunction compileTest(options) {\n  const funcs = Object.keys(options).map((key) => {\n    const value = options[key];\n    return Object.prototype.hasOwnProperty.call(Checks, key) ? Checks[key](value) : getAttribCheck(key, value);\n  });\n  return funcs.length === 0 ? null : funcs.reduce(combineFuncs);\n}\nfunction testElement(options, node) {\n  const test = compileTest(options);\n  return test ? test(node) : true;\n}\nfunction getElements(options, nodes, recurse, limit = Infinity) {\n  const test = compileTest(options);\n  return test ? filter$2(test, nodes, recurse, limit) : [];\n}\nfunction getElementById(id, nodes, recurse = true) {\n  if (!Array.isArray(nodes))\n    nodes = [nodes];\n  return findOne(getAttribCheck(\"id\", id), nodes, recurse);\n}\nfunction getElementsByTagName(tagName, nodes, recurse = true, limit = Infinity) {\n  return filter$2(Checks[\"tag_name\"](tagName), nodes, recurse, limit);\n}\nfunction getElementsByTagType(type, nodes, recurse = true, limit = Infinity) {\n  return filter$2(Checks[\"tag_type\"](type), nodes, recurse, limit);\n}\nfunction removeSubsets(nodes) {\n  let idx = nodes.length;\n  while (--idx >= 0) {\n    const node = nodes[idx];\n    if (idx > 0 && nodes.lastIndexOf(node, idx - 1) >= 0) {\n      nodes.splice(idx, 1);\n      continue;\n    }\n    for (let ancestor = node.parent; ancestor; ancestor = ancestor.parent) {\n      if (nodes.includes(ancestor)) {\n        nodes.splice(idx, 1);\n        break;\n      }\n    }\n  }\n  return nodes;\n}\nvar DocumentPosition;\n(function(DocumentPosition2) {\n  DocumentPosition2[DocumentPosition2[\"DISCONNECTED\"] = 1] = \"DISCONNECTED\";\n  DocumentPosition2[DocumentPosition2[\"PRECEDING\"] = 2] = \"PRECEDING\";\n  DocumentPosition2[DocumentPosition2[\"FOLLOWING\"] = 4] = \"FOLLOWING\";\n  DocumentPosition2[DocumentPosition2[\"CONTAINS\"] = 8] = \"CONTAINS\";\n  DocumentPosition2[DocumentPosition2[\"CONTAINED_BY\"] = 16] = \"CONTAINED_BY\";\n})(DocumentPosition || (DocumentPosition = {}));\nfunction compareDocumentPosition(nodeA, nodeB) {\n  const aParents = [];\n  const bParents = [];\n  if (nodeA === nodeB) {\n    return 0;\n  }\n  let current = hasChildren(nodeA) ? nodeA : nodeA.parent;\n  while (current) {\n    aParents.unshift(current);\n    current = current.parent;\n  }\n  current = hasChildren(nodeB) ? nodeB : nodeB.parent;\n  while (current) {\n    bParents.unshift(current);\n    current = current.parent;\n  }\n  const maxIdx = Math.min(aParents.length, bParents.length);\n  let idx = 0;\n  while (idx < maxIdx && aParents[idx] === bParents[idx]) {\n    idx++;\n  }\n  if (idx === 0) {\n    return DocumentPosition.DISCONNECTED;\n  }\n  const sharedParent = aParents[idx - 1];\n  const siblings2 = sharedParent.children;\n  const aSibling = aParents[idx];\n  const bSibling = bParents[idx];\n  if (siblings2.indexOf(aSibling) > siblings2.indexOf(bSibling)) {\n    if (sharedParent === nodeB) {\n      return DocumentPosition.FOLLOWING | DocumentPosition.CONTAINED_BY;\n    }\n    return DocumentPosition.FOLLOWING;\n  }\n  if (sharedParent === nodeA) {\n    return DocumentPosition.PRECEDING | DocumentPosition.CONTAINS;\n  }\n  return DocumentPosition.PRECEDING;\n}\nfunction uniqueSort(nodes) {\n  nodes = nodes.filter((node, i, arr) => !arr.includes(node, i + 1));\n  nodes.sort((a, b) => {\n    const relative = compareDocumentPosition(a, b);\n    if (relative & DocumentPosition.PRECEDING) {\n      return -1;\n    } else if (relative & DocumentPosition.FOLLOWING) {\n      return 1;\n    }\n    return 0;\n  });\n  return nodes;\n}\nfunction getFeed(doc) {\n  const feedRoot = getOneElement(isValidFeed, doc);\n  return !feedRoot ? null : feedRoot.name === \"feed\" ? getAtomFeed(feedRoot) : getRssFeed(feedRoot);\n}\nfunction getAtomFeed(feedRoot) {\n  var _a2;\n  const childs = feedRoot.children;\n  const feed = {\n    type: \"atom\",\n    items: getElementsByTagName(\"entry\", childs).map((item) => {\n      var _a3;\n      const { children: children2 } = item;\n      const entry = { media: getMediaElements(children2) };\n      addConditionally(entry, \"id\", \"id\", children2);\n      addConditionally(entry, \"title\", \"title\", children2);\n      const href2 = (_a3 = getOneElement(\"link\", children2)) === null || _a3 === void 0 ? void 0 : _a3.attribs[\"href\"];\n      if (href2) {\n        entry.link = href2;\n      }\n      const description = fetch(\"summary\", children2) || fetch(\"content\", children2);\n      if (description) {\n        entry.description = description;\n      }\n      const pubDate = fetch(\"updated\", children2);\n      if (pubDate) {\n        entry.pubDate = new Date(pubDate);\n      }\n      return entry;\n    })\n  };\n  addConditionally(feed, \"id\", \"id\", childs);\n  addConditionally(feed, \"title\", \"title\", childs);\n  const href = (_a2 = getOneElement(\"link\", childs)) === null || _a2 === void 0 ? void 0 : _a2.attribs[\"href\"];\n  if (href) {\n    feed.link = href;\n  }\n  addConditionally(feed, \"description\", \"subtitle\", childs);\n  const updated = fetch(\"updated\", childs);\n  if (updated) {\n    feed.updated = new Date(updated);\n  }\n  addConditionally(feed, \"author\", \"email\", childs, true);\n  return feed;\n}\nfunction getRssFeed(feedRoot) {\n  var _a2, _b;\n  const childs = (_b = (_a2 = getOneElement(\"channel\", feedRoot.children)) === null || _a2 === void 0 ? void 0 : _a2.children) !== null && _b !== void 0 ? _b : [];\n  const feed = {\n    type: feedRoot.name.substr(0, 3),\n    id: \"\",\n    items: getElementsByTagName(\"item\", feedRoot.children).map((item) => {\n      const { children: children2 } = item;\n      const entry = { media: getMediaElements(children2) };\n      addConditionally(entry, \"id\", \"guid\", children2);\n      addConditionally(entry, \"title\", \"title\", children2);\n      addConditionally(entry, \"link\", \"link\", children2);\n      addConditionally(entry, \"description\", \"description\", children2);\n      const pubDate = fetch(\"pubDate\", children2) || fetch(\"dc:date\", children2);\n      if (pubDate)\n        entry.pubDate = new Date(pubDate);\n      return entry;\n    })\n  };\n  addConditionally(feed, \"title\", \"title\", childs);\n  addConditionally(feed, \"link\", \"link\", childs);\n  addConditionally(feed, \"description\", \"description\", childs);\n  const updated = fetch(\"lastBuildDate\", childs);\n  if (updated) {\n    feed.updated = new Date(updated);\n  }\n  addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n  return feed;\n}\nconst MEDIA_KEYS_STRING = [\"url\", \"type\", \"lang\"];\nconst MEDIA_KEYS_INT = [\n  \"fileSize\",\n  \"bitrate\",\n  \"framerate\",\n  \"samplingrate\",\n  \"channels\",\n  \"duration\",\n  \"height\",\n  \"width\"\n];\nfunction getMediaElements(where) {\n  return getElementsByTagName(\"media:content\", where).map((elem) => {\n    const { attribs } = elem;\n    const media = {\n      medium: attribs[\"medium\"],\n      isDefault: !!attribs[\"isDefault\"]\n    };\n    for (const attrib of MEDIA_KEYS_STRING) {\n      if (attribs[attrib]) {\n        media[attrib] = attribs[attrib];\n      }\n    }\n    for (const attrib of MEDIA_KEYS_INT) {\n      if (attribs[attrib]) {\n        media[attrib] = parseInt(attribs[attrib], 10);\n      }\n    }\n    if (attribs[\"expression\"]) {\n      media.expression = attribs[\"expression\"];\n    }\n    return media;\n  });\n}\nfunction getOneElement(tagName, node) {\n  return getElementsByTagName(tagName, node, true, 1)[0];\n}\nfunction fetch(tagName, where, recurse = false) {\n  return textContent(getElementsByTagName(tagName, where, recurse, 1)).trim();\n}\nfunction addConditionally(obj, prop2, tagName, where, recurse = false) {\n  const val2 = fetch(tagName, where, recurse);\n  if (val2)\n    obj[prop2] = val2;\n}\nfunction isValidFeed(value) {\n  return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n}\nconst DomUtils = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  get DocumentPosition() {\n    return DocumentPosition;\n  },\n  append: append$1,\n  appendChild,\n  compareDocumentPosition,\n  existsOne,\n  filter: filter$2,\n  find: find$2,\n  findAll,\n  findOne,\n  findOneChild,\n  getAttributeValue,\n  getChildren,\n  getElementById,\n  getElements,\n  getElementsByTagName,\n  getElementsByTagType,\n  getFeed,\n  getInnerHTML,\n  getName,\n  getOuterHTML,\n  getParent,\n  getSiblings,\n  getText,\n  hasAttrib,\n  hasChildren,\n  innerText,\n  isCDATA,\n  isComment,\n  isDocument,\n  isTag,\n  isText,\n  nextElementSibling,\n  prepend: prepend$1,\n  prependChild,\n  prevElementSibling,\n  removeElement,\n  removeSubsets,\n  replaceElement,\n  testElement,\n  textContent,\n  uniqueSort\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction render(that, dom, options) {\n  if (!that)\n    return \"\";\n  return that(dom !== null && dom !== void 0 ? dom : that._root.children, null, void 0, options).toString();\n}\nfunction isOptions(dom, options) {\n  return typeof dom === \"object\" && dom != null && !(\"length\" in dom) && !(\"type\" in dom);\n}\nfunction html$1(dom, options) {\n  const toRender = isOptions(dom) ? (options = dom, void 0) : dom;\n  const opts = {\n    ...this === null || this === void 0 ? void 0 : this._options,\n    ...flattenOptions(options)\n  };\n  return render(this, toRender, opts);\n}\nfunction xml(dom) {\n  const options = { ...this._options, xmlMode: true };\n  return render(this, dom, options);\n}\nfunction text$1(elements) {\n  const elems = elements !== null && elements !== void 0 ? elements : this ? this.root() : [];\n  let ret = \"\";\n  for (let i = 0; i < elems.length; i++) {\n    ret += textContent(elems[i]);\n  }\n  return ret;\n}\nfunction parseHTML(data2, context, keepScripts = typeof context === \"boolean\" ? context : false) {\n  if (!data2 || typeof data2 !== \"string\") {\n    return null;\n  }\n  if (typeof context === \"boolean\") {\n    keepScripts = context;\n  }\n  const parsed = this.load(data2, this._options, false);\n  if (!keepScripts) {\n    parsed(\"script\").remove();\n  }\n  return [...parsed.root()[0].children];\n}\nfunction root() {\n  return this(this._root);\n}\nfunction contains(container, contained) {\n  if (contained === container) {\n    return false;\n  }\n  let next2 = contained;\n  while (next2 && next2 !== next2.parent) {\n    next2 = next2.parent;\n    if (next2 === container) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction extract$1(map2) {\n  return this.root().extract(map2);\n}\nfunction merge(arr1, arr2) {\n  if (!isArrayLike(arr1) || !isArrayLike(arr2)) {\n    return;\n  }\n  let newLength = arr1.length;\n  const len = +arr2.length;\n  for (let i = 0; i < len; i++) {\n    arr1[newLength++] = arr2[i];\n  }\n  arr1.length = newLength;\n  return arr1;\n}\nfunction isArrayLike(item) {\n  if (Array.isArray(item)) {\n    return true;\n  }\n  if (typeof item !== \"object\" || item === null || !(\"length\" in item) || typeof item.length !== \"number\" || item.length < 0) {\n    return false;\n  }\n  for (let i = 0; i < item.length; i++) {\n    if (!(i in item)) {\n      return false;\n    }\n  }\n  return true;\n}\nconst staticMethods = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  contains,\n  extract: extract$1,\n  html: html$1,\n  merge,\n  parseHTML,\n  root,\n  text: text$1,\n  xml\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction isCheerio(maybeCheerio) {\n  return maybeCheerio.cheerio != null;\n}\nfunction camelCase(str) {\n  return str.replace(/[._-](\\w|$)/g, (_, x) => x.toUpperCase());\n}\nfunction cssCase(str) {\n  return str.replace(/[A-Z]/g, \"-$&\").toLowerCase();\n}\nfunction domEach(array, fn) {\n  const len = array.length;\n  for (let i = 0; i < len; i++)\n    fn(array[i], i);\n  return array;\n}\nvar CharacterCodes;\n(function(CharacterCodes2) {\n  CharacterCodes2[CharacterCodes2[\"LowerA\"] = 97] = \"LowerA\";\n  CharacterCodes2[CharacterCodes2[\"LowerZ\"] = 122] = \"LowerZ\";\n  CharacterCodes2[CharacterCodes2[\"UpperA\"] = 65] = \"UpperA\";\n  CharacterCodes2[CharacterCodes2[\"UpperZ\"] = 90] = \"UpperZ\";\n  CharacterCodes2[CharacterCodes2[\"Exclamation\"] = 33] = \"Exclamation\";\n})(CharacterCodes || (CharacterCodes = {}));\nfunction isHtml(str) {\n  const tagStart = str.indexOf(\"<\");\n  if (tagStart < 0 || tagStart > str.length - 3)\n    return false;\n  const tagChar = str.charCodeAt(tagStart + 1);\n  return (tagChar >= CharacterCodes.LowerA && tagChar <= CharacterCodes.LowerZ || tagChar >= CharacterCodes.UpperA && tagChar <= CharacterCodes.UpperZ || tagChar === CharacterCodes.Exclamation) && str.includes(\">\", tagStart + 2);\n}\nconst hasOwn = Object.prototype.hasOwnProperty;\nconst rspace = /\\s+/;\nconst dataAttrPrefix = \"data-\";\nconst rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;\nconst rbrace = /^{[^]*}$|^\\[[^]*]$/;\nfunction getAttr(elem, name, xmlMode) {\n  var _a2;\n  if (!elem || !isTag(elem))\n    return void 0;\n  (_a2 = elem.attribs) !== null && _a2 !== void 0 ? _a2 : elem.attribs = {};\n  if (!name) {\n    return elem.attribs;\n  }\n  if (hasOwn.call(elem.attribs, name)) {\n    return !xmlMode && rboolean.test(name) ? name : elem.attribs[name];\n  }\n  if (elem.name === \"option\" && name === \"value\") {\n    return text$1(elem.children);\n  }\n  if (elem.name === \"input\" && (elem.attribs[\"type\"] === \"radio\" || elem.attribs[\"type\"] === \"checkbox\") && name === \"value\") {\n    return \"on\";\n  }\n  return void 0;\n}\nfunction setAttr(el, name, value) {\n  if (value === null) {\n    removeAttribute(el, name);\n  } else {\n    el.attribs[name] = `${value}`;\n  }\n}\nfunction attr(name, value) {\n  if (typeof name === \"object\" || value !== void 0) {\n    if (typeof value === \"function\") {\n      if (typeof name !== \"string\") {\n        {\n          throw new Error(\"Bad combination of arguments.\");\n        }\n      }\n      return domEach(this, (el, i) => {\n        if (isTag(el))\n          setAttr(el, name, value.call(el, i, el.attribs[name]));\n      });\n    }\n    return domEach(this, (el) => {\n      if (!isTag(el))\n        return;\n      if (typeof name === \"object\") {\n        for (const objName of Object.keys(name)) {\n          const objValue = name[objName];\n          setAttr(el, objName, objValue);\n        }\n      } else {\n        setAttr(el, name, value);\n      }\n    });\n  }\n  return arguments.length > 1 ? this : getAttr(this[0], name, this.options.xmlMode);\n}\nfunction getProp(el, name, xmlMode) {\n  return name in el ? (\n    // @ts-expect-error TS doesn't like us accessing the value directly here.\n    el[name]\n  ) : !xmlMode && rboolean.test(name) ? getAttr(el, name, false) !== void 0 : getAttr(el, name, xmlMode);\n}\nfunction setProp(el, name, value, xmlMode) {\n  if (name in el) {\n    el[name] = value;\n  } else {\n    setAttr(el, name, !xmlMode && rboolean.test(name) ? value ? \"\" : null : `${value}`);\n  }\n}\nfunction prop(name, value) {\n  var _a2;\n  if (typeof name === \"string\" && value === void 0) {\n    const el = this[0];\n    if (!el || !isTag(el))\n      return void 0;\n    switch (name) {\n      case \"style\": {\n        const property = this.css();\n        const keys = Object.keys(property);\n        for (let i = 0; i < keys.length; i++) {\n          property[i] = keys[i];\n        }\n        property.length = keys.length;\n        return property;\n      }\n      case \"tagName\":\n      case \"nodeName\": {\n        return el.name.toUpperCase();\n      }\n      case \"href\":\n      case \"src\": {\n        const prop2 = (_a2 = el.attribs) === null || _a2 === void 0 ? void 0 : _a2[name];\n        if (typeof URL !== \"undefined\" && (name === \"href\" && (el.tagName === \"a\" || el.tagName === \"link\") || name === \"src\" && (el.tagName === \"img\" || el.tagName === \"iframe\" || el.tagName === \"audio\" || el.tagName === \"video\" || el.tagName === \"source\")) && prop2 !== void 0 && this.options.baseURI) {\n          return new URL(prop2, this.options.baseURI).href;\n        }\n        return prop2;\n      }\n      case \"innerText\": {\n        return innerText(el);\n      }\n      case \"textContent\": {\n        return textContent(el);\n      }\n      case \"outerHTML\": {\n        return this.clone().wrap(\"<container />\").parent().html();\n      }\n      case \"innerHTML\": {\n        return this.html();\n      }\n      default: {\n        return getProp(el, name, this.options.xmlMode);\n      }\n    }\n  }\n  if (typeof name === \"object\" || value !== void 0) {\n    if (typeof value === \"function\") {\n      if (typeof name === \"object\") {\n        throw new TypeError(\"Bad combination of arguments.\");\n      }\n      return domEach(this, (el, i) => {\n        if (isTag(el)) {\n          setProp(el, name, value.call(el, i, getProp(el, name, this.options.xmlMode)), this.options.xmlMode);\n        }\n      });\n    }\n    return domEach(this, (el) => {\n      if (!isTag(el))\n        return;\n      if (typeof name === \"object\") {\n        for (const key of Object.keys(name)) {\n          const val2 = name[key];\n          setProp(el, key, val2, this.options.xmlMode);\n        }\n      } else {\n        setProp(el, name, value, this.options.xmlMode);\n      }\n    });\n  }\n  return void 0;\n}\nfunction setData(elem, name, value) {\n  var _a2;\n  (_a2 = elem.data) !== null && _a2 !== void 0 ? _a2 : elem.data = {};\n  if (typeof name === \"object\")\n    Object.assign(elem.data, name);\n  else if (typeof name === \"string\" && value !== void 0) {\n    elem.data[name] = value;\n  }\n}\nfunction readAllData(el) {\n  for (const domName of Object.keys(el.attribs)) {\n    if (!domName.startsWith(dataAttrPrefix)) {\n      continue;\n    }\n    const jsName = camelCase(domName.slice(dataAttrPrefix.length));\n    if (!hasOwn.call(el.data, jsName)) {\n      el.data[jsName] = parseDataValue(el.attribs[domName]);\n    }\n  }\n  return el.data;\n}\nfunction readData(el, name) {\n  const domName = dataAttrPrefix + cssCase(name);\n  const data2 = el.data;\n  if (hasOwn.call(data2, name)) {\n    return data2[name];\n  }\n  if (hasOwn.call(el.attribs, domName)) {\n    return data2[name] = parseDataValue(el.attribs[domName]);\n  }\n  return void 0;\n}\nfunction parseDataValue(value) {\n  if (value === \"null\")\n    return null;\n  if (value === \"true\")\n    return true;\n  if (value === \"false\")\n    return false;\n  const num = Number(value);\n  if (value === String(num))\n    return num;\n  if (rbrace.test(value)) {\n    try {\n      return JSON.parse(value);\n    } catch {\n    }\n  }\n  return value;\n}\nfunction data(name, value) {\n  var _a2;\n  const elem = this[0];\n  if (!elem || !isTag(elem))\n    return;\n  const dataEl = elem;\n  (_a2 = dataEl.data) !== null && _a2 !== void 0 ? _a2 : dataEl.data = {};\n  if (name == null) {\n    return readAllData(dataEl);\n  }\n  if (typeof name === \"object\" || value !== void 0) {\n    domEach(this, (el) => {\n      if (isTag(el)) {\n        if (typeof name === \"object\")\n          setData(el, name);\n        else\n          setData(el, name, value);\n      }\n    });\n    return this;\n  }\n  return readData(dataEl, name);\n}\nfunction val(value) {\n  const querying = arguments.length === 0;\n  const element = this[0];\n  if (!element || !isTag(element))\n    return querying ? void 0 : this;\n  switch (element.name) {\n    case \"textarea\": {\n      return this.text(value);\n    }\n    case \"select\": {\n      const option = this.find(\"option:selected\");\n      if (!querying) {\n        if (this.attr(\"multiple\") == null && typeof value === \"object\") {\n          return this;\n        }\n        this.find(\"option\").removeAttr(\"selected\");\n        const values = typeof value === \"object\" ? value : [value];\n        for (const val2 of values) {\n          this.find(`option[value=\"${val2}\"]`).attr(\"selected\", \"\");\n        }\n        return this;\n      }\n      return this.attr(\"multiple\") ? option.toArray().map((el) => text$1(el.children)) : option.attr(\"value\");\n    }\n    case \"input\":\n    case \"option\": {\n      return querying ? this.attr(\"value\") : this.attr(\"value\", value);\n    }\n  }\n  return void 0;\n}\nfunction removeAttribute(elem, name) {\n  if (!elem.attribs || !hasOwn.call(elem.attribs, name))\n    return;\n  delete elem.attribs[name];\n}\nfunction splitNames(names) {\n  return names ? names.trim().split(rspace) : [];\n}\nfunction removeAttr(name) {\n  const attrNames = splitNames(name);\n  for (const attrName of attrNames) {\n    domEach(this, (elem) => {\n      if (isTag(elem))\n        removeAttribute(elem, attrName);\n    });\n  }\n  return this;\n}\nfunction hasClass(className) {\n  return this.toArray().some((elem) => {\n    const clazz = isTag(elem) && elem.attribs[\"class\"];\n    let idx = -1;\n    if (clazz && className.length > 0) {\n      while ((idx = clazz.indexOf(className, idx + 1)) > -1) {\n        const end2 = idx + className.length;\n        if ((idx === 0 || rspace.test(clazz[idx - 1])) && (end2 === clazz.length || rspace.test(clazz[end2]))) {\n          return true;\n        }\n      }\n    }\n    return false;\n  });\n}\nfunction addClass(value) {\n  if (typeof value === \"function\") {\n    return domEach(this, (el, i) => {\n      if (isTag(el)) {\n        const className = el.attribs[\"class\"] || \"\";\n        addClass.call([el], value.call(el, i, className));\n      }\n    });\n  }\n  if (!value || typeof value !== \"string\")\n    return this;\n  const classNames = value.split(rspace);\n  const numElements = this.length;\n  for (let i = 0; i < numElements; i++) {\n    const el = this[i];\n    if (!isTag(el))\n      continue;\n    const className = getAttr(el, \"class\", false);\n    if (className) {\n      let setClass = ` ${className} `;\n      for (const cn of classNames) {\n        const appendClass = `${cn} `;\n        if (!setClass.includes(` ${appendClass}`))\n          setClass += appendClass;\n      }\n      setAttr(el, \"class\", setClass.trim());\n    } else {\n      setAttr(el, \"class\", classNames.join(\" \").trim());\n    }\n  }\n  return this;\n}\nfunction removeClass(name) {\n  if (typeof name === \"function\") {\n    return domEach(this, (el, i) => {\n      if (isTag(el)) {\n        removeClass.call([el], name.call(el, i, el.attribs[\"class\"] || \"\"));\n      }\n    });\n  }\n  const classes = splitNames(name);\n  const numClasses = classes.length;\n  const removeAll = arguments.length === 0;\n  return domEach(this, (el) => {\n    if (!isTag(el))\n      return;\n    if (removeAll) {\n      el.attribs[\"class\"] = \"\";\n    } else {\n      const elClasses = splitNames(el.attribs[\"class\"]);\n      let changed = false;\n      for (let j = 0; j < numClasses; j++) {\n        const index2 = elClasses.indexOf(classes[j]);\n        if (index2 >= 0) {\n          elClasses.splice(index2, 1);\n          changed = true;\n          j--;\n        }\n      }\n      if (changed) {\n        el.attribs[\"class\"] = elClasses.join(\" \");\n      }\n    }\n  });\n}\nfunction toggleClass(value, stateVal) {\n  if (typeof value === \"function\") {\n    return domEach(this, (el, i) => {\n      if (isTag(el)) {\n        toggleClass.call([el], value.call(el, i, el.attribs[\"class\"] || \"\", stateVal), stateVal);\n      }\n    });\n  }\n  if (!value || typeof value !== \"string\")\n    return this;\n  const classNames = value.split(rspace);\n  const numClasses = classNames.length;\n  const state = typeof stateVal === \"boolean\" ? stateVal ? 1 : -1 : 0;\n  const numElements = this.length;\n  for (let i = 0; i < numElements; i++) {\n    const el = this[i];\n    if (!isTag(el))\n      continue;\n    const elementClasses = splitNames(el.attribs[\"class\"]);\n    for (let j = 0; j < numClasses; j++) {\n      const index2 = elementClasses.indexOf(classNames[j]);\n      if (state >= 0 && index2 < 0) {\n        elementClasses.push(classNames[j]);\n      } else if (state <= 0 && index2 >= 0) {\n        elementClasses.splice(index2, 1);\n      }\n    }\n    el.attribs[\"class\"] = elementClasses.join(\" \");\n  }\n  return this;\n}\nconst Attributes = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  addClass,\n  attr,\n  data,\n  hasClass,\n  prop,\n  removeAttr,\n  removeClass,\n  toggleClass,\n  val\n}, Symbol.toStringTag, { value: \"Module\" }));\nvar SelectorType;\n(function(SelectorType2) {\n  SelectorType2[\"Attribute\"] = \"attribute\";\n  SelectorType2[\"Pseudo\"] = \"pseudo\";\n  SelectorType2[\"PseudoElement\"] = \"pseudo-element\";\n  SelectorType2[\"Tag\"] = \"tag\";\n  SelectorType2[\"Universal\"] = \"universal\";\n  SelectorType2[\"Adjacent\"] = \"adjacent\";\n  SelectorType2[\"Child\"] = \"child\";\n  SelectorType2[\"Descendant\"] = \"descendant\";\n  SelectorType2[\"Parent\"] = \"parent\";\n  SelectorType2[\"Sibling\"] = \"sibling\";\n  SelectorType2[\"ColumnCombinator\"] = \"column-combinator\";\n})(SelectorType || (SelectorType = {}));\nvar AttributeAction;\n(function(AttributeAction2) {\n  AttributeAction2[\"Any\"] = \"any\";\n  AttributeAction2[\"Element\"] = \"element\";\n  AttributeAction2[\"End\"] = \"end\";\n  AttributeAction2[\"Equals\"] = \"equals\";\n  AttributeAction2[\"Exists\"] = \"exists\";\n  AttributeAction2[\"Hyphen\"] = \"hyphen\";\n  AttributeAction2[\"Not\"] = \"not\";\n  AttributeAction2[\"Start\"] = \"start\";\n})(AttributeAction || (AttributeAction = {}));\nconst reName = /^[^\\\\#]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nconst reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\nconst actionTypes = /* @__PURE__ */ new Map([\n  [126, AttributeAction.Element],\n  [94, AttributeAction.Start],\n  [36, AttributeAction.End],\n  [42, AttributeAction.Any],\n  [33, AttributeAction.Not],\n  [124, AttributeAction.Hyphen]\n]);\nconst unpackPseudos = /* @__PURE__ */ new Set([\n  \"has\",\n  \"not\",\n  \"matches\",\n  \"is\",\n  \"where\",\n  \"host\",\n  \"host-context\"\n]);\nfunction isTraversal$1(selector) {\n  switch (selector.type) {\n    case SelectorType.Adjacent:\n    case SelectorType.Child:\n    case SelectorType.Descendant:\n    case SelectorType.Parent:\n    case SelectorType.Sibling:\n    case SelectorType.ColumnCombinator:\n      return true;\n    default:\n      return false;\n  }\n}\nconst stripQuotesFromPseudos = /* @__PURE__ */ new Set([\"contains\", \"icontains\"]);\nfunction funescape(_, escaped, escapedWhitespace) {\n  const high = parseInt(escaped, 16) - 65536;\n  return high !== high || escapedWhitespace ? escaped : high < 0 ? (\n    // BMP codepoint\n    String.fromCharCode(high + 65536)\n  ) : (\n    // Supplemental Plane codepoint (surrogate pair)\n    String.fromCharCode(high >> 10 | 55296, high & 1023 | 56320)\n  );\n}\nfunction unescapeCSS(str) {\n  return str.replace(reEscape, funescape);\n}\nfunction isQuote(c) {\n  return c === 39 || c === 34;\n}\nfunction isWhitespace$1(c) {\n  return c === 32 || c === 9 || c === 10 || c === 12 || c === 13;\n}\nfunction parse$2(selector) {\n  const subselects2 = [];\n  const endIndex = parseSelector(subselects2, `${selector}`, 0);\n  if (endIndex < selector.length) {\n    throw new Error(`Unmatched selector: ${selector.slice(endIndex)}`);\n  }\n  return subselects2;\n}\nfunction parseSelector(subselects2, selector, selectorIndex) {\n  let tokens = [];\n  function getName2(offset) {\n    const match = selector.slice(selectorIndex + offset).match(reName);\n    if (!match) {\n      throw new Error(`Expected name, found ${selector.slice(selectorIndex)}`);\n    }\n    const [name] = match;\n    selectorIndex += offset + name.length;\n    return unescapeCSS(name);\n  }\n  function stripWhitespace(offset) {\n    selectorIndex += offset;\n    while (selectorIndex < selector.length && isWhitespace$1(selector.charCodeAt(selectorIndex))) {\n      selectorIndex++;\n    }\n  }\n  function readValueWithParenthesis() {\n    selectorIndex += 1;\n    const start = selectorIndex;\n    let counter = 1;\n    for (; counter > 0 && selectorIndex < selector.length; selectorIndex++) {\n      if (selector.charCodeAt(selectorIndex) === 40 && !isEscaped(selectorIndex)) {\n        counter++;\n      } else if (selector.charCodeAt(selectorIndex) === 41 && !isEscaped(selectorIndex)) {\n        counter--;\n      }\n    }\n    if (counter) {\n      throw new Error(\"Parenthesis not matched\");\n    }\n    return unescapeCSS(selector.slice(start, selectorIndex - 1));\n  }\n  function isEscaped(pos) {\n    let slashCount = 0;\n    while (selector.charCodeAt(--pos) === 92)\n      slashCount++;\n    return (slashCount & 1) === 1;\n  }\n  function ensureNotTraversal() {\n    if (tokens.length > 0 && isTraversal$1(tokens[tokens.length - 1])) {\n      throw new Error(\"Did not expect successive traversals.\");\n    }\n  }\n  function addTraversal(type) {\n    if (tokens.length > 0 && tokens[tokens.length - 1].type === SelectorType.Descendant) {\n      tokens[tokens.length - 1].type = type;\n      return;\n    }\n    ensureNotTraversal();\n    tokens.push({ type });\n  }\n  function addSpecialAttribute(name, action) {\n    tokens.push({\n      type: SelectorType.Attribute,\n      name,\n      action,\n      value: getName2(1),\n      namespace: null,\n      ignoreCase: \"quirks\"\n    });\n  }\n  function finalizeSubselector() {\n    if (tokens.length && tokens[tokens.length - 1].type === SelectorType.Descendant) {\n      tokens.pop();\n    }\n    if (tokens.length === 0) {\n      throw new Error(\"Empty sub-selector\");\n    }\n    subselects2.push(tokens);\n  }\n  stripWhitespace(0);\n  if (selector.length === selectorIndex) {\n    return selectorIndex;\n  }\n  loop: while (selectorIndex < selector.length) {\n    const firstChar = selector.charCodeAt(selectorIndex);\n    switch (firstChar) {\n      // Whitespace\n      case 32:\n      case 9:\n      case 10:\n      case 12:\n      case 13: {\n        if (tokens.length === 0 || tokens[0].type !== SelectorType.Descendant) {\n          ensureNotTraversal();\n          tokens.push({ type: SelectorType.Descendant });\n        }\n        stripWhitespace(1);\n        break;\n      }\n      // Traversals\n      case 62: {\n        addTraversal(SelectorType.Child);\n        stripWhitespace(1);\n        break;\n      }\n      case 60: {\n        addTraversal(SelectorType.Parent);\n        stripWhitespace(1);\n        break;\n      }\n      case 126: {\n        addTraversal(SelectorType.Sibling);\n        stripWhitespace(1);\n        break;\n      }\n      case 43: {\n        addTraversal(SelectorType.Adjacent);\n        stripWhitespace(1);\n        break;\n      }\n      // Special attribute selectors: .class, #id\n      case 46: {\n        addSpecialAttribute(\"class\", AttributeAction.Element);\n        break;\n      }\n      case 35: {\n        addSpecialAttribute(\"id\", AttributeAction.Equals);\n        break;\n      }\n      case 91: {\n        stripWhitespace(1);\n        let name;\n        let namespace = null;\n        if (selector.charCodeAt(selectorIndex) === 124) {\n          name = getName2(1);\n        } else if (selector.startsWith(\"*|\", selectorIndex)) {\n          namespace = \"*\";\n          name = getName2(2);\n        } else {\n          name = getName2(0);\n          if (selector.charCodeAt(selectorIndex) === 124 && selector.charCodeAt(selectorIndex + 1) !== 61) {\n            namespace = name;\n            name = getName2(1);\n          }\n        }\n        stripWhitespace(0);\n        let action = AttributeAction.Exists;\n        const possibleAction = actionTypes.get(selector.charCodeAt(selectorIndex));\n        if (possibleAction) {\n          action = possibleAction;\n          if (selector.charCodeAt(selectorIndex + 1) !== 61) {\n            throw new Error(\"Expected `=`\");\n          }\n          stripWhitespace(2);\n        } else if (selector.charCodeAt(selectorIndex) === 61) {\n          action = AttributeAction.Equals;\n          stripWhitespace(1);\n        }\n        let value = \"\";\n        let ignoreCase = null;\n        if (action !== \"exists\") {\n          if (isQuote(selector.charCodeAt(selectorIndex))) {\n            const quote = selector.charCodeAt(selectorIndex);\n            let sectionEnd = selectorIndex + 1;\n            while (sectionEnd < selector.length && (selector.charCodeAt(sectionEnd) !== quote || isEscaped(sectionEnd))) {\n              sectionEnd += 1;\n            }\n            if (selector.charCodeAt(sectionEnd) !== quote) {\n              throw new Error(\"Attribute value didn't end\");\n            }\n            value = unescapeCSS(selector.slice(selectorIndex + 1, sectionEnd));\n            selectorIndex = sectionEnd + 1;\n          } else {\n            const valueStart = selectorIndex;\n            while (selectorIndex < selector.length && (!isWhitespace$1(selector.charCodeAt(selectorIndex)) && selector.charCodeAt(selectorIndex) !== 93 || isEscaped(selectorIndex))) {\n              selectorIndex += 1;\n            }\n            value = unescapeCSS(selector.slice(valueStart, selectorIndex));\n          }\n          stripWhitespace(0);\n          const forceIgnore = selector.charCodeAt(selectorIndex) | 32;\n          if (forceIgnore === 115) {\n            ignoreCase = false;\n            stripWhitespace(1);\n          } else if (forceIgnore === 105) {\n            ignoreCase = true;\n            stripWhitespace(1);\n          }\n        }\n        if (selector.charCodeAt(selectorIndex) !== 93) {\n          throw new Error(\"Attribute selector didn't terminate\");\n        }\n        selectorIndex += 1;\n        const attributeSelector = {\n          type: SelectorType.Attribute,\n          name,\n          action,\n          value,\n          namespace,\n          ignoreCase\n        };\n        tokens.push(attributeSelector);\n        break;\n      }\n      case 58: {\n        if (selector.charCodeAt(selectorIndex + 1) === 58) {\n          tokens.push({\n            type: SelectorType.PseudoElement,\n            name: getName2(2).toLowerCase(),\n            data: selector.charCodeAt(selectorIndex) === 40 ? readValueWithParenthesis() : null\n          });\n          continue;\n        }\n        const name = getName2(1).toLowerCase();\n        let data2 = null;\n        if (selector.charCodeAt(selectorIndex) === 40) {\n          if (unpackPseudos.has(name)) {\n            if (isQuote(selector.charCodeAt(selectorIndex + 1))) {\n              throw new Error(`Pseudo-selector ${name} cannot be quoted`);\n            }\n            data2 = [];\n            selectorIndex = parseSelector(data2, selector, selectorIndex + 1);\n            if (selector.charCodeAt(selectorIndex) !== 41) {\n              throw new Error(`Missing closing parenthesis in :${name} (${selector})`);\n            }\n            selectorIndex += 1;\n          } else {\n            data2 = readValueWithParenthesis();\n            if (stripQuotesFromPseudos.has(name)) {\n              const quot = data2.charCodeAt(0);\n              if (quot === data2.charCodeAt(data2.length - 1) && isQuote(quot)) {\n                data2 = data2.slice(1, -1);\n              }\n            }\n            data2 = unescapeCSS(data2);\n          }\n        }\n        tokens.push({ type: SelectorType.Pseudo, name, data: data2 });\n        break;\n      }\n      case 44: {\n        finalizeSubselector();\n        tokens = [];\n        stripWhitespace(1);\n        break;\n      }\n      default: {\n        if (selector.startsWith(\"/*\", selectorIndex)) {\n          const endIndex = selector.indexOf(\"*/\", selectorIndex + 2);\n          if (endIndex < 0) {\n            throw new Error(\"Comment was not terminated\");\n          }\n          selectorIndex = endIndex + 2;\n          if (tokens.length === 0) {\n            stripWhitespace(0);\n          }\n          break;\n        }\n        let namespace = null;\n        let name;\n        if (firstChar === 42) {\n          selectorIndex += 1;\n          name = \"*\";\n        } else if (firstChar === 124) {\n          name = \"\";\n          if (selector.charCodeAt(selectorIndex + 1) === 124) {\n            addTraversal(SelectorType.ColumnCombinator);\n            stripWhitespace(2);\n            break;\n          }\n        } else if (reName.test(selector.slice(selectorIndex))) {\n          name = getName2(0);\n        } else {\n          break loop;\n        }\n        if (selector.charCodeAt(selectorIndex) === 124 && selector.charCodeAt(selectorIndex + 1) !== 124) {\n          namespace = name;\n          if (selector.charCodeAt(selectorIndex + 1) === 42) {\n            name = \"*\";\n            selectorIndex += 2;\n          } else {\n            name = getName2(1);\n          }\n        }\n        tokens.push(name === \"*\" ? { type: SelectorType.Universal, namespace } : { type: SelectorType.Tag, name, namespace });\n      }\n    }\n  }\n  finalizeSubselector();\n  return selectorIndex;\n}\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, \"default\") ? x[\"default\"] : x;\n}\nvar boolbase$1;\nvar hasRequiredBoolbase;\nfunction requireBoolbase() {\n  if (hasRequiredBoolbase) return boolbase$1;\n  hasRequiredBoolbase = 1;\n  boolbase$1 = {\n    trueFunc: function trueFunc() {\n      return true;\n    },\n    falseFunc: function falseFunc() {\n      return false;\n    }\n  };\n  return boolbase$1;\n}\nvar boolbaseExports = requireBoolbase();\nconst boolbase = /* @__PURE__ */ getDefaultExportFromCjs(boolbaseExports);\nconst procedure = /* @__PURE__ */ new Map([\n  [SelectorType.Universal, 50],\n  [SelectorType.Tag, 30],\n  [SelectorType.Attribute, 1],\n  [SelectorType.Pseudo, 0]\n]);\nfunction isTraversal(token) {\n  return !procedure.has(token.type);\n}\nconst attributes = /* @__PURE__ */ new Map([\n  [AttributeAction.Exists, 10],\n  [AttributeAction.Equals, 8],\n  [AttributeAction.Not, 7],\n  [AttributeAction.Start, 6],\n  [AttributeAction.End, 6],\n  [AttributeAction.Any, 5]\n]);\nfunction sortByProcedure(arr) {\n  const procs = arr.map(getProcedure);\n  for (let i = 1; i < arr.length; i++) {\n    const procNew = procs[i];\n    if (procNew < 0)\n      continue;\n    for (let j = i - 1; j >= 0 && procNew < procs[j]; j--) {\n      const token = arr[j + 1];\n      arr[j + 1] = arr[j];\n      arr[j] = token;\n      procs[j + 1] = procs[j];\n      procs[j] = procNew;\n    }\n  }\n}\nfunction getProcedure(token) {\n  var _a2, _b;\n  let proc = (_a2 = procedure.get(token.type)) !== null && _a2 !== void 0 ? _a2 : -1;\n  if (token.type === SelectorType.Attribute) {\n    proc = (_b = attributes.get(token.action)) !== null && _b !== void 0 ? _b : 4;\n    if (token.action === AttributeAction.Equals && token.name === \"id\") {\n      proc = 9;\n    }\n    if (token.ignoreCase) {\n      proc >>= 1;\n    }\n  } else if (token.type === SelectorType.Pseudo) {\n    if (!token.data) {\n      proc = 3;\n    } else if (token.name === \"has\" || token.name === \"contains\") {\n      proc = 0;\n    } else if (Array.isArray(token.data)) {\n      proc = Math.min(...token.data.map((d) => Math.min(...d.map(getProcedure))));\n      if (proc < 0) {\n        proc = 0;\n      }\n    } else {\n      proc = 2;\n    }\n  }\n  return proc;\n}\nconst reChars = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\nfunction escapeRegex(value) {\n  return value.replace(reChars, \"\\\\$&\");\n}\nconst caseInsensitiveAttributes = /* @__PURE__ */ new Set([\n  \"accept\",\n  \"accept-charset\",\n  \"align\",\n  \"alink\",\n  \"axis\",\n  \"bgcolor\",\n  \"charset\",\n  \"checked\",\n  \"clear\",\n  \"codetype\",\n  \"color\",\n  \"compact\",\n  \"declare\",\n  \"defer\",\n  \"dir\",\n  \"direction\",\n  \"disabled\",\n  \"enctype\",\n  \"face\",\n  \"frame\",\n  \"hreflang\",\n  \"http-equiv\",\n  \"lang\",\n  \"language\",\n  \"link\",\n  \"media\",\n  \"method\",\n  \"multiple\",\n  \"nohref\",\n  \"noresize\",\n  \"noshade\",\n  \"nowrap\",\n  \"readonly\",\n  \"rel\",\n  \"rev\",\n  \"rules\",\n  \"scope\",\n  \"scrolling\",\n  \"selected\",\n  \"shape\",\n  \"target\",\n  \"text\",\n  \"type\",\n  \"valign\",\n  \"valuetype\",\n  \"vlink\"\n]);\nfunction shouldIgnoreCase(selector, options) {\n  return typeof selector.ignoreCase === \"boolean\" ? selector.ignoreCase : selector.ignoreCase === \"quirks\" ? !!options.quirksMode : !options.xmlMode && caseInsensitiveAttributes.has(selector.name);\n}\nconst attributeRules = {\n  equals(next2, data2, options) {\n    const { adapter } = options;\n    const { name } = data2;\n    let { value } = data2;\n    if (shouldIgnoreCase(data2, options)) {\n      value = value.toLowerCase();\n      return (elem) => {\n        const attr2 = adapter.getAttributeValue(elem, name);\n        return attr2 != null && attr2.length === value.length && attr2.toLowerCase() === value && next2(elem);\n      };\n    }\n    return (elem) => adapter.getAttributeValue(elem, name) === value && next2(elem);\n  },\n  hyphen(next2, data2, options) {\n    const { adapter } = options;\n    const { name } = data2;\n    let { value } = data2;\n    const len = value.length;\n    if (shouldIgnoreCase(data2, options)) {\n      value = value.toLowerCase();\n      return function hyphenIC(elem) {\n        const attr2 = adapter.getAttributeValue(elem, name);\n        return attr2 != null && (attr2.length === len || attr2.charAt(len) === \"-\") && attr2.substr(0, len).toLowerCase() === value && next2(elem);\n      };\n    }\n    return function hyphen(elem) {\n      const attr2 = adapter.getAttributeValue(elem, name);\n      return attr2 != null && (attr2.length === len || attr2.charAt(len) === \"-\") && attr2.substr(0, len) === value && next2(elem);\n    };\n  },\n  element(next2, data2, options) {\n    const { adapter } = options;\n    const { name, value } = data2;\n    if (/\\s/.test(value)) {\n      return boolbase.falseFunc;\n    }\n    const regex = new RegExp(`(?:^|\\\\s)${escapeRegex(value)}(?:$|\\\\s)`, shouldIgnoreCase(data2, options) ? \"i\" : \"\");\n    return function element(elem) {\n      const attr2 = adapter.getAttributeValue(elem, name);\n      return attr2 != null && attr2.length >= value.length && regex.test(attr2) && next2(elem);\n    };\n  },\n  exists(next2, { name }, { adapter }) {\n    return (elem) => adapter.hasAttrib(elem, name) && next2(elem);\n  },\n  start(next2, data2, options) {\n    const { adapter } = options;\n    const { name } = data2;\n    let { value } = data2;\n    const len = value.length;\n    if (len === 0) {\n      return boolbase.falseFunc;\n    }\n    if (shouldIgnoreCase(data2, options)) {\n      value = value.toLowerCase();\n      return (elem) => {\n        const attr2 = adapter.getAttributeValue(elem, name);\n        return attr2 != null && attr2.length >= len && attr2.substr(0, len).toLowerCase() === value && next2(elem);\n      };\n    }\n    return (elem) => {\n      var _a2;\n      return !!((_a2 = adapter.getAttributeValue(elem, name)) === null || _a2 === void 0 ? void 0 : _a2.startsWith(value)) && next2(elem);\n    };\n  },\n  end(next2, data2, options) {\n    const { adapter } = options;\n    const { name } = data2;\n    let { value } = data2;\n    const len = -value.length;\n    if (len === 0) {\n      return boolbase.falseFunc;\n    }\n    if (shouldIgnoreCase(data2, options)) {\n      value = value.toLowerCase();\n      return (elem) => {\n        var _a2;\n        return ((_a2 = adapter.getAttributeValue(elem, name)) === null || _a2 === void 0 ? void 0 : _a2.substr(len).toLowerCase()) === value && next2(elem);\n      };\n    }\n    return (elem) => {\n      var _a2;\n      return !!((_a2 = adapter.getAttributeValue(elem, name)) === null || _a2 === void 0 ? void 0 : _a2.endsWith(value)) && next2(elem);\n    };\n  },\n  any(next2, data2, options) {\n    const { adapter } = options;\n    const { name, value } = data2;\n    if (value === \"\") {\n      return boolbase.falseFunc;\n    }\n    if (shouldIgnoreCase(data2, options)) {\n      const regex = new RegExp(escapeRegex(value), \"i\");\n      return function anyIC(elem) {\n        const attr2 = adapter.getAttributeValue(elem, name);\n        return attr2 != null && attr2.length >= value.length && regex.test(attr2) && next2(elem);\n      };\n    }\n    return (elem) => {\n      var _a2;\n      return !!((_a2 = adapter.getAttributeValue(elem, name)) === null || _a2 === void 0 ? void 0 : _a2.includes(value)) && next2(elem);\n    };\n  },\n  not(next2, data2, options) {\n    const { adapter } = options;\n    const { name } = data2;\n    let { value } = data2;\n    if (value === \"\") {\n      return (elem) => !!adapter.getAttributeValue(elem, name) && next2(elem);\n    } else if (shouldIgnoreCase(data2, options)) {\n      value = value.toLowerCase();\n      return (elem) => {\n        const attr2 = adapter.getAttributeValue(elem, name);\n        return (attr2 == null || attr2.length !== value.length || attr2.toLowerCase() !== value) && next2(elem);\n      };\n    }\n    return (elem) => adapter.getAttributeValue(elem, name) !== value && next2(elem);\n  }\n};\nconst whitespace = /* @__PURE__ */ new Set([9, 10, 12, 13, 32]);\nconst ZERO = \"0\".charCodeAt(0);\nconst NINE = \"9\".charCodeAt(0);\nfunction parse$1(formula) {\n  formula = formula.trim().toLowerCase();\n  if (formula === \"even\") {\n    return [2, 0];\n  } else if (formula === \"odd\") {\n    return [2, 1];\n  }\n  let idx = 0;\n  let a = 0;\n  let sign = readSign();\n  let number = readNumber();\n  if (idx < formula.length && formula.charAt(idx) === \"n\") {\n    idx++;\n    a = sign * (number !== null && number !== void 0 ? number : 1);\n    skipWhitespace();\n    if (idx < formula.length) {\n      sign = readSign();\n      skipWhitespace();\n      number = readNumber();\n    } else {\n      sign = number = 0;\n    }\n  }\n  if (number === null || idx < formula.length) {\n    throw new Error(`n-th rule couldn't be parsed ('${formula}')`);\n  }\n  return [a, sign * number];\n  function readSign() {\n    if (formula.charAt(idx) === \"-\") {\n      idx++;\n      return -1;\n    }\n    if (formula.charAt(idx) === \"+\") {\n      idx++;\n    }\n    return 1;\n  }\n  function readNumber() {\n    const start = idx;\n    let value = 0;\n    while (idx < formula.length && formula.charCodeAt(idx) >= ZERO && formula.charCodeAt(idx) <= NINE) {\n      value = value * 10 + (formula.charCodeAt(idx) - ZERO);\n      idx++;\n    }\n    return idx === start ? null : value;\n  }\n  function skipWhitespace() {\n    while (idx < formula.length && whitespace.has(formula.charCodeAt(idx))) {\n      idx++;\n    }\n  }\n}\nfunction compile(parsed) {\n  const a = parsed[0];\n  const b = parsed[1] - 1;\n  if (b < 0 && a <= 0)\n    return boolbase.falseFunc;\n  if (a === -1)\n    return (index2) => index2 <= b;\n  if (a === 0)\n    return (index2) => index2 === b;\n  if (a === 1)\n    return b < 0 ? boolbase.trueFunc : (index2) => index2 >= b;\n  const absA = Math.abs(a);\n  const bMod = (b % absA + absA) % absA;\n  return a > 1 ? (index2) => index2 >= b && index2 % absA === bMod : (index2) => index2 <= b && index2 % absA === bMod;\n}\nfunction nthCheck(formula) {\n  return compile(parse$1(formula));\n}\nfunction getChildFunc(next2, adapter) {\n  return (elem) => {\n    const parent2 = adapter.getParent(elem);\n    return parent2 != null && adapter.isTag(parent2) && next2(elem);\n  };\n}\nconst filters = {\n  contains(next2, text2, { adapter }) {\n    return function contains2(elem) {\n      return next2(elem) && adapter.getText(elem).includes(text2);\n    };\n  },\n  icontains(next2, text2, { adapter }) {\n    const itext = text2.toLowerCase();\n    return function icontains(elem) {\n      return next2(elem) && adapter.getText(elem).toLowerCase().includes(itext);\n    };\n  },\n  // Location specific methods\n  \"nth-child\"(next2, rule, { adapter, equals }) {\n    const func = nthCheck(rule);\n    if (func === boolbase.falseFunc)\n      return boolbase.falseFunc;\n    if (func === boolbase.trueFunc)\n      return getChildFunc(next2, adapter);\n    return function nthChild(elem) {\n      const siblings2 = adapter.getSiblings(elem);\n      let pos = 0;\n      for (let i = 0; i < siblings2.length; i++) {\n        if (equals(elem, siblings2[i]))\n          break;\n        if (adapter.isTag(siblings2[i])) {\n          pos++;\n        }\n      }\n      return func(pos) && next2(elem);\n    };\n  },\n  \"nth-last-child\"(next2, rule, { adapter, equals }) {\n    const func = nthCheck(rule);\n    if (func === boolbase.falseFunc)\n      return boolbase.falseFunc;\n    if (func === boolbase.trueFunc)\n      return getChildFunc(next2, adapter);\n    return function nthLastChild(elem) {\n      const siblings2 = adapter.getSiblings(elem);\n      let pos = 0;\n      for (let i = siblings2.length - 1; i >= 0; i--) {\n        if (equals(elem, siblings2[i]))\n          break;\n        if (adapter.isTag(siblings2[i])) {\n          pos++;\n        }\n      }\n      return func(pos) && next2(elem);\n    };\n  },\n  \"nth-of-type\"(next2, rule, { adapter, equals }) {\n    const func = nthCheck(rule);\n    if (func === boolbase.falseFunc)\n      return boolbase.falseFunc;\n    if (func === boolbase.trueFunc)\n      return getChildFunc(next2, adapter);\n    return function nthOfType(elem) {\n      const siblings2 = adapter.getSiblings(elem);\n      let pos = 0;\n      for (let i = 0; i < siblings2.length; i++) {\n        const currentSibling = siblings2[i];\n        if (equals(elem, currentSibling))\n          break;\n        if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === adapter.getName(elem)) {\n          pos++;\n        }\n      }\n      return func(pos) && next2(elem);\n    };\n  },\n  \"nth-last-of-type\"(next2, rule, { adapter, equals }) {\n    const func = nthCheck(rule);\n    if (func === boolbase.falseFunc)\n      return boolbase.falseFunc;\n    if (func === boolbase.trueFunc)\n      return getChildFunc(next2, adapter);\n    return function nthLastOfType(elem) {\n      const siblings2 = adapter.getSiblings(elem);\n      let pos = 0;\n      for (let i = siblings2.length - 1; i >= 0; i--) {\n        const currentSibling = siblings2[i];\n        if (equals(elem, currentSibling))\n          break;\n        if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === adapter.getName(elem)) {\n          pos++;\n        }\n      }\n      return func(pos) && next2(elem);\n    };\n  },\n  // TODO determine the actual root element\n  root(next2, _rule, { adapter }) {\n    return (elem) => {\n      const parent2 = adapter.getParent(elem);\n      return (parent2 == null || !adapter.isTag(parent2)) && next2(elem);\n    };\n  },\n  scope(next2, rule, options, context) {\n    const { equals } = options;\n    if (!context || context.length === 0) {\n      return filters[\"root\"](next2, rule, options);\n    }\n    if (context.length === 1) {\n      return (elem) => equals(context[0], elem) && next2(elem);\n    }\n    return (elem) => context.includes(elem) && next2(elem);\n  },\n  hover: dynamicStatePseudo(\"isHovered\"),\n  visited: dynamicStatePseudo(\"isVisited\"),\n  active: dynamicStatePseudo(\"isActive\")\n};\nfunction dynamicStatePseudo(name) {\n  return function dynamicPseudo(next2, _rule, { adapter }) {\n    const func = adapter[name];\n    if (typeof func !== \"function\") {\n      return boolbase.falseFunc;\n    }\n    return function active(elem) {\n      return func(elem) && next2(elem);\n    };\n  };\n}\nconst pseudos = {\n  empty(elem, { adapter }) {\n    return !adapter.getChildren(elem).some((elem2) => (\n      // FIXME: `getText` call is potentially expensive.\n      adapter.isTag(elem2) || adapter.getText(elem2) !== \"\"\n    ));\n  },\n  \"first-child\"(elem, { adapter, equals }) {\n    if (adapter.prevElementSibling) {\n      return adapter.prevElementSibling(elem) == null;\n    }\n    const firstChild = adapter.getSiblings(elem).find((elem2) => adapter.isTag(elem2));\n    return firstChild != null && equals(elem, firstChild);\n  },\n  \"last-child\"(elem, { adapter, equals }) {\n    const siblings2 = adapter.getSiblings(elem);\n    for (let i = siblings2.length - 1; i >= 0; i--) {\n      if (equals(elem, siblings2[i]))\n        return true;\n      if (adapter.isTag(siblings2[i]))\n        break;\n    }\n    return false;\n  },\n  \"first-of-type\"(elem, { adapter, equals }) {\n    const siblings2 = adapter.getSiblings(elem);\n    const elemName = adapter.getName(elem);\n    for (let i = 0; i < siblings2.length; i++) {\n      const currentSibling = siblings2[i];\n      if (equals(elem, currentSibling))\n        return true;\n      if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === elemName) {\n        break;\n      }\n    }\n    return false;\n  },\n  \"last-of-type\"(elem, { adapter, equals }) {\n    const siblings2 = adapter.getSiblings(elem);\n    const elemName = adapter.getName(elem);\n    for (let i = siblings2.length - 1; i >= 0; i--) {\n      const currentSibling = siblings2[i];\n      if (equals(elem, currentSibling))\n        return true;\n      if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === elemName) {\n        break;\n      }\n    }\n    return false;\n  },\n  \"only-of-type\"(elem, { adapter, equals }) {\n    const elemName = adapter.getName(elem);\n    return adapter.getSiblings(elem).every((sibling) => equals(elem, sibling) || !adapter.isTag(sibling) || adapter.getName(sibling) !== elemName);\n  },\n  \"only-child\"(elem, { adapter, equals }) {\n    return adapter.getSiblings(elem).every((sibling) => equals(elem, sibling) || !adapter.isTag(sibling));\n  }\n};\nfunction verifyPseudoArgs(func, name, subselect, argIndex) {\n  if (subselect === null) {\n    if (func.length > argIndex) {\n      throw new Error(`Pseudo-class :${name} requires an argument`);\n    }\n  } else if (func.length === argIndex) {\n    throw new Error(`Pseudo-class :${name} doesn't have any arguments`);\n  }\n}\nconst aliases = {\n  // Links\n  \"any-link\": \":is(a, area, link)[href]\",\n  link: \":any-link:not(:visited)\",\n  // Forms\n  // https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements\n  disabled: `:is(\n        :is(button, input, select, textarea, optgroup, option)[disabled],\n        optgroup[disabled] > option,\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\n    )`,\n  enabled: \":not(:disabled)\",\n  checked: \":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)\",\n  required: \":is(input, select, textarea)[required]\",\n  optional: \":is(input, select, textarea):not([required])\",\n  // JQuery extensions\n  // https://html.spec.whatwg.org/multipage/form-elements.html#concept-option-selectedness\n  selected: \"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)\",\n  checkbox: \"[type=checkbox]\",\n  file: \"[type=file]\",\n  password: \"[type=password]\",\n  radio: \"[type=radio]\",\n  reset: \"[type=reset]\",\n  image: \"[type=image]\",\n  submit: \"[type=submit]\",\n  parent: \":not(:empty)\",\n  header: \":is(h1, h2, h3, h4, h5, h6)\",\n  button: \":is(button, input[type=button])\",\n  input: \":is(input, textarea, select, button)\",\n  text: \"input:is(:not([type!='']), [type=text])\"\n};\nconst PLACEHOLDER_ELEMENT = {};\nfunction ensureIsTag(next2, adapter) {\n  if (next2 === boolbase.falseFunc)\n    return boolbase.falseFunc;\n  return (elem) => adapter.isTag(elem) && next2(elem);\n}\nfunction getNextSiblings(elem, adapter) {\n  const siblings2 = adapter.getSiblings(elem);\n  if (siblings2.length <= 1)\n    return [];\n  const elemIndex = siblings2.indexOf(elem);\n  if (elemIndex < 0 || elemIndex === siblings2.length - 1)\n    return [];\n  return siblings2.slice(elemIndex + 1).filter(adapter.isTag);\n}\nfunction copyOptions(options) {\n  return {\n    xmlMode: !!options.xmlMode,\n    lowerCaseAttributeNames: !!options.lowerCaseAttributeNames,\n    lowerCaseTags: !!options.lowerCaseTags,\n    quirksMode: !!options.quirksMode,\n    cacheResults: !!options.cacheResults,\n    pseudos: options.pseudos,\n    adapter: options.adapter,\n    equals: options.equals\n  };\n}\nconst is$2 = (next2, token, options, context, compileToken2) => {\n  const func = compileToken2(token, copyOptions(options), context);\n  return func === boolbase.trueFunc ? next2 : func === boolbase.falseFunc ? boolbase.falseFunc : (elem) => func(elem) && next2(elem);\n};\nconst subselects = {\n  is: is$2,\n  /**\n   * `:matches` and `:where` are aliases for `:is`.\n   */\n  matches: is$2,\n  where: is$2,\n  not(next2, token, options, context, compileToken2) {\n    const func = compileToken2(token, copyOptions(options), context);\n    return func === boolbase.falseFunc ? next2 : func === boolbase.trueFunc ? boolbase.falseFunc : (elem) => !func(elem) && next2(elem);\n  },\n  has(next2, subselect, options, _context, compileToken2) {\n    const { adapter } = options;\n    const opts = copyOptions(options);\n    opts.relativeSelector = true;\n    const context = subselect.some((s) => s.some(isTraversal)) ? (\n      // Used as a placeholder. Will be replaced with the actual element.\n      [PLACEHOLDER_ELEMENT]\n    ) : void 0;\n    const compiled = compileToken2(subselect, opts, context);\n    if (compiled === boolbase.falseFunc)\n      return boolbase.falseFunc;\n    const hasElement = ensureIsTag(compiled, adapter);\n    if (context && compiled !== boolbase.trueFunc) {\n      const { shouldTestNextSiblings = false } = compiled;\n      return (elem) => {\n        if (!next2(elem))\n          return false;\n        context[0] = elem;\n        const childs = adapter.getChildren(elem);\n        const nextElements = shouldTestNextSiblings ? [...childs, ...getNextSiblings(elem, adapter)] : childs;\n        return adapter.existsOne(hasElement, nextElements);\n      };\n    }\n    return (elem) => next2(elem) && adapter.existsOne(hasElement, adapter.getChildren(elem));\n  }\n};\nfunction compilePseudoSelector(next2, selector, options, context, compileToken2) {\n  var _a2;\n  const { name, data: data2 } = selector;\n  if (Array.isArray(data2)) {\n    if (!(name in subselects)) {\n      throw new Error(`Unknown pseudo-class :${name}(${data2})`);\n    }\n    return subselects[name](next2, data2, options, context, compileToken2);\n  }\n  const userPseudo = (_a2 = options.pseudos) === null || _a2 === void 0 ? void 0 : _a2[name];\n  const stringPseudo = typeof userPseudo === \"string\" ? userPseudo : aliases[name];\n  if (typeof stringPseudo === \"string\") {\n    if (data2 != null) {\n      throw new Error(`Pseudo ${name} doesn't have any arguments`);\n    }\n    const alias = parse$2(stringPseudo);\n    return subselects[\"is\"](next2, alias, options, context, compileToken2);\n  }\n  if (typeof userPseudo === \"function\") {\n    verifyPseudoArgs(userPseudo, name, data2, 1);\n    return (elem) => userPseudo(elem, data2) && next2(elem);\n  }\n  if (name in filters) {\n    return filters[name](next2, data2, options, context);\n  }\n  if (name in pseudos) {\n    const pseudo = pseudos[name];\n    verifyPseudoArgs(pseudo, name, data2, 2);\n    return (elem) => pseudo(elem, options, data2) && next2(elem);\n  }\n  throw new Error(`Unknown pseudo-class :${name}`);\n}\nfunction getElementParent(node, adapter) {\n  const parent2 = adapter.getParent(node);\n  if (parent2 && adapter.isTag(parent2)) {\n    return parent2;\n  }\n  return null;\n}\nfunction compileGeneralSelector(next2, selector, options, context, compileToken2) {\n  const { adapter, equals } = options;\n  switch (selector.type) {\n    case SelectorType.PseudoElement: {\n      throw new Error(\"Pseudo-elements are not supported by css-select\");\n    }\n    case SelectorType.ColumnCombinator: {\n      throw new Error(\"Column combinators are not yet supported by css-select\");\n    }\n    case SelectorType.Attribute: {\n      if (selector.namespace != null) {\n        throw new Error(\"Namespaced attributes are not yet supported by css-select\");\n      }\n      if (!options.xmlMode || options.lowerCaseAttributeNames) {\n        selector.name = selector.name.toLowerCase();\n      }\n      return attributeRules[selector.action](next2, selector, options);\n    }\n    case SelectorType.Pseudo: {\n      return compilePseudoSelector(next2, selector, options, context, compileToken2);\n    }\n    // Tags\n    case SelectorType.Tag: {\n      if (selector.namespace != null) {\n        throw new Error(\"Namespaced tag names are not yet supported by css-select\");\n      }\n      let { name } = selector;\n      if (!options.xmlMode || options.lowerCaseTags) {\n        name = name.toLowerCase();\n      }\n      return function tag(elem) {\n        return adapter.getName(elem) === name && next2(elem);\n      };\n    }\n    // Traversal\n    case SelectorType.Descendant: {\n      if (options.cacheResults === false || typeof WeakSet === \"undefined\") {\n        return function descendant(elem) {\n          let current = elem;\n          while (current = getElementParent(current, adapter)) {\n            if (next2(current)) {\n              return true;\n            }\n          }\n          return false;\n        };\n      }\n      const isFalseCache = /* @__PURE__ */ new WeakSet();\n      return function cachedDescendant(elem) {\n        let current = elem;\n        while (current = getElementParent(current, adapter)) {\n          if (!isFalseCache.has(current)) {\n            if (adapter.isTag(current) && next2(current)) {\n              return true;\n            }\n            isFalseCache.add(current);\n          }\n        }\n        return false;\n      };\n    }\n    case \"_flexibleDescendant\": {\n      return function flexibleDescendant(elem) {\n        let current = elem;\n        do {\n          if (next2(current))\n            return true;\n        } while (current = getElementParent(current, adapter));\n        return false;\n      };\n    }\n    case SelectorType.Parent: {\n      return function parent2(elem) {\n        return adapter.getChildren(elem).some((elem2) => adapter.isTag(elem2) && next2(elem2));\n      };\n    }\n    case SelectorType.Child: {\n      return function child(elem) {\n        const parent2 = adapter.getParent(elem);\n        return parent2 != null && adapter.isTag(parent2) && next2(parent2);\n      };\n    }\n    case SelectorType.Sibling: {\n      return function sibling(elem) {\n        const siblings2 = adapter.getSiblings(elem);\n        for (let i = 0; i < siblings2.length; i++) {\n          const currentSibling = siblings2[i];\n          if (equals(elem, currentSibling))\n            break;\n          if (adapter.isTag(currentSibling) && next2(currentSibling)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case SelectorType.Adjacent: {\n      if (adapter.prevElementSibling) {\n        return function adjacent(elem) {\n          const previous = adapter.prevElementSibling(elem);\n          return previous != null && next2(previous);\n        };\n      }\n      return function adjacent(elem) {\n        const siblings2 = adapter.getSiblings(elem);\n        let lastElement;\n        for (let i = 0; i < siblings2.length; i++) {\n          const currentSibling = siblings2[i];\n          if (equals(elem, currentSibling))\n            break;\n          if (adapter.isTag(currentSibling)) {\n            lastElement = currentSibling;\n          }\n        }\n        return !!lastElement && next2(lastElement);\n      };\n    }\n    case SelectorType.Universal: {\n      if (selector.namespace != null && selector.namespace !== \"*\") {\n        throw new Error(\"Namespaced universal selectors are not yet supported by css-select\");\n      }\n      return next2;\n    }\n  }\n}\nfunction includesScopePseudo(t) {\n  return t.type === SelectorType.Pseudo && (t.name === \"scope\" || Array.isArray(t.data) && t.data.some((data2) => data2.some(includesScopePseudo)));\n}\nconst DESCENDANT_TOKEN = { type: SelectorType.Descendant };\nconst FLEXIBLE_DESCENDANT_TOKEN = {\n  type: \"_flexibleDescendant\"\n};\nconst SCOPE_TOKEN = {\n  type: SelectorType.Pseudo,\n  name: \"scope\",\n  data: null\n};\nfunction absolutize(token, { adapter }, context) {\n  const hasContext = !!(context === null || context === void 0 ? void 0 : context.every((e) => {\n    const parent2 = adapter.isTag(e) && adapter.getParent(e);\n    return e === PLACEHOLDER_ELEMENT || parent2 && adapter.isTag(parent2);\n  }));\n  for (const t of token) {\n    if (t.length > 0 && isTraversal(t[0]) && t[0].type !== SelectorType.Descendant) ;\n    else if (hasContext && !t.some(includesScopePseudo)) {\n      t.unshift(DESCENDANT_TOKEN);\n    } else {\n      continue;\n    }\n    t.unshift(SCOPE_TOKEN);\n  }\n}\nfunction compileToken(token, options, context) {\n  var _a2;\n  token.forEach(sortByProcedure);\n  context = (_a2 = options.context) !== null && _a2 !== void 0 ? _a2 : context;\n  const isArrayContext = Array.isArray(context);\n  const finalContext = context && (Array.isArray(context) ? context : [context]);\n  if (options.relativeSelector !== false) {\n    absolutize(token, options, finalContext);\n  } else if (token.some((t) => t.length > 0 && isTraversal(t[0]))) {\n    throw new Error(\"Relative selectors are not allowed when the `relativeSelector` option is disabled\");\n  }\n  let shouldTestNextSiblings = false;\n  const query = token.map((rules) => {\n    if (rules.length >= 2) {\n      const [first2, second] = rules;\n      if (first2.type !== SelectorType.Pseudo || first2.name !== \"scope\") ;\n      else if (isArrayContext && second.type === SelectorType.Descendant) {\n        rules[1] = FLEXIBLE_DESCENDANT_TOKEN;\n      } else if (second.type === SelectorType.Adjacent || second.type === SelectorType.Sibling) {\n        shouldTestNextSiblings = true;\n      }\n    }\n    return compileRules(rules, options, finalContext);\n  }).reduce(reduceRules, boolbase.falseFunc);\n  query.shouldTestNextSiblings = shouldTestNextSiblings;\n  return query;\n}\nfunction compileRules(rules, options, context) {\n  var _a2;\n  return rules.reduce((previous, rule) => previous === boolbase.falseFunc ? boolbase.falseFunc : compileGeneralSelector(previous, rule, options, context, compileToken), (_a2 = options.rootFunc) !== null && _a2 !== void 0 ? _a2 : boolbase.trueFunc);\n}\nfunction reduceRules(a, b) {\n  if (b === boolbase.falseFunc || a === boolbase.trueFunc) {\n    return a;\n  }\n  if (a === boolbase.falseFunc || b === boolbase.trueFunc) {\n    return b;\n  }\n  return function combine(elem) {\n    return a(elem) || b(elem);\n  };\n}\nconst defaultEquals = (a, b) => a === b;\nconst defaultOptions$1 = {\n  adapter: DomUtils,\n  equals: defaultEquals\n};\nfunction convertOptionFormats(options) {\n  var _a2, _b, _c, _d;\n  const opts = options !== null && options !== void 0 ? options : defaultOptions$1;\n  (_a2 = opts.adapter) !== null && _a2 !== void 0 ? _a2 : opts.adapter = DomUtils;\n  (_b = opts.equals) !== null && _b !== void 0 ? _b : opts.equals = (_d = (_c = opts.adapter) === null || _c === void 0 ? void 0 : _c.equals) !== null && _d !== void 0 ? _d : defaultEquals;\n  return opts;\n}\nfunction wrapCompile(func) {\n  return function addAdapter(selector, options, context) {\n    const opts = convertOptionFormats(options);\n    return func(selector, opts, context);\n  };\n}\nconst _compileToken = wrapCompile(compileToken);\nfunction prepareContext(elems, adapter, shouldTestNextSiblings = false) {\n  if (shouldTestNextSiblings) {\n    elems = appendNextSiblings(elems, adapter);\n  }\n  return Array.isArray(elems) ? adapter.removeSubsets(elems) : adapter.getChildren(elems);\n}\nfunction appendNextSiblings(elem, adapter) {\n  const elems = Array.isArray(elem) ? elem.slice(0) : [elem];\n  const elemsLength = elems.length;\n  for (let i = 0; i < elemsLength; i++) {\n    const nextSiblings = getNextSiblings(elems[i], adapter);\n    elems.push(...nextSiblings);\n  }\n  return elems;\n}\nconst filterNames = /* @__PURE__ */ new Set([\n  \"first\",\n  \"last\",\n  \"eq\",\n  \"gt\",\n  \"nth\",\n  \"lt\",\n  \"even\",\n  \"odd\"\n]);\nfunction isFilter(s) {\n  if (s.type !== \"pseudo\")\n    return false;\n  if (filterNames.has(s.name))\n    return true;\n  if (s.name === \"not\" && Array.isArray(s.data)) {\n    return s.data.some((s2) => s2.some(isFilter));\n  }\n  return false;\n}\nfunction getLimit(filter2, data2, partLimit) {\n  const num = data2 != null ? parseInt(data2, 10) : NaN;\n  switch (filter2) {\n    case \"first\":\n      return 1;\n    case \"nth\":\n    case \"eq\":\n      return isFinite(num) ? num >= 0 ? num + 1 : Infinity : 0;\n    case \"lt\":\n      return isFinite(num) ? num >= 0 ? Math.min(num, partLimit) : Infinity : 0;\n    case \"gt\":\n      return isFinite(num) ? Infinity : 0;\n    case \"odd\":\n      return 2 * partLimit;\n    case \"even\":\n      return 2 * partLimit - 1;\n    case \"last\":\n    case \"not\":\n      return Infinity;\n  }\n}\nfunction getDocumentRoot(node) {\n  while (node.parent)\n    node = node.parent;\n  return node;\n}\nfunction groupSelectors(selectors) {\n  const filteredSelectors = [];\n  const plainSelectors = [];\n  for (const selector of selectors) {\n    if (selector.some(isFilter)) {\n      filteredSelectors.push(selector);\n    } else {\n      plainSelectors.push(selector);\n    }\n  }\n  return [plainSelectors, filteredSelectors];\n}\nconst UNIVERSAL_SELECTOR = {\n  type: SelectorType.Universal,\n  namespace: null\n};\nconst SCOPE_PSEUDO = {\n  type: SelectorType.Pseudo,\n  name: \"scope\",\n  data: null\n};\nfunction is$1(element, selector, options = {}) {\n  return some([element], selector, options);\n}\nfunction some(elements, selector, options = {}) {\n  if (typeof selector === \"function\")\n    return elements.some(selector);\n  const [plain, filtered] = groupSelectors(parse$2(selector));\n  return plain.length > 0 && elements.some(_compileToken(plain, options)) || filtered.some((sel) => filterBySelector(sel, elements, options).length > 0);\n}\nfunction filterByPosition(filter2, elems, data2, options) {\n  const num = typeof data2 === \"string\" ? parseInt(data2, 10) : NaN;\n  switch (filter2) {\n    case \"first\":\n    case \"lt\":\n      return elems;\n    case \"last\":\n      return elems.length > 0 ? [elems[elems.length - 1]] : elems;\n    case \"nth\":\n    case \"eq\":\n      return isFinite(num) && Math.abs(num) < elems.length ? [num < 0 ? elems[elems.length + num] : elems[num]] : [];\n    case \"gt\":\n      return isFinite(num) ? elems.slice(num + 1) : [];\n    case \"even\":\n      return elems.filter((_, i) => i % 2 === 0);\n    case \"odd\":\n      return elems.filter((_, i) => i % 2 === 1);\n    case \"not\": {\n      const filtered = new Set(filterParsed(data2, elems, options));\n      return elems.filter((e) => !filtered.has(e));\n    }\n  }\n}\nfunction filter$1(selector, elements, options = {}) {\n  return filterParsed(parse$2(selector), elements, options);\n}\nfunction filterParsed(selector, elements, options) {\n  if (elements.length === 0)\n    return [];\n  const [plainSelectors, filteredSelectors] = groupSelectors(selector);\n  let found;\n  if (plainSelectors.length) {\n    const filtered = filterElements(elements, plainSelectors, options);\n    if (filteredSelectors.length === 0) {\n      return filtered;\n    }\n    if (filtered.length) {\n      found = new Set(filtered);\n    }\n  }\n  for (let i = 0; i < filteredSelectors.length && (found === null || found === void 0 ? void 0 : found.size) !== elements.length; i++) {\n    const filteredSelector = filteredSelectors[i];\n    const missing = found ? elements.filter((e) => isTag(e) && !found.has(e)) : elements;\n    if (missing.length === 0)\n      break;\n    const filtered = filterBySelector(filteredSelector, elements, options);\n    if (filtered.length) {\n      if (!found) {\n        if (i === filteredSelectors.length - 1) {\n          return filtered;\n        }\n        found = new Set(filtered);\n      } else {\n        filtered.forEach((el) => found.add(el));\n      }\n    }\n  }\n  return typeof found !== \"undefined\" ? found.size === elements.length ? elements : (\n    // Filter elements to preserve order\n    elements.filter((el) => found.has(el))\n  ) : [];\n}\nfunction filterBySelector(selector, elements, options) {\n  var _a2;\n  if (selector.some(isTraversal$1)) {\n    const root2 = (_a2 = options.root) !== null && _a2 !== void 0 ? _a2 : getDocumentRoot(elements[0]);\n    const opts = { ...options, context: elements, relativeSelector: false };\n    selector.push(SCOPE_PSEUDO);\n    return findFilterElements(root2, selector, opts, true, elements.length);\n  }\n  return findFilterElements(elements, selector, options, false, elements.length);\n}\nfunction select(selector, root2, options = {}, limit = Infinity) {\n  if (typeof selector === \"function\") {\n    return find$1(root2, selector);\n  }\n  const [plain, filtered] = groupSelectors(parse$2(selector));\n  const results = filtered.map((sel) => findFilterElements(root2, sel, options, true, limit));\n  if (plain.length) {\n    results.push(findElements(root2, plain, options, limit));\n  }\n  if (results.length === 0) {\n    return [];\n  }\n  if (results.length === 1) {\n    return results[0];\n  }\n  return uniqueSort(results.reduce((a, b) => [...a, ...b]));\n}\nfunction findFilterElements(root2, selector, options, queryForSelector, totalLimit) {\n  const filterIndex = selector.findIndex(isFilter);\n  const sub = selector.slice(0, filterIndex);\n  const filter2 = selector[filterIndex];\n  const partLimit = selector.length - 1 === filterIndex ? totalLimit : Infinity;\n  const limit = getLimit(filter2.name, filter2.data, partLimit);\n  if (limit === 0)\n    return [];\n  const elemsNoLimit = sub.length === 0 && !Array.isArray(root2) ? getChildren(root2).filter(isTag) : sub.length === 0 ? (Array.isArray(root2) ? root2 : [root2]).filter(isTag) : queryForSelector || sub.some(isTraversal$1) ? findElements(root2, [sub], options, limit) : filterElements(root2, [sub], options);\n  const elems = elemsNoLimit.slice(0, limit);\n  let result = filterByPosition(filter2.name, elems, filter2.data, options);\n  if (result.length === 0 || selector.length === filterIndex + 1) {\n    return result;\n  }\n  const remainingSelector = selector.slice(filterIndex + 1);\n  const remainingHasTraversal = remainingSelector.some(isTraversal$1);\n  if (remainingHasTraversal) {\n    if (isTraversal$1(remainingSelector[0])) {\n      const { type } = remainingSelector[0];\n      if (type === SelectorType.Sibling || type === SelectorType.Adjacent) {\n        result = prepareContext(result, DomUtils, true);\n      }\n      remainingSelector.unshift(UNIVERSAL_SELECTOR);\n    }\n    options = {\n      ...options,\n      // Avoid absolutizing the selector\n      relativeSelector: false,\n      /*\n       * Add a custom root func, to make sure traversals don't match elements\n       * that aren't a part of the considered tree.\n       */\n      rootFunc: (el) => result.includes(el)\n    };\n  } else if (options.rootFunc && options.rootFunc !== boolbaseExports.trueFunc) {\n    options = { ...options, rootFunc: boolbaseExports.trueFunc };\n  }\n  return remainingSelector.some(isFilter) ? findFilterElements(result, remainingSelector, options, false, totalLimit) : remainingHasTraversal ? (\n    // Query existing elements to resolve traversal.\n    findElements(result, [remainingSelector], options, totalLimit)\n  ) : (\n    // If we don't have any more traversals, simply filter elements.\n    filterElements(result, [remainingSelector], options)\n  );\n}\nfunction findElements(root2, sel, options, limit) {\n  const query = _compileToken(sel, options, root2);\n  return find$1(root2, query, limit);\n}\nfunction find$1(root2, query, limit = Infinity) {\n  const elems = prepareContext(root2, DomUtils, query.shouldTestNextSiblings);\n  return find$2((node) => isTag(node) && query(node), elems, true, limit);\n}\nfunction filterElements(elements, sel, options) {\n  const els = (Array.isArray(elements) ? elements : [elements]).filter(isTag);\n  if (els.length === 0)\n    return els;\n  const query = _compileToken(sel, options);\n  return query === boolbaseExports.trueFunc ? els : els.filter(query);\n}\nconst reSiblingSelector = /^\\s*[+~]/;\nfunction find(selectorOrHaystack) {\n  if (!selectorOrHaystack) {\n    return this._make([]);\n  }\n  if (typeof selectorOrHaystack !== \"string\") {\n    const haystack = isCheerio(selectorOrHaystack) ? selectorOrHaystack.toArray() : [selectorOrHaystack];\n    const context = this.toArray();\n    return this._make(haystack.filter((elem) => context.some((node) => contains(node, elem))));\n  }\n  return this._findBySelector(selectorOrHaystack, Number.POSITIVE_INFINITY);\n}\nfunction _findBySelector(selector, limit) {\n  var _a2;\n  const context = this.toArray();\n  const elems = reSiblingSelector.test(selector) ? context : this.children().toArray();\n  const options = {\n    context,\n    root: (_a2 = this._root) === null || _a2 === void 0 ? void 0 : _a2[0],\n    // Pass options that are recognized by `cheerio-select`\n    xmlMode: this.options.xmlMode,\n    lowerCaseTags: this.options.lowerCaseTags,\n    lowerCaseAttributeNames: this.options.lowerCaseAttributeNames,\n    pseudos: this.options.pseudos,\n    quirksMode: this.options.quirksMode\n  };\n  return this._make(select(selector, elems, options, limit));\n}\nfunction _getMatcher(matchMap) {\n  return function(fn, ...postFns) {\n    return function(selector) {\n      var _a2;\n      let matched = matchMap(fn, this);\n      if (selector) {\n        matched = filterArray(matched, selector, this.options.xmlMode, (_a2 = this._root) === null || _a2 === void 0 ? void 0 : _a2[0]);\n      }\n      return this._make(\n        // Post processing is only necessary if there is more than one element.\n        this.length > 1 && matched.length > 1 ? postFns.reduce((elems, fn2) => fn2(elems), matched) : matched\n      );\n    };\n  };\n}\nconst _matcher = _getMatcher((fn, elems) => {\n  let ret = [];\n  for (let i = 0; i < elems.length; i++) {\n    const value = fn(elems[i]);\n    if (value.length > 0)\n      ret = ret.concat(value);\n  }\n  return ret;\n});\nconst _singleMatcher = _getMatcher((fn, elems) => {\n  const ret = [];\n  for (let i = 0; i < elems.length; i++) {\n    const value = fn(elems[i]);\n    if (value !== null) {\n      ret.push(value);\n    }\n  }\n  return ret;\n});\nfunction _matchUntil(nextElem, ...postFns) {\n  let matches = null;\n  const innerMatcher = _getMatcher((nextElem2, elems) => {\n    const matched = [];\n    domEach(elems, (elem) => {\n      for (let next2; next2 = nextElem2(elem); elem = next2) {\n        if (matches === null || matches === void 0 ? void 0 : matches(next2, matched.length))\n          break;\n        matched.push(next2);\n      }\n    });\n    return matched;\n  })(nextElem, ...postFns);\n  return function(selector, filterSelector) {\n    matches = typeof selector === \"string\" ? (elem) => is$1(elem, selector, this.options) : selector ? getFilterFn(selector) : null;\n    const ret = innerMatcher.call(this, filterSelector);\n    matches = null;\n    return ret;\n  };\n}\nfunction _removeDuplicates(elems) {\n  return elems.length > 1 ? Array.from(new Set(elems)) : elems;\n}\nconst parent = _singleMatcher(({ parent: parent2 }) => parent2 && !isDocument(parent2) ? parent2 : null, _removeDuplicates);\nconst parents = _matcher((elem) => {\n  const matched = [];\n  while (elem.parent && !isDocument(elem.parent)) {\n    matched.push(elem.parent);\n    elem = elem.parent;\n  }\n  return matched;\n}, uniqueSort, (elems) => elems.reverse());\nconst parentsUntil = _matchUntil(({ parent: parent2 }) => parent2 && !isDocument(parent2) ? parent2 : null, uniqueSort, (elems) => elems.reverse());\nfunction closest(selector) {\n  var _a2;\n  const set = [];\n  if (!selector) {\n    return this._make(set);\n  }\n  const selectOpts = {\n    xmlMode: this.options.xmlMode,\n    root: (_a2 = this._root) === null || _a2 === void 0 ? void 0 : _a2[0]\n  };\n  const selectFn = typeof selector === \"string\" ? (elem) => is$1(elem, selector, selectOpts) : getFilterFn(selector);\n  domEach(this, (elem) => {\n    if (elem && !isDocument(elem) && !isTag(elem)) {\n      elem = elem.parent;\n    }\n    while (elem && isTag(elem)) {\n      if (selectFn(elem, 0)) {\n        if (!set.includes(elem)) {\n          set.push(elem);\n        }\n        break;\n      }\n      elem = elem.parent;\n    }\n  });\n  return this._make(set);\n}\nconst next = _singleMatcher((elem) => nextElementSibling(elem));\nconst nextAll = _matcher((elem) => {\n  const matched = [];\n  while (elem.next) {\n    elem = elem.next;\n    if (isTag(elem))\n      matched.push(elem);\n  }\n  return matched;\n}, _removeDuplicates);\nconst nextUntil = _matchUntil((el) => nextElementSibling(el), _removeDuplicates);\nconst prev = _singleMatcher((elem) => prevElementSibling(elem));\nconst prevAll = _matcher((elem) => {\n  const matched = [];\n  while (elem.prev) {\n    elem = elem.prev;\n    if (isTag(elem))\n      matched.push(elem);\n  }\n  return matched;\n}, _removeDuplicates);\nconst prevUntil = _matchUntil((el) => prevElementSibling(el), _removeDuplicates);\nconst siblings = _matcher((elem) => getSiblings(elem).filter((el) => isTag(el) && el !== elem), uniqueSort);\nconst children = _matcher((elem) => getChildren(elem).filter(isTag), _removeDuplicates);\nfunction contents() {\n  const elems = this.toArray().reduce((newElems, elem) => hasChildren(elem) ? newElems.concat(elem.children) : newElems, []);\n  return this._make(elems);\n}\nfunction each(fn) {\n  let i = 0;\n  const len = this.length;\n  while (i < len && fn.call(this[i], i, this[i]) !== false)\n    ++i;\n  return this;\n}\nfunction map(fn) {\n  let elems = [];\n  for (let i = 0; i < this.length; i++) {\n    const el = this[i];\n    const val2 = fn.call(el, i, el);\n    if (val2 != null) {\n      elems = elems.concat(val2);\n    }\n  }\n  return this._make(elems);\n}\nfunction getFilterFn(match) {\n  if (typeof match === \"function\") {\n    return (el, i) => match.call(el, i, el);\n  }\n  if (isCheerio(match)) {\n    return (el) => Array.prototype.includes.call(match, el);\n  }\n  return function(el) {\n    return match === el;\n  };\n}\nfunction filter(match) {\n  var _a2;\n  return this._make(filterArray(this.toArray(), match, this.options.xmlMode, (_a2 = this._root) === null || _a2 === void 0 ? void 0 : _a2[0]));\n}\nfunction filterArray(nodes, match, xmlMode, root2) {\n  return typeof match === \"string\" ? filter$1(match, nodes, { xmlMode, root: root2 }) : nodes.filter(getFilterFn(match));\n}\nfunction is(selector) {\n  const nodes = this.toArray();\n  return typeof selector === \"string\" ? some(nodes.filter(isTag), selector, this.options) : selector ? nodes.some(getFilterFn(selector)) : false;\n}\nfunction not(match) {\n  let nodes = this.toArray();\n  if (typeof match === \"string\") {\n    const matches = new Set(filter$1(match, nodes, this.options));\n    nodes = nodes.filter((el) => !matches.has(el));\n  } else {\n    const filterFn = getFilterFn(match);\n    nodes = nodes.filter((el, i) => !filterFn(el, i));\n  }\n  return this._make(nodes);\n}\nfunction has(selectorOrHaystack) {\n  return this.filter(typeof selectorOrHaystack === \"string\" ? (\n    // Using the `:has` selector here short-circuits searches.\n    `:has(${selectorOrHaystack})`\n  ) : (_, el) => this._make(el).find(selectorOrHaystack).length > 0);\n}\nfunction first() {\n  return this.length > 1 ? this._make(this[0]) : this;\n}\nfunction last() {\n  return this.length > 0 ? this._make(this[this.length - 1]) : this;\n}\nfunction eq(i) {\n  var _a2;\n  i = +i;\n  if (i === 0 && this.length <= 1)\n    return this;\n  if (i < 0)\n    i = this.length + i;\n  return this._make((_a2 = this[i]) !== null && _a2 !== void 0 ? _a2 : []);\n}\nfunction get(i) {\n  if (i == null) {\n    return this.toArray();\n  }\n  return this[i < 0 ? this.length + i : i];\n}\nfunction toArray() {\n  return Array.prototype.slice.call(this);\n}\nfunction index(selectorOrNeedle) {\n  let $haystack;\n  let needle;\n  if (selectorOrNeedle == null) {\n    $haystack = this.parent().children();\n    needle = this[0];\n  } else if (typeof selectorOrNeedle === \"string\") {\n    $haystack = this._make(selectorOrNeedle);\n    needle = this[0];\n  } else {\n    $haystack = this;\n    needle = isCheerio(selectorOrNeedle) ? selectorOrNeedle[0] : selectorOrNeedle;\n  }\n  return Array.prototype.indexOf.call($haystack, needle);\n}\nfunction slice(start, end2) {\n  return this._make(Array.prototype.slice.call(this, start, end2));\n}\nfunction end() {\n  var _a2;\n  return (_a2 = this.prevObject) !== null && _a2 !== void 0 ? _a2 : this._make([]);\n}\nfunction add(other, context) {\n  const selection = this._make(other, context);\n  const contents2 = uniqueSort([...this.get(), ...selection.get()]);\n  return this._make(contents2);\n}\nfunction addBack(selector) {\n  return this.prevObject ? this.add(selector ? this.prevObject.filter(selector) : this.prevObject) : this;\n}\nconst Traversing = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  _findBySelector,\n  add,\n  addBack,\n  children,\n  closest,\n  contents,\n  each,\n  end,\n  eq,\n  filter,\n  filterArray,\n  find,\n  first,\n  get,\n  has,\n  index,\n  is,\n  last,\n  map,\n  next,\n  nextAll,\n  nextUntil,\n  not,\n  parent,\n  parents,\n  parentsUntil,\n  prev,\n  prevAll,\n  prevUntil,\n  siblings,\n  slice,\n  toArray\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction getParse(parser) {\n  return function parse2(content, options, isDocument$1, context) {\n    if (typeof Buffer !== \"undefined\" && Buffer.isBuffer(content)) {\n      content = content.toString();\n    }\n    if (typeof content === \"string\") {\n      return parser(content, options, isDocument$1, context);\n    }\n    const doc = content;\n    if (!Array.isArray(doc) && isDocument(doc)) {\n      return doc;\n    }\n    const root2 = new Document([]);\n    update(doc, root2);\n    return root2;\n  };\n}\nfunction update(newChilds, parent2) {\n  const arr = Array.isArray(newChilds) ? newChilds : [newChilds];\n  if (parent2) {\n    parent2.children = arr;\n  } else {\n    parent2 = null;\n  }\n  for (let i = 0; i < arr.length; i++) {\n    const node = arr[i];\n    if (node.parent && node.parent.children !== arr) {\n      removeElement(node);\n    }\n    if (parent2) {\n      node.prev = arr[i - 1] || null;\n      node.next = arr[i + 1] || null;\n    } else {\n      node.prev = node.next = null;\n    }\n    node.parent = parent2;\n  }\n  return parent2;\n}\nfunction _makeDomArray(elem, clone2) {\n  if (elem == null) {\n    return [];\n  }\n  if (typeof elem === \"string\") {\n    return this._parse(elem, this.options, false, null).children.slice(0);\n  }\n  if (\"length\" in elem) {\n    if (elem.length === 1) {\n      return this._makeDomArray(elem[0], clone2);\n    }\n    const result = [];\n    for (let i = 0; i < elem.length; i++) {\n      const el = elem[i];\n      if (typeof el === \"object\") {\n        if (el == null) {\n          continue;\n        }\n        if (!(\"length\" in el)) {\n          result.push(clone2 ? cloneNode(el, true) : el);\n          continue;\n        }\n      }\n      result.push(...this._makeDomArray(el, clone2));\n    }\n    return result;\n  }\n  return [clone2 ? cloneNode(elem, true) : elem];\n}\nfunction _insert(concatenator) {\n  return function(...elems) {\n    const lastIdx = this.length - 1;\n    return domEach(this, (el, i) => {\n      if (!hasChildren(el))\n        return;\n      const domSrc = typeof elems[0] === \"function\" ? elems[0].call(el, i, this._render(el.children)) : elems;\n      const dom = this._makeDomArray(domSrc, i < lastIdx);\n      concatenator(dom, el.children, el);\n    });\n  };\n}\nfunction uniqueSplice(array, spliceIdx, spliceCount, newElems, parent2) {\n  var _a2, _b;\n  const spliceArgs = [\n    spliceIdx,\n    spliceCount,\n    ...newElems\n  ];\n  const prev2 = spliceIdx === 0 ? null : array[spliceIdx - 1];\n  const next2 = spliceIdx + spliceCount >= array.length ? null : array[spliceIdx + spliceCount];\n  for (let idx = 0; idx < newElems.length; ++idx) {\n    const node = newElems[idx];\n    const oldParent = node.parent;\n    if (oldParent) {\n      const oldSiblings = oldParent.children;\n      const prevIdx = oldSiblings.indexOf(node);\n      if (prevIdx > -1) {\n        oldParent.children.splice(prevIdx, 1);\n        if (parent2 === oldParent && spliceIdx > prevIdx) {\n          spliceArgs[0]--;\n        }\n      }\n    }\n    node.parent = parent2;\n    if (node.prev) {\n      node.prev.next = (_a2 = node.next) !== null && _a2 !== void 0 ? _a2 : null;\n    }\n    if (node.next) {\n      node.next.prev = (_b = node.prev) !== null && _b !== void 0 ? _b : null;\n    }\n    node.prev = idx === 0 ? prev2 : newElems[idx - 1];\n    node.next = idx === newElems.length - 1 ? next2 : newElems[idx + 1];\n  }\n  if (prev2) {\n    prev2.next = newElems[0];\n  }\n  if (next2) {\n    next2.prev = newElems[newElems.length - 1];\n  }\n  return array.splice(...spliceArgs);\n}\nfunction appendTo(target) {\n  const appendTarget = isCheerio(target) ? target : this._make(target);\n  appendTarget.append(this);\n  return this;\n}\nfunction prependTo(target) {\n  const prependTarget = isCheerio(target) ? target : this._make(target);\n  prependTarget.prepend(this);\n  return this;\n}\nconst append = _insert((dom, children2, parent2) => {\n  uniqueSplice(children2, children2.length, 0, dom, parent2);\n});\nconst prepend = _insert((dom, children2, parent2) => {\n  uniqueSplice(children2, 0, 0, dom, parent2);\n});\nfunction _wrap(insert) {\n  return function(wrapper) {\n    const lastIdx = this.length - 1;\n    const lastParent = this.parents().last();\n    for (let i = 0; i < this.length; i++) {\n      const el = this[i];\n      const wrap2 = typeof wrapper === \"function\" ? wrapper.call(el, i, el) : typeof wrapper === \"string\" && !isHtml(wrapper) ? lastParent.find(wrapper).clone() : wrapper;\n      const [wrapperDom] = this._makeDomArray(wrap2, i < lastIdx);\n      if (!wrapperDom || !hasChildren(wrapperDom))\n        continue;\n      let elInsertLocation = wrapperDom;\n      let j = 0;\n      while (j < elInsertLocation.children.length) {\n        const child = elInsertLocation.children[j];\n        if (isTag(child)) {\n          elInsertLocation = child;\n          j = 0;\n        } else {\n          j++;\n        }\n      }\n      insert(el, elInsertLocation, [wrapperDom]);\n    }\n    return this;\n  };\n}\nconst wrap = _wrap((el, elInsertLocation, wrapperDom) => {\n  const { parent: parent2 } = el;\n  if (!parent2)\n    return;\n  const siblings2 = parent2.children;\n  const index2 = siblings2.indexOf(el);\n  update([el], elInsertLocation);\n  uniqueSplice(siblings2, index2, 0, wrapperDom, parent2);\n});\nconst wrapInner = _wrap((el, elInsertLocation, wrapperDom) => {\n  if (!hasChildren(el))\n    return;\n  update(el.children, elInsertLocation);\n  update(wrapperDom, el);\n});\nfunction unwrap(selector) {\n  this.parent(selector).not(\"body\").each((_, el) => {\n    this._make(el).replaceWith(el.children);\n  });\n  return this;\n}\nfunction wrapAll(wrapper) {\n  const el = this[0];\n  if (el) {\n    const wrap2 = this._make(typeof wrapper === \"function\" ? wrapper.call(el, 0, el) : wrapper).insertBefore(el);\n    let elInsertLocation;\n    for (let i = 0; i < wrap2.length; i++) {\n      if (wrap2[i].type === \"tag\")\n        elInsertLocation = wrap2[i];\n    }\n    let j = 0;\n    while (elInsertLocation && j < elInsertLocation.children.length) {\n      const child = elInsertLocation.children[j];\n      if (child.type === \"tag\") {\n        elInsertLocation = child;\n        j = 0;\n      } else {\n        j++;\n      }\n    }\n    if (elInsertLocation)\n      this._make(elInsertLocation).append(this);\n  }\n  return this;\n}\nfunction after(...elems) {\n  const lastIdx = this.length - 1;\n  return domEach(this, (el, i) => {\n    if (!hasChildren(el) || !el.parent) {\n      return;\n    }\n    const siblings2 = el.parent.children;\n    const index2 = siblings2.indexOf(el);\n    if (index2 < 0)\n      return;\n    const domSrc = typeof elems[0] === \"function\" ? elems[0].call(el, i, this._render(el.children)) : elems;\n    const dom = this._makeDomArray(domSrc, i < lastIdx);\n    uniqueSplice(siblings2, index2 + 1, 0, dom, el.parent);\n  });\n}\nfunction insertAfter(target) {\n  if (typeof target === \"string\") {\n    target = this._make(target);\n  }\n  this.remove();\n  const clones = [];\n  for (const el of this._makeDomArray(target)) {\n    const clonedSelf = this.clone().toArray();\n    const { parent: parent2 } = el;\n    if (!parent2) {\n      continue;\n    }\n    const siblings2 = parent2.children;\n    const index2 = siblings2.indexOf(el);\n    if (index2 < 0)\n      continue;\n    uniqueSplice(siblings2, index2 + 1, 0, clonedSelf, parent2);\n    clones.push(...clonedSelf);\n  }\n  return this._make(clones);\n}\nfunction before(...elems) {\n  const lastIdx = this.length - 1;\n  return domEach(this, (el, i) => {\n    if (!hasChildren(el) || !el.parent) {\n      return;\n    }\n    const siblings2 = el.parent.children;\n    const index2 = siblings2.indexOf(el);\n    if (index2 < 0)\n      return;\n    const domSrc = typeof elems[0] === \"function\" ? elems[0].call(el, i, this._render(el.children)) : elems;\n    const dom = this._makeDomArray(domSrc, i < lastIdx);\n    uniqueSplice(siblings2, index2, 0, dom, el.parent);\n  });\n}\nfunction insertBefore(target) {\n  const targetArr = this._make(target);\n  this.remove();\n  const clones = [];\n  domEach(targetArr, (el) => {\n    const clonedSelf = this.clone().toArray();\n    const { parent: parent2 } = el;\n    if (!parent2) {\n      return;\n    }\n    const siblings2 = parent2.children;\n    const index2 = siblings2.indexOf(el);\n    if (index2 < 0)\n      return;\n    uniqueSplice(siblings2, index2, 0, clonedSelf, parent2);\n    clones.push(...clonedSelf);\n  });\n  return this._make(clones);\n}\nfunction remove(selector) {\n  const elems = selector ? this.filter(selector) : this;\n  domEach(elems, (el) => {\n    removeElement(el);\n    el.prev = el.next = el.parent = null;\n  });\n  return this;\n}\nfunction replaceWith(content) {\n  return domEach(this, (el, i) => {\n    const { parent: parent2 } = el;\n    if (!parent2) {\n      return;\n    }\n    const siblings2 = parent2.children;\n    const cont = typeof content === \"function\" ? content.call(el, i, el) : content;\n    const dom = this._makeDomArray(cont);\n    update(dom, null);\n    const index2 = siblings2.indexOf(el);\n    uniqueSplice(siblings2, index2, 1, dom, parent2);\n    if (!dom.includes(el)) {\n      el.parent = el.prev = el.next = null;\n    }\n  });\n}\nfunction empty() {\n  return domEach(this, (el) => {\n    if (!hasChildren(el))\n      return;\n    for (const child of el.children) {\n      child.next = child.prev = child.parent = null;\n    }\n    el.children.length = 0;\n  });\n}\nfunction html(str) {\n  if (str === void 0) {\n    const el = this[0];\n    if (!el || !hasChildren(el))\n      return null;\n    return this._render(el.children);\n  }\n  return domEach(this, (el) => {\n    if (!hasChildren(el))\n      return;\n    for (const child of el.children) {\n      child.next = child.prev = child.parent = null;\n    }\n    const content = isCheerio(str) ? str.toArray() : this._parse(`${str}`, this.options, false, el).children;\n    update(content, el);\n  });\n}\nfunction toString() {\n  return this._render(this);\n}\nfunction text(str) {\n  if (str === void 0) {\n    return text$1(this);\n  }\n  if (typeof str === \"function\") {\n    return domEach(this, (el, i) => this._make(el).text(str.call(el, i, text$1([el]))));\n  }\n  return domEach(this, (el) => {\n    if (!hasChildren(el))\n      return;\n    for (const child of el.children) {\n      child.next = child.prev = child.parent = null;\n    }\n    const textNode = new Text(`${str}`);\n    update(textNode, el);\n  });\n}\nfunction clone() {\n  const clone2 = Array.prototype.map.call(this.get(), (el) => cloneNode(el, true));\n  const root2 = new Document(clone2);\n  for (const node of clone2) {\n    node.parent = root2;\n  }\n  return this._make(clone2);\n}\nconst Manipulation = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  _makeDomArray,\n  after,\n  append,\n  appendTo,\n  before,\n  clone,\n  empty,\n  html,\n  insertAfter,\n  insertBefore,\n  prepend,\n  prependTo,\n  remove,\n  replaceWith,\n  text,\n  toString,\n  unwrap,\n  wrap,\n  wrapAll,\n  wrapInner\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction css(prop2, val2) {\n  if (prop2 != null && val2 != null || // When `prop` is a \"plain\" object\n  typeof prop2 === \"object\" && !Array.isArray(prop2)) {\n    return domEach(this, (el, i) => {\n      if (isTag(el)) {\n        setCss(el, prop2, val2, i);\n      }\n    });\n  }\n  if (this.length === 0) {\n    return void 0;\n  }\n  return getCss(this[0], prop2);\n}\nfunction setCss(el, prop2, value, idx) {\n  if (typeof prop2 === \"string\") {\n    const styles = getCss(el);\n    const val2 = typeof value === \"function\" ? value.call(el, idx, styles[prop2]) : value;\n    if (val2 === \"\") {\n      delete styles[prop2];\n    } else if (val2 != null) {\n      styles[prop2] = val2;\n    }\n    el.attribs[\"style\"] = stringify(styles);\n  } else if (typeof prop2 === \"object\") {\n    const keys = Object.keys(prop2);\n    for (let i = 0; i < keys.length; i++) {\n      const k = keys[i];\n      setCss(el, k, prop2[k], i);\n    }\n  }\n}\nfunction getCss(el, prop2) {\n  if (!el || !isTag(el))\n    return;\n  const styles = parse(el.attribs[\"style\"]);\n  if (typeof prop2 === \"string\") {\n    return styles[prop2];\n  }\n  if (Array.isArray(prop2)) {\n    const newStyles = {};\n    for (const item of prop2) {\n      if (styles[item] != null) {\n        newStyles[item] = styles[item];\n      }\n    }\n    return newStyles;\n  }\n  return styles;\n}\nfunction stringify(obj) {\n  return Object.keys(obj).reduce((str, prop2) => `${str}${str ? \" \" : \"\"}${prop2}: ${obj[prop2]};`, \"\");\n}\nfunction parse(styles) {\n  styles = (styles || \"\").trim();\n  if (!styles)\n    return {};\n  const obj = {};\n  let key;\n  for (const str of styles.split(\";\")) {\n    const n = str.indexOf(\":\");\n    if (n < 1 || n === str.length - 1) {\n      const trimmed = str.trimEnd();\n      if (trimmed.length > 0 && key !== void 0) {\n        obj[key] += `;${trimmed}`;\n      }\n    } else {\n      key = str.slice(0, n).trim();\n      obj[key] = str.slice(n + 1).trim();\n    }\n  }\n  return obj;\n}\nconst Css = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  css\n}, Symbol.toStringTag, { value: \"Module\" }));\nconst submittableSelector = \"input,select,textarea,keygen\";\nconst r20 = /%20/g;\nconst rCRLF = /\\r?\\n/g;\nfunction serialize() {\n  const arr = this.serializeArray();\n  const retArr = arr.map((data2) => `${encodeURIComponent(data2.name)}=${encodeURIComponent(data2.value)}`);\n  return retArr.join(\"&\").replace(r20, \"+\");\n}\nfunction serializeArray() {\n  return this.map((_, elem) => {\n    const $elem = this._make(elem);\n    if (isTag(elem) && elem.name === \"form\") {\n      return $elem.find(submittableSelector).toArray();\n    }\n    return $elem.filter(submittableSelector).toArray();\n  }).filter(\n    // Verify elements have a name (`attr.name`) and are not disabled (`:enabled`)\n    '[name!=\"\"]:enabled:not(:submit, :button, :image, :reset, :file):matches([checked], :not(:checkbox, :radio))'\n  ).map((_, elem) => {\n    var _a2;\n    const $elem = this._make(elem);\n    const name = $elem.attr(\"name\");\n    const value = (_a2 = $elem.val()) !== null && _a2 !== void 0 ? _a2 : \"\";\n    if (Array.isArray(value)) {\n      return value.map((val2) => (\n        /*\n         * We trim replace any line endings (e.g. `\\r` or `\\r\\n` with `\\r\\n`) to guarantee consistency across platforms\n         * These can occur inside of `<textarea>'s`\n         */\n        { name, value: val2.replace(rCRLF, \"\\r\\n\") }\n      ));\n    }\n    return { name, value: value.replace(rCRLF, \"\\r\\n\") };\n  }).toArray();\n}\nconst Forms = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  serialize,\n  serializeArray\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction getExtractDescr(descr) {\n  var _a2;\n  if (typeof descr === \"string\") {\n    return { selector: descr, value: \"textContent\" };\n  }\n  return {\n    selector: descr.selector,\n    value: (_a2 = descr.value) !== null && _a2 !== void 0 ? _a2 : \"textContent\"\n  };\n}\nfunction extract(map2) {\n  const ret = {};\n  for (const key in map2) {\n    const descr = map2[key];\n    const isArray = Array.isArray(descr);\n    const { selector, value } = getExtractDescr(isArray ? descr[0] : descr);\n    const fn = typeof value === \"function\" ? value : typeof value === \"string\" ? (el) => this._make(el).prop(value) : (el) => this._make(el).extract(value);\n    if (isArray) {\n      ret[key] = this._findBySelector(selector, Number.POSITIVE_INFINITY).map((_, el) => fn(el, key, ret)).get();\n    } else {\n      const $ = this._findBySelector(selector, 1);\n      ret[key] = $.length > 0 ? fn($[0], key, ret) : void 0;\n    }\n  }\n  return ret;\n}\nconst Extract = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  extract\n}, Symbol.toStringTag, { value: \"Module\" }));\nclass Cheerio {\n  /**\n   * Instance of cheerio. Methods are specified in the modules. Usage of this\n   * constructor is not recommended. Please use `$.load` instead.\n   *\n   * @private\n   * @param elements - The new selection.\n   * @param root - Sets the root node.\n   * @param options - Options for the instance.\n   */\n  constructor(elements, root2, options) {\n    this.length = 0;\n    this.options = options;\n    this._root = root2;\n    if (elements) {\n      for (let idx = 0; idx < elements.length; idx++) {\n        this[idx] = elements[idx];\n      }\n      this.length = elements.length;\n    }\n  }\n}\nCheerio.prototype.cheerio = \"[cheerio object]\";\nCheerio.prototype.splice = Array.prototype.splice;\nCheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\nObject.assign(Cheerio.prototype, Attributes, Traversing, Manipulation, Css, Forms, Extract);\nfunction getLoad(parse2, render2) {\n  return function load2(content, options, isDocument2 = true) {\n    if (content == null) {\n      throw new Error(\"cheerio.load() expects a string\");\n    }\n    const internalOpts = flattenOptions(options);\n    const initialRoot = parse2(content, internalOpts, isDocument2, null);\n    class LoadedCheerio extends Cheerio {\n      _make(selector, context) {\n        const cheerio = initialize(selector, context);\n        cheerio.prevObject = this;\n        return cheerio;\n      }\n      _parse(content2, options2, isDocument3, context) {\n        return parse2(content2, options2, isDocument3, context);\n      }\n      _render(dom) {\n        return render2(dom, this.options);\n      }\n    }\n    function initialize(selector, context, root2 = initialRoot, opts) {\n      if (selector && isCheerio(selector))\n        return selector;\n      const options2 = flattenOptions(opts, internalOpts);\n      const r = typeof root2 === \"string\" ? [parse2(root2, options2, false, null)] : \"length\" in root2 ? root2 : [root2];\n      const rootInstance = isCheerio(r) ? r : new LoadedCheerio(r, null, options2);\n      rootInstance._root = rootInstance;\n      if (!selector) {\n        return new LoadedCheerio(void 0, rootInstance, options2);\n      }\n      const elements = typeof selector === \"string\" && isHtml(selector) ? (\n        // $(<html>)\n        parse2(selector, options2, false, null).children\n      ) : isNode(selector) ? (\n        // $(dom)\n        [selector]\n      ) : Array.isArray(selector) ? (\n        // $([dom])\n        selector\n      ) : void 0;\n      const instance = new LoadedCheerio(elements, rootInstance, options2);\n      if (elements) {\n        return instance;\n      }\n      if (typeof selector !== \"string\") {\n        throw new TypeError(\"Unexpected type of selector\");\n      }\n      let search = selector;\n      const searchContext = context ? (\n        // If we don't have a context, maybe we have a root, from loading\n        typeof context === \"string\" ? isHtml(context) ? (\n          // $('li', '<ul>...</ul>')\n          new LoadedCheerio([parse2(context, options2, false, null)], rootInstance, options2)\n        ) : (\n          // $('li', 'ul')\n          (search = `${context} ${search}`, rootInstance)\n        ) : isCheerio(context) ? (\n          // $('li', $)\n          context\n        ) : (\n          // $('li', node), $('li', [nodes])\n          new LoadedCheerio(Array.isArray(context) ? context : [context], rootInstance, options2)\n        )\n      ) : rootInstance;\n      if (!searchContext)\n        return instance;\n      return searchContext.find(search);\n    }\n    Object.assign(initialize, staticMethods, {\n      load: load2,\n      // `_root` and `_options` are used in static methods.\n      _root: initialRoot,\n      _options: internalOpts,\n      // Add `fn` for plugins\n      fn: LoadedCheerio.prototype,\n      // Add the prototype here to maintain `instanceof` behavior.\n      prototype: LoadedCheerio.prototype\n    });\n    return initialize;\n  };\n}\nfunction isNode(obj) {\n  return !!obj.name || obj.type === \"root\" || obj.type === \"text\" || obj.type === \"comment\";\n}\nvar CharCodes;\n(function(CharCodes2) {\n  CharCodes2[CharCodes2[\"Tab\"] = 9] = \"Tab\";\n  CharCodes2[CharCodes2[\"NewLine\"] = 10] = \"NewLine\";\n  CharCodes2[CharCodes2[\"FormFeed\"] = 12] = \"FormFeed\";\n  CharCodes2[CharCodes2[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n  CharCodes2[CharCodes2[\"Space\"] = 32] = \"Space\";\n  CharCodes2[CharCodes2[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n  CharCodes2[CharCodes2[\"Number\"] = 35] = \"Number\";\n  CharCodes2[CharCodes2[\"Amp\"] = 38] = \"Amp\";\n  CharCodes2[CharCodes2[\"SingleQuote\"] = 39] = \"SingleQuote\";\n  CharCodes2[CharCodes2[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n  CharCodes2[CharCodes2[\"Dash\"] = 45] = \"Dash\";\n  CharCodes2[CharCodes2[\"Slash\"] = 47] = \"Slash\";\n  CharCodes2[CharCodes2[\"Zero\"] = 48] = \"Zero\";\n  CharCodes2[CharCodes2[\"Nine\"] = 57] = \"Nine\";\n  CharCodes2[CharCodes2[\"Semi\"] = 59] = \"Semi\";\n  CharCodes2[CharCodes2[\"Lt\"] = 60] = \"Lt\";\n  CharCodes2[CharCodes2[\"Eq\"] = 61] = \"Eq\";\n  CharCodes2[CharCodes2[\"Gt\"] = 62] = \"Gt\";\n  CharCodes2[CharCodes2[\"Questionmark\"] = 63] = \"Questionmark\";\n  CharCodes2[CharCodes2[\"UpperA\"] = 65] = \"UpperA\";\n  CharCodes2[CharCodes2[\"LowerA\"] = 97] = \"LowerA\";\n  CharCodes2[CharCodes2[\"UpperF\"] = 70] = \"UpperF\";\n  CharCodes2[CharCodes2[\"LowerF\"] = 102] = \"LowerF\";\n  CharCodes2[CharCodes2[\"UpperZ\"] = 90] = \"UpperZ\";\n  CharCodes2[CharCodes2[\"LowerZ\"] = 122] = \"LowerZ\";\n  CharCodes2[CharCodes2[\"LowerX\"] = 120] = \"LowerX\";\n  CharCodes2[CharCodes2[\"OpeningSquareBracket\"] = 91] = \"OpeningSquareBracket\";\n})(CharCodes || (CharCodes = {}));\nvar State;\n(function(State2) {\n  State2[State2[\"Text\"] = 1] = \"Text\";\n  State2[State2[\"BeforeTagName\"] = 2] = \"BeforeTagName\";\n  State2[State2[\"InTagName\"] = 3] = \"InTagName\";\n  State2[State2[\"InSelfClosingTag\"] = 4] = \"InSelfClosingTag\";\n  State2[State2[\"BeforeClosingTagName\"] = 5] = \"BeforeClosingTagName\";\n  State2[State2[\"InClosingTagName\"] = 6] = \"InClosingTagName\";\n  State2[State2[\"AfterClosingTagName\"] = 7] = \"AfterClosingTagName\";\n  State2[State2[\"BeforeAttributeName\"] = 8] = \"BeforeAttributeName\";\n  State2[State2[\"InAttributeName\"] = 9] = \"InAttributeName\";\n  State2[State2[\"AfterAttributeName\"] = 10] = \"AfterAttributeName\";\n  State2[State2[\"BeforeAttributeValue\"] = 11] = \"BeforeAttributeValue\";\n  State2[State2[\"InAttributeValueDq\"] = 12] = \"InAttributeValueDq\";\n  State2[State2[\"InAttributeValueSq\"] = 13] = \"InAttributeValueSq\";\n  State2[State2[\"InAttributeValueNq\"] = 14] = \"InAttributeValueNq\";\n  State2[State2[\"BeforeDeclaration\"] = 15] = \"BeforeDeclaration\";\n  State2[State2[\"InDeclaration\"] = 16] = \"InDeclaration\";\n  State2[State2[\"InProcessingInstruction\"] = 17] = \"InProcessingInstruction\";\n  State2[State2[\"BeforeComment\"] = 18] = \"BeforeComment\";\n  State2[State2[\"CDATASequence\"] = 19] = \"CDATASequence\";\n  State2[State2[\"InSpecialComment\"] = 20] = \"InSpecialComment\";\n  State2[State2[\"InCommentLike\"] = 21] = \"InCommentLike\";\n  State2[State2[\"BeforeSpecialS\"] = 22] = \"BeforeSpecialS\";\n  State2[State2[\"BeforeSpecialT\"] = 23] = \"BeforeSpecialT\";\n  State2[State2[\"SpecialStartSequence\"] = 24] = \"SpecialStartSequence\";\n  State2[State2[\"InSpecialTag\"] = 25] = \"InSpecialTag\";\n  State2[State2[\"InEntity\"] = 26] = \"InEntity\";\n})(State || (State = {}));\nfunction isWhitespace(c) {\n  return c === CharCodes.Space || c === CharCodes.NewLine || c === CharCodes.Tab || c === CharCodes.FormFeed || c === CharCodes.CarriageReturn;\n}\nfunction isEndOfTagSection(c) {\n  return c === CharCodes.Slash || c === CharCodes.Gt || isWhitespace(c);\n}\nfunction isASCIIAlpha(c) {\n  return c >= CharCodes.LowerA && c <= CharCodes.LowerZ || c >= CharCodes.UpperA && c <= CharCodes.UpperZ;\n}\nvar QuoteType;\n(function(QuoteType2) {\n  QuoteType2[QuoteType2[\"NoValue\"] = 0] = \"NoValue\";\n  QuoteType2[QuoteType2[\"Unquoted\"] = 1] = \"Unquoted\";\n  QuoteType2[QuoteType2[\"Single\"] = 2] = \"Single\";\n  QuoteType2[QuoteType2[\"Double\"] = 3] = \"Double\";\n})(QuoteType || (QuoteType = {}));\nconst Sequences = {\n  Cdata: new Uint8Array([67, 68, 65, 84, 65, 91]),\n  // CDATA[\n  CdataEnd: new Uint8Array([93, 93, 62]),\n  // ]]>\n  CommentEnd: new Uint8Array([45, 45, 62]),\n  // `-->`\n  ScriptEnd: new Uint8Array([60, 47, 115, 99, 114, 105, 112, 116]),\n  // `<\\/script`\n  StyleEnd: new Uint8Array([60, 47, 115, 116, 121, 108, 101]),\n  // `</style`\n  TitleEnd: new Uint8Array([60, 47, 116, 105, 116, 108, 101]),\n  // `</title`\n  TextareaEnd: new Uint8Array([\n    60,\n    47,\n    116,\n    101,\n    120,\n    116,\n    97,\n    114,\n    101,\n    97\n  ])\n  // `</textarea`\n};\nclass Tokenizer {\n  constructor({ xmlMode = false, decodeEntities = true }, cbs) {\n    this.cbs = cbs;\n    this.state = State.Text;\n    this.buffer = \"\";\n    this.sectionStart = 0;\n    this.index = 0;\n    this.entityStart = 0;\n    this.baseState = State.Text;\n    this.isSpecial = false;\n    this.running = true;\n    this.offset = 0;\n    this.currentSequence = void 0;\n    this.sequenceIndex = 0;\n    this.xmlMode = xmlMode;\n    this.decodeEntities = decodeEntities;\n    this.entityDecoder = new EntityDecoder(xmlMode ? xmlDecodeTree : htmlDecodeTree, (cp, consumed) => this.emitCodePoint(cp, consumed));\n  }\n  reset() {\n    this.state = State.Text;\n    this.buffer = \"\";\n    this.sectionStart = 0;\n    this.index = 0;\n    this.baseState = State.Text;\n    this.currentSequence = void 0;\n    this.running = true;\n    this.offset = 0;\n  }\n  write(chunk) {\n    this.offset += this.buffer.length;\n    this.buffer = chunk;\n    this.parse();\n  }\n  end() {\n    if (this.running)\n      this.finish();\n  }\n  pause() {\n    this.running = false;\n  }\n  resume() {\n    this.running = true;\n    if (this.index < this.buffer.length + this.offset) {\n      this.parse();\n    }\n  }\n  stateText(c) {\n    if (c === CharCodes.Lt || !this.decodeEntities && this.fastForwardTo(CharCodes.Lt)) {\n      if (this.index > this.sectionStart) {\n        this.cbs.ontext(this.sectionStart, this.index);\n      }\n      this.state = State.BeforeTagName;\n      this.sectionStart = this.index;\n    } else if (this.decodeEntities && c === CharCodes.Amp) {\n      this.startEntity();\n    }\n  }\n  stateSpecialStartSequence(c) {\n    const isEnd = this.sequenceIndex === this.currentSequence.length;\n    const isMatch = isEnd ? (\n      // If we are at the end of the sequence, make sure the tag name has ended\n      isEndOfTagSection(c)\n    ) : (\n      // Otherwise, do a case-insensitive comparison\n      (c | 32) === this.currentSequence[this.sequenceIndex]\n    );\n    if (!isMatch) {\n      this.isSpecial = false;\n    } else if (!isEnd) {\n      this.sequenceIndex++;\n      return;\n    }\n    this.sequenceIndex = 0;\n    this.state = State.InTagName;\n    this.stateInTagName(c);\n  }\n  /** Look for an end tag. For <title> tags, also decode entities. */\n  stateInSpecialTag(c) {\n    if (this.sequenceIndex === this.currentSequence.length) {\n      if (c === CharCodes.Gt || isWhitespace(c)) {\n        const endOfText = this.index - this.currentSequence.length;\n        if (this.sectionStart < endOfText) {\n          const actualIndex = this.index;\n          this.index = endOfText;\n          this.cbs.ontext(this.sectionStart, endOfText);\n          this.index = actualIndex;\n        }\n        this.isSpecial = false;\n        this.sectionStart = endOfText + 2;\n        this.stateInClosingTagName(c);\n        return;\n      }\n      this.sequenceIndex = 0;\n    }\n    if ((c | 32) === this.currentSequence[this.sequenceIndex]) {\n      this.sequenceIndex += 1;\n    } else if (this.sequenceIndex === 0) {\n      if (this.currentSequence === Sequences.TitleEnd) {\n        if (this.decodeEntities && c === CharCodes.Amp) {\n          this.startEntity();\n        }\n      } else if (this.fastForwardTo(CharCodes.Lt)) {\n        this.sequenceIndex = 1;\n      }\n    } else {\n      this.sequenceIndex = Number(c === CharCodes.Lt);\n    }\n  }\n  stateCDATASequence(c) {\n    if (c === Sequences.Cdata[this.sequenceIndex]) {\n      if (++this.sequenceIndex === Sequences.Cdata.length) {\n        this.state = State.InCommentLike;\n        this.currentSequence = Sequences.CdataEnd;\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n      }\n    } else {\n      this.sequenceIndex = 0;\n      this.state = State.InDeclaration;\n      this.stateInDeclaration(c);\n    }\n  }\n  /**\n   * When we wait for one specific character, we can speed things up\n   * by skipping through the buffer until we find it.\n   *\n   * @returns Whether the character was found.\n   */\n  fastForwardTo(c) {\n    while (++this.index < this.buffer.length + this.offset) {\n      if (this.buffer.charCodeAt(this.index - this.offset) === c) {\n        return true;\n      }\n    }\n    this.index = this.buffer.length + this.offset - 1;\n    return false;\n  }\n  /**\n   * Comments and CDATA end with `-->` and `]]>`.\n   *\n   * Their common qualities are:\n   * - Their end sequences have a distinct character they start with.\n   * - That character is then repeated, so we have to check multiple repeats.\n   * - All characters but the start character of the sequence can be skipped.\n   */\n  stateInCommentLike(c) {\n    if (c === this.currentSequence[this.sequenceIndex]) {\n      if (++this.sequenceIndex === this.currentSequence.length) {\n        if (this.currentSequence === Sequences.CdataEnd) {\n          this.cbs.oncdata(this.sectionStart, this.index, 2);\n        } else {\n          this.cbs.oncomment(this.sectionStart, this.index, 2);\n        }\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n        this.state = State.Text;\n      }\n    } else if (this.sequenceIndex === 0) {\n      if (this.fastForwardTo(this.currentSequence[0])) {\n        this.sequenceIndex = 1;\n      }\n    } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n      this.sequenceIndex = 0;\n    }\n  }\n  /**\n   * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.\n   *\n   * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).\n   * We allow anything that wouldn't end the tag.\n   */\n  isTagStartChar(c) {\n    return this.xmlMode ? !isEndOfTagSection(c) : isASCIIAlpha(c);\n  }\n  startSpecial(sequence, offset) {\n    this.isSpecial = true;\n    this.currentSequence = sequence;\n    this.sequenceIndex = offset;\n    this.state = State.SpecialStartSequence;\n  }\n  stateBeforeTagName(c) {\n    if (c === CharCodes.ExclamationMark) {\n      this.state = State.BeforeDeclaration;\n      this.sectionStart = this.index + 1;\n    } else if (c === CharCodes.Questionmark) {\n      this.state = State.InProcessingInstruction;\n      this.sectionStart = this.index + 1;\n    } else if (this.isTagStartChar(c)) {\n      const lower = c | 32;\n      this.sectionStart = this.index;\n      if (this.xmlMode) {\n        this.state = State.InTagName;\n      } else if (lower === Sequences.ScriptEnd[2]) {\n        this.state = State.BeforeSpecialS;\n      } else if (lower === Sequences.TitleEnd[2]) {\n        this.state = State.BeforeSpecialT;\n      } else {\n        this.state = State.InTagName;\n      }\n    } else if (c === CharCodes.Slash) {\n      this.state = State.BeforeClosingTagName;\n    } else {\n      this.state = State.Text;\n      this.stateText(c);\n    }\n  }\n  stateInTagName(c) {\n    if (isEndOfTagSection(c)) {\n      this.cbs.onopentagname(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    }\n  }\n  stateBeforeClosingTagName(c) {\n    if (isWhitespace(c)) ;\n    else if (c === CharCodes.Gt) {\n      this.state = State.Text;\n    } else {\n      this.state = this.isTagStartChar(c) ? State.InClosingTagName : State.InSpecialComment;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInClosingTagName(c) {\n    if (c === CharCodes.Gt || isWhitespace(c)) {\n      this.cbs.onclosetag(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = State.AfterClosingTagName;\n      this.stateAfterClosingTagName(c);\n    }\n  }\n  stateAfterClosingTagName(c) {\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeAttributeName(c) {\n    if (c === CharCodes.Gt) {\n      this.cbs.onopentagend(this.index);\n      if (this.isSpecial) {\n        this.state = State.InSpecialTag;\n        this.sequenceIndex = 0;\n      } else {\n        this.state = State.Text;\n      }\n      this.sectionStart = this.index + 1;\n    } else if (c === CharCodes.Slash) {\n      this.state = State.InSelfClosingTag;\n    } else if (!isWhitespace(c)) {\n      this.state = State.InAttributeName;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInSelfClosingTag(c) {\n    if (c === CharCodes.Gt) {\n      this.cbs.onselfclosingtag(this.index);\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n      this.isSpecial = false;\n    } else if (!isWhitespace(c)) {\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    }\n  }\n  stateInAttributeName(c) {\n    if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n      this.cbs.onattribname(this.sectionStart, this.index);\n      this.sectionStart = this.index;\n      this.state = State.AfterAttributeName;\n      this.stateAfterAttributeName(c);\n    }\n  }\n  stateAfterAttributeName(c) {\n    if (c === CharCodes.Eq) {\n      this.state = State.BeforeAttributeValue;\n    } else if (c === CharCodes.Slash || c === CharCodes.Gt) {\n      this.cbs.onattribend(QuoteType.NoValue, this.sectionStart);\n      this.sectionStart = -1;\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    } else if (!isWhitespace(c)) {\n      this.cbs.onattribend(QuoteType.NoValue, this.sectionStart);\n      this.state = State.InAttributeName;\n      this.sectionStart = this.index;\n    }\n  }\n  stateBeforeAttributeValue(c) {\n    if (c === CharCodes.DoubleQuote) {\n      this.state = State.InAttributeValueDq;\n      this.sectionStart = this.index + 1;\n    } else if (c === CharCodes.SingleQuote) {\n      this.state = State.InAttributeValueSq;\n      this.sectionStart = this.index + 1;\n    } else if (!isWhitespace(c)) {\n      this.sectionStart = this.index;\n      this.state = State.InAttributeValueNq;\n      this.stateInAttributeValueNoQuotes(c);\n    }\n  }\n  handleInAttributeValue(c, quote) {\n    if (c === quote || !this.decodeEntities && this.fastForwardTo(quote)) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(quote === CharCodes.DoubleQuote ? QuoteType.Double : QuoteType.Single, this.index + 1);\n      this.state = State.BeforeAttributeName;\n    } else if (this.decodeEntities && c === CharCodes.Amp) {\n      this.startEntity();\n    }\n  }\n  stateInAttributeValueDoubleQuotes(c) {\n    this.handleInAttributeValue(c, CharCodes.DoubleQuote);\n  }\n  stateInAttributeValueSingleQuotes(c) {\n    this.handleInAttributeValue(c, CharCodes.SingleQuote);\n  }\n  stateInAttributeValueNoQuotes(c) {\n    if (isWhitespace(c) || c === CharCodes.Gt) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(QuoteType.Unquoted, this.index);\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    } else if (this.decodeEntities && c === CharCodes.Amp) {\n      this.startEntity();\n    }\n  }\n  stateBeforeDeclaration(c) {\n    if (c === CharCodes.OpeningSquareBracket) {\n      this.state = State.CDATASequence;\n      this.sequenceIndex = 0;\n    } else {\n      this.state = c === CharCodes.Dash ? State.BeforeComment : State.InDeclaration;\n    }\n  }\n  stateInDeclaration(c) {\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.cbs.ondeclaration(this.sectionStart, this.index);\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInProcessingInstruction(c) {\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeComment(c) {\n    if (c === CharCodes.Dash) {\n      this.state = State.InCommentLike;\n      this.currentSequence = Sequences.CommentEnd;\n      this.sequenceIndex = 2;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = State.InDeclaration;\n    }\n  }\n  stateInSpecialComment(c) {\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.cbs.oncomment(this.sectionStart, this.index, 0);\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeSpecialS(c) {\n    const lower = c | 32;\n    if (lower === Sequences.ScriptEnd[3]) {\n      this.startSpecial(Sequences.ScriptEnd, 4);\n    } else if (lower === Sequences.StyleEnd[3]) {\n      this.startSpecial(Sequences.StyleEnd, 4);\n    } else {\n      this.state = State.InTagName;\n      this.stateInTagName(c);\n    }\n  }\n  stateBeforeSpecialT(c) {\n    const lower = c | 32;\n    if (lower === Sequences.TitleEnd[3]) {\n      this.startSpecial(Sequences.TitleEnd, 4);\n    } else if (lower === Sequences.TextareaEnd[3]) {\n      this.startSpecial(Sequences.TextareaEnd, 4);\n    } else {\n      this.state = State.InTagName;\n      this.stateInTagName(c);\n    }\n  }\n  startEntity() {\n    this.baseState = this.state;\n    this.state = State.InEntity;\n    this.entityStart = this.index;\n    this.entityDecoder.startEntity(this.xmlMode ? DecodingMode.Strict : this.baseState === State.Text || this.baseState === State.InSpecialTag ? DecodingMode.Legacy : DecodingMode.Attribute);\n  }\n  stateInEntity() {\n    const length = this.entityDecoder.write(this.buffer, this.index - this.offset);\n    if (length >= 0) {\n      this.state = this.baseState;\n      if (length === 0) {\n        this.index = this.entityStart;\n      }\n    } else {\n      this.index = this.offset + this.buffer.length - 1;\n    }\n  }\n  /**\n   * Remove data that has already been consumed from the buffer.\n   */\n  cleanup() {\n    if (this.running && this.sectionStart !== this.index) {\n      if (this.state === State.Text || this.state === State.InSpecialTag && this.sequenceIndex === 0) {\n        this.cbs.ontext(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      } else if (this.state === State.InAttributeValueDq || this.state === State.InAttributeValueSq || this.state === State.InAttributeValueNq) {\n        this.cbs.onattribdata(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      }\n    }\n  }\n  shouldContinue() {\n    return this.index < this.buffer.length + this.offset && this.running;\n  }\n  /**\n   * Iterates through the buffer, calling the function corresponding to the current state.\n   *\n   * States that are more likely to be hit are higher up, as a performance improvement.\n   */\n  parse() {\n    while (this.shouldContinue()) {\n      const c = this.buffer.charCodeAt(this.index - this.offset);\n      switch (this.state) {\n        case State.Text: {\n          this.stateText(c);\n          break;\n        }\n        case State.SpecialStartSequence: {\n          this.stateSpecialStartSequence(c);\n          break;\n        }\n        case State.InSpecialTag: {\n          this.stateInSpecialTag(c);\n          break;\n        }\n        case State.CDATASequence: {\n          this.stateCDATASequence(c);\n          break;\n        }\n        case State.InAttributeValueDq: {\n          this.stateInAttributeValueDoubleQuotes(c);\n          break;\n        }\n        case State.InAttributeName: {\n          this.stateInAttributeName(c);\n          break;\n        }\n        case State.InCommentLike: {\n          this.stateInCommentLike(c);\n          break;\n        }\n        case State.InSpecialComment: {\n          this.stateInSpecialComment(c);\n          break;\n        }\n        case State.BeforeAttributeName: {\n          this.stateBeforeAttributeName(c);\n          break;\n        }\n        case State.InTagName: {\n          this.stateInTagName(c);\n          break;\n        }\n        case State.InClosingTagName: {\n          this.stateInClosingTagName(c);\n          break;\n        }\n        case State.BeforeTagName: {\n          this.stateBeforeTagName(c);\n          break;\n        }\n        case State.AfterAttributeName: {\n          this.stateAfterAttributeName(c);\n          break;\n        }\n        case State.InAttributeValueSq: {\n          this.stateInAttributeValueSingleQuotes(c);\n          break;\n        }\n        case State.BeforeAttributeValue: {\n          this.stateBeforeAttributeValue(c);\n          break;\n        }\n        case State.BeforeClosingTagName: {\n          this.stateBeforeClosingTagName(c);\n          break;\n        }\n        case State.AfterClosingTagName: {\n          this.stateAfterClosingTagName(c);\n          break;\n        }\n        case State.BeforeSpecialS: {\n          this.stateBeforeSpecialS(c);\n          break;\n        }\n        case State.BeforeSpecialT: {\n          this.stateBeforeSpecialT(c);\n          break;\n        }\n        case State.InAttributeValueNq: {\n          this.stateInAttributeValueNoQuotes(c);\n          break;\n        }\n        case State.InSelfClosingTag: {\n          this.stateInSelfClosingTag(c);\n          break;\n        }\n        case State.InDeclaration: {\n          this.stateInDeclaration(c);\n          break;\n        }\n        case State.BeforeDeclaration: {\n          this.stateBeforeDeclaration(c);\n          break;\n        }\n        case State.BeforeComment: {\n          this.stateBeforeComment(c);\n          break;\n        }\n        case State.InProcessingInstruction: {\n          this.stateInProcessingInstruction(c);\n          break;\n        }\n        case State.InEntity: {\n          this.stateInEntity();\n          break;\n        }\n      }\n      this.index++;\n    }\n    this.cleanup();\n  }\n  finish() {\n    if (this.state === State.InEntity) {\n      this.entityDecoder.end();\n      this.state = this.baseState;\n    }\n    this.handleTrailingData();\n    this.cbs.onend();\n  }\n  /** Handle any trailing data. */\n  handleTrailingData() {\n    const endIndex = this.buffer.length + this.offset;\n    if (this.sectionStart >= endIndex) {\n      return;\n    }\n    if (this.state === State.InCommentLike) {\n      if (this.currentSequence === Sequences.CdataEnd) {\n        this.cbs.oncdata(this.sectionStart, endIndex, 0);\n      } else {\n        this.cbs.oncomment(this.sectionStart, endIndex, 0);\n      }\n    } else if (this.state === State.InTagName || this.state === State.BeforeAttributeName || this.state === State.BeforeAttributeValue || this.state === State.AfterAttributeName || this.state === State.InAttributeName || this.state === State.InAttributeValueSq || this.state === State.InAttributeValueDq || this.state === State.InAttributeValueNq || this.state === State.InClosingTagName) ;\n    else {\n      this.cbs.ontext(this.sectionStart, endIndex);\n    }\n  }\n  emitCodePoint(cp, consumed) {\n    if (this.baseState !== State.Text && this.baseState !== State.InSpecialTag) {\n      if (this.sectionStart < this.entityStart) {\n        this.cbs.onattribdata(this.sectionStart, this.entityStart);\n      }\n      this.sectionStart = this.entityStart + consumed;\n      this.index = this.sectionStart - 1;\n      this.cbs.onattribentity(cp);\n    } else {\n      if (this.sectionStart < this.entityStart) {\n        this.cbs.ontext(this.sectionStart, this.entityStart);\n      }\n      this.sectionStart = this.entityStart + consumed;\n      this.index = this.sectionStart - 1;\n      this.cbs.ontextentity(cp, this.sectionStart);\n    }\n  }\n}\nconst formTags = /* @__PURE__ */ new Set([\n  \"input\",\n  \"option\",\n  \"optgroup\",\n  \"select\",\n  \"button\",\n  \"datalist\",\n  \"textarea\"\n]);\nconst pTag = /* @__PURE__ */ new Set([\"p\"]);\nconst tableSectionTags = /* @__PURE__ */ new Set([\"thead\", \"tbody\"]);\nconst ddtTags = /* @__PURE__ */ new Set([\"dd\", \"dt\"]);\nconst rtpTags = /* @__PURE__ */ new Set([\"rt\", \"rp\"]);\nconst openImpliesClose = /* @__PURE__ */ new Map([\n  [\"tr\", /* @__PURE__ */ new Set([\"tr\", \"th\", \"td\"])],\n  [\"th\", /* @__PURE__ */ new Set([\"th\"])],\n  [\"td\", /* @__PURE__ */ new Set([\"thead\", \"th\", \"td\"])],\n  [\"body\", /* @__PURE__ */ new Set([\"head\", \"link\", \"script\"])],\n  [\"li\", /* @__PURE__ */ new Set([\"li\"])],\n  [\"p\", pTag],\n  [\"h1\", pTag],\n  [\"h2\", pTag],\n  [\"h3\", pTag],\n  [\"h4\", pTag],\n  [\"h5\", pTag],\n  [\"h6\", pTag],\n  [\"select\", formTags],\n  [\"input\", formTags],\n  [\"output\", formTags],\n  [\"button\", formTags],\n  [\"datalist\", formTags],\n  [\"textarea\", formTags],\n  [\"option\", /* @__PURE__ */ new Set([\"option\"])],\n  [\"optgroup\", /* @__PURE__ */ new Set([\"optgroup\", \"option\"])],\n  [\"dd\", ddtTags],\n  [\"dt\", ddtTags],\n  [\"address\", pTag],\n  [\"article\", pTag],\n  [\"aside\", pTag],\n  [\"blockquote\", pTag],\n  [\"details\", pTag],\n  [\"div\", pTag],\n  [\"dl\", pTag],\n  [\"fieldset\", pTag],\n  [\"figcaption\", pTag],\n  [\"figure\", pTag],\n  [\"footer\", pTag],\n  [\"form\", pTag],\n  [\"header\", pTag],\n  [\"hr\", pTag],\n  [\"main\", pTag],\n  [\"nav\", pTag],\n  [\"ol\", pTag],\n  [\"pre\", pTag],\n  [\"section\", pTag],\n  [\"table\", pTag],\n  [\"ul\", pTag],\n  [\"rt\", rtpTags],\n  [\"rp\", rtpTags],\n  [\"tbody\", tableSectionTags],\n  [\"tfoot\", tableSectionTags]\n]);\nconst voidElements = /* @__PURE__ */ new Set([\n  \"area\",\n  \"base\",\n  \"basefont\",\n  \"br\",\n  \"col\",\n  \"command\",\n  \"embed\",\n  \"frame\",\n  \"hr\",\n  \"img\",\n  \"input\",\n  \"isindex\",\n  \"keygen\",\n  \"link\",\n  \"meta\",\n  \"param\",\n  \"source\",\n  \"track\",\n  \"wbr\"\n]);\nconst foreignContextElements = /* @__PURE__ */ new Set([\"math\", \"svg\"]);\nconst htmlIntegrationElements = /* @__PURE__ */ new Set([\n  \"mi\",\n  \"mo\",\n  \"mn\",\n  \"ms\",\n  \"mtext\",\n  \"annotation-xml\",\n  \"foreignobject\",\n  \"desc\",\n  \"title\"\n]);\nconst reNameEnd = /\\s|\\//;\nclass Parser {\n  constructor(cbs, options = {}) {\n    var _a2, _b, _c, _d, _e, _f;\n    this.options = options;\n    this.startIndex = 0;\n    this.endIndex = 0;\n    this.openTagStart = 0;\n    this.tagname = \"\";\n    this.attribname = \"\";\n    this.attribvalue = \"\";\n    this.attribs = null;\n    this.stack = [];\n    this.buffers = [];\n    this.bufferOffset = 0;\n    this.writeIndex = 0;\n    this.ended = false;\n    this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};\n    this.htmlMode = !this.options.xmlMode;\n    this.lowerCaseTagNames = (_a2 = options.lowerCaseTags) !== null && _a2 !== void 0 ? _a2 : this.htmlMode;\n    this.lowerCaseAttributeNames = (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : this.htmlMode;\n    this.recognizeSelfClosing = (_c = options.recognizeSelfClosing) !== null && _c !== void 0 ? _c : !this.htmlMode;\n    this.tokenizer = new ((_d = options.Tokenizer) !== null && _d !== void 0 ? _d : Tokenizer)(this.options, this);\n    this.foreignContext = [!this.htmlMode];\n    (_f = (_e = this.cbs).onparserinit) === null || _f === void 0 ? void 0 : _f.call(_e, this);\n  }\n  // Tokenizer event handlers\n  /** @internal */\n  ontext(start, endIndex) {\n    var _a2, _b;\n    const data2 = this.getSlice(start, endIndex);\n    this.endIndex = endIndex - 1;\n    (_b = (_a2 = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a2, data2);\n    this.startIndex = endIndex;\n  }\n  /** @internal */\n  ontextentity(cp, endIndex) {\n    var _a2, _b;\n    this.endIndex = endIndex - 1;\n    (_b = (_a2 = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a2, fromCodePoint(cp));\n    this.startIndex = endIndex;\n  }\n  /**\n   * Checks if the current tag is a void element. Override this if you want\n   * to specify your own additional void elements.\n   */\n  isVoidElement(name) {\n    return this.htmlMode && voidElements.has(name);\n  }\n  /** @internal */\n  onopentagname(start, endIndex) {\n    this.endIndex = endIndex;\n    let name = this.getSlice(start, endIndex);\n    if (this.lowerCaseTagNames) {\n      name = name.toLowerCase();\n    }\n    this.emitOpenTag(name);\n  }\n  emitOpenTag(name) {\n    var _a2, _b, _c, _d;\n    this.openTagStart = this.startIndex;\n    this.tagname = name;\n    const impliesClose = this.htmlMode && openImpliesClose.get(name);\n    if (impliesClose) {\n      while (this.stack.length > 0 && impliesClose.has(this.stack[0])) {\n        const element = this.stack.shift();\n        (_b = (_a2 = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a2, element, true);\n      }\n    }\n    if (!this.isVoidElement(name)) {\n      this.stack.unshift(name);\n      if (this.htmlMode) {\n        if (foreignContextElements.has(name)) {\n          this.foreignContext.unshift(true);\n        } else if (htmlIntegrationElements.has(name)) {\n          this.foreignContext.unshift(false);\n        }\n      }\n    }\n    (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, name);\n    if (this.cbs.onopentag)\n      this.attribs = {};\n  }\n  endOpenTag(isImplied) {\n    var _a2, _b;\n    this.startIndex = this.openTagStart;\n    if (this.attribs) {\n      (_b = (_a2 = this.cbs).onopentag) === null || _b === void 0 ? void 0 : _b.call(_a2, this.tagname, this.attribs, isImplied);\n      this.attribs = null;\n    }\n    if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {\n      this.cbs.onclosetag(this.tagname, true);\n    }\n    this.tagname = \"\";\n  }\n  /** @internal */\n  onopentagend(endIndex) {\n    this.endIndex = endIndex;\n    this.endOpenTag(false);\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onclosetag(start, endIndex) {\n    var _a2, _b, _c, _d, _e, _f, _g, _h;\n    this.endIndex = endIndex;\n    let name = this.getSlice(start, endIndex);\n    if (this.lowerCaseTagNames) {\n      name = name.toLowerCase();\n    }\n    if (this.htmlMode && (foreignContextElements.has(name) || htmlIntegrationElements.has(name))) {\n      this.foreignContext.shift();\n    }\n    if (!this.isVoidElement(name)) {\n      const pos = this.stack.indexOf(name);\n      if (pos !== -1) {\n        for (let index2 = 0; index2 <= pos; index2++) {\n          const element = this.stack.shift();\n          (_b = (_a2 = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a2, element, index2 !== pos);\n        }\n      } else if (this.htmlMode && name === \"p\") {\n        this.emitOpenTag(\"p\");\n        this.closeCurrentTag(true);\n      }\n    } else if (this.htmlMode && name === \"br\") {\n      (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, \"br\");\n      (_f = (_e = this.cbs).onopentag) === null || _f === void 0 ? void 0 : _f.call(_e, \"br\", {}, true);\n      (_h = (_g = this.cbs).onclosetag) === null || _h === void 0 ? void 0 : _h.call(_g, \"br\", false);\n    }\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onselfclosingtag(endIndex) {\n    this.endIndex = endIndex;\n    if (this.recognizeSelfClosing || this.foreignContext[0]) {\n      this.closeCurrentTag(false);\n      this.startIndex = endIndex + 1;\n    } else {\n      this.onopentagend(endIndex);\n    }\n  }\n  closeCurrentTag(isOpenImplied) {\n    var _a2, _b;\n    const name = this.tagname;\n    this.endOpenTag(isOpenImplied);\n    if (this.stack[0] === name) {\n      (_b = (_a2 = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a2, name, !isOpenImplied);\n      this.stack.shift();\n    }\n  }\n  /** @internal */\n  onattribname(start, endIndex) {\n    this.startIndex = start;\n    const name = this.getSlice(start, endIndex);\n    this.attribname = this.lowerCaseAttributeNames ? name.toLowerCase() : name;\n  }\n  /** @internal */\n  onattribdata(start, endIndex) {\n    this.attribvalue += this.getSlice(start, endIndex);\n  }\n  /** @internal */\n  onattribentity(cp) {\n    this.attribvalue += fromCodePoint(cp);\n  }\n  /** @internal */\n  onattribend(quote, endIndex) {\n    var _a2, _b;\n    this.endIndex = endIndex;\n    (_b = (_a2 = this.cbs).onattribute) === null || _b === void 0 ? void 0 : _b.call(_a2, this.attribname, this.attribvalue, quote === QuoteType.Double ? '\"' : quote === QuoteType.Single ? \"'\" : quote === QuoteType.NoValue ? void 0 : null);\n    if (this.attribs && !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {\n      this.attribs[this.attribname] = this.attribvalue;\n    }\n    this.attribvalue = \"\";\n  }\n  getInstructionName(value) {\n    const index2 = value.search(reNameEnd);\n    let name = index2 < 0 ? value : value.substr(0, index2);\n    if (this.lowerCaseTagNames) {\n      name = name.toLowerCase();\n    }\n    return name;\n  }\n  /** @internal */\n  ondeclaration(start, endIndex) {\n    this.endIndex = endIndex;\n    const value = this.getSlice(start, endIndex);\n    if (this.cbs.onprocessinginstruction) {\n      const name = this.getInstructionName(value);\n      this.cbs.onprocessinginstruction(`!${name}`, `!${value}`);\n    }\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onprocessinginstruction(start, endIndex) {\n    this.endIndex = endIndex;\n    const value = this.getSlice(start, endIndex);\n    if (this.cbs.onprocessinginstruction) {\n      const name = this.getInstructionName(value);\n      this.cbs.onprocessinginstruction(`?${name}`, `?${value}`);\n    }\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  oncomment(start, endIndex, offset) {\n    var _a2, _b, _c, _d;\n    this.endIndex = endIndex;\n    (_b = (_a2 = this.cbs).oncomment) === null || _b === void 0 ? void 0 : _b.call(_a2, this.getSlice(start, endIndex - offset));\n    (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 ? void 0 : _d.call(_c);\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  oncdata(start, endIndex, offset) {\n    var _a2, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    this.endIndex = endIndex;\n    const value = this.getSlice(start, endIndex - offset);\n    if (!this.htmlMode || this.options.recognizeCDATA) {\n      (_b = (_a2 = this.cbs).oncdatastart) === null || _b === void 0 ? void 0 : _b.call(_a2);\n      (_d = (_c = this.cbs).ontext) === null || _d === void 0 ? void 0 : _d.call(_c, value);\n      (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 ? void 0 : _f.call(_e);\n    } else {\n      (_h = (_g = this.cbs).oncomment) === null || _h === void 0 ? void 0 : _h.call(_g, `[CDATA[${value}]]`);\n      (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 ? void 0 : _k.call(_j);\n    }\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onend() {\n    var _a2, _b;\n    if (this.cbs.onclosetag) {\n      this.endIndex = this.startIndex;\n      for (let index2 = 0; index2 < this.stack.length; index2++) {\n        this.cbs.onclosetag(this.stack[index2], true);\n      }\n    }\n    (_b = (_a2 = this.cbs).onend) === null || _b === void 0 ? void 0 : _b.call(_a2);\n  }\n  /**\n   * Resets the parser to a blank state, ready to parse a new HTML document\n   */\n  reset() {\n    var _a2, _b, _c, _d;\n    (_b = (_a2 = this.cbs).onreset) === null || _b === void 0 ? void 0 : _b.call(_a2);\n    this.tokenizer.reset();\n    this.tagname = \"\";\n    this.attribname = \"\";\n    this.attribs = null;\n    this.stack.length = 0;\n    this.startIndex = 0;\n    this.endIndex = 0;\n    (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n    this.buffers.length = 0;\n    this.foreignContext.length = 0;\n    this.foreignContext.unshift(!this.htmlMode);\n    this.bufferOffset = 0;\n    this.writeIndex = 0;\n    this.ended = false;\n  }\n  /**\n   * Resets the parser, then parses a complete document and\n   * pushes it to the handler.\n   *\n   * @param data Document to parse.\n   */\n  parseComplete(data2) {\n    this.reset();\n    this.end(data2);\n  }\n  getSlice(start, end2) {\n    while (start - this.bufferOffset >= this.buffers[0].length) {\n      this.shiftBuffer();\n    }\n    let slice2 = this.buffers[0].slice(start - this.bufferOffset, end2 - this.bufferOffset);\n    while (end2 - this.bufferOffset > this.buffers[0].length) {\n      this.shiftBuffer();\n      slice2 += this.buffers[0].slice(0, end2 - this.bufferOffset);\n    }\n    return slice2;\n  }\n  shiftBuffer() {\n    this.bufferOffset += this.buffers[0].length;\n    this.writeIndex--;\n    this.buffers.shift();\n  }\n  /**\n   * Parses a chunk of data and calls the corresponding callbacks.\n   *\n   * @param chunk Chunk to parse.\n   */\n  write(chunk) {\n    var _a2, _b;\n    if (this.ended) {\n      (_b = (_a2 = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a2, new Error(\".write() after done!\"));\n      return;\n    }\n    this.buffers.push(chunk);\n    if (this.tokenizer.running) {\n      this.tokenizer.write(chunk);\n      this.writeIndex++;\n    }\n  }\n  /**\n   * Parses the end of the buffer and clears the stack, calls onend.\n   *\n   * @param chunk Optional final chunk to parse.\n   */\n  end(chunk) {\n    var _a2, _b;\n    if (this.ended) {\n      (_b = (_a2 = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a2, new Error(\".end() after done!\"));\n      return;\n    }\n    if (chunk)\n      this.write(chunk);\n    this.ended = true;\n    this.tokenizer.end();\n  }\n  /**\n   * Pauses parsing. The parser won't emit events until `resume` is called.\n   */\n  pause() {\n    this.tokenizer.pause();\n  }\n  /**\n   * Resumes parsing after `pause` was called.\n   */\n  resume() {\n    this.tokenizer.resume();\n    while (this.tokenizer.running && this.writeIndex < this.buffers.length) {\n      this.tokenizer.write(this.buffers[this.writeIndex++]);\n    }\n    if (this.ended)\n      this.tokenizer.end();\n  }\n  /**\n   * Alias of `write`, for backwards compatibility.\n   *\n   * @param chunk Chunk to parse.\n   * @deprecated\n   */\n  parseChunk(chunk) {\n    this.write(chunk);\n  }\n  /**\n   * Alias of `end`, for backwards compatibility.\n   *\n   * @param chunk Optional final chunk to parse.\n   * @deprecated\n   */\n  done(chunk) {\n    this.end(chunk);\n  }\n}\nfunction parseDocument(data2, options) {\n  const handler = new DomHandler(void 0, options);\n  new Parser(handler, options).end(data2);\n  return handler.root;\n}\nconst load = getLoad(getParse(parseDocument), render$1);\nvar Levels = /* @__PURE__ */ ((Levels2) => {\n  Levels2[Levels2[\"None\"] = 0] = \"None\";\n  Levels2[Levels2[\"H1\"] = 1] = \"H1\";\n  Levels2[Levels2[\"H2\"] = 2] = \"H2\";\n  Levels2[Levels2[\"H3\"] = 3] = \"H3\";\n  Levels2[Levels2[\"H4\"] = 4] = \"H4\";\n  Levels2[Levels2[\"H5\"] = 5] = \"H5\";\n  Levels2[Levels2[\"H6\"] = 6] = \"H6\";\n  Levels2[Levels2[\"Block\"] = 7] = \"Block\";\n  Levels2[Levels2[\"List\"] = 8] = \"List\";\n  Levels2[Levels2[\"ListItem\"] = 9] = \"ListItem\";\n  return Levels2;\n})(Levels || {});\nconst defaultSelectorRules = {\n  \"div,p\": ({ $node }) => ({\n    queue: $node.children()\n  }),\n  \"h1,h2,h3,h4,h5,h6\": ({ $node, getContent }) => ({\n    ...getContent($node.contents())\n  }),\n  \"ul,ol\": ({ $node }) => ({\n    queue: $node.children(),\n    nesting: true\n  }),\n  li: ({ $node, getContent }) => {\n    const queue = $node.children().filter(\"ul,ol\");\n    let content;\n    if ($node.contents().first().is(\"div,p\")) {\n      content = getContent($node.children().first());\n    } else {\n      let $contents = $node.contents();\n      const i = $contents.index(queue);\n      if (i >= 0) $contents = $contents.slice(0, i);\n      content = getContent($contents);\n    }\n    return {\n      queue,\n      nesting: true,\n      ...content\n    };\n  },\n  \"table,pre,p>img:only-child\": ({ $node, getContent }) => ({\n    ...getContent($node)\n  })\n};\nconst defaultOptions = {\n  selector: \"h1,h2,h3,h4,h5,h6,ul,ol,li,table,pre,p>img:only-child\",\n  selectorRules: defaultSelectorRules\n};\nconst MARKMAP_COMMENT_PREFIX = \"markmap: \";\nconst SELECTOR_HEADING = /^h[1-6]$/;\nconst SELECTOR_LIST = /^[uo]l$/;\nconst SELECTOR_LIST_ITEM = /^li$/;\nfunction getLevel(tagName) {\n  if (SELECTOR_HEADING.test(tagName)) return +tagName[1];\n  if (SELECTOR_LIST.test(tagName)) return 8;\n  if (SELECTOR_LIST_ITEM.test(tagName)) return 9;\n  return 7;\n}\nfunction parseHtml(html2, opts) {\n  const options = {\n    ...defaultOptions,\n    ...opts\n  };\n  const $ = load(html2);\n  let $root = $(\"body\");\n  if (!$root.length) $root = $.root();\n  let id = 0;\n  const rootNode = {\n    id,\n    tag: \"\",\n    html: \"\",\n    level: 0,\n    parent: 0,\n    childrenLevel: 0,\n    children: []\n  };\n  const headingStack = [];\n  let skippingHeading = 0;\n  checkNodes($root.children());\n  return rootNode;\n  function addChild(props) {\n    var _a2;\n    const { parent: parent2 } = props;\n    const node = {\n      id: ++id,\n      tag: props.tagName,\n      level: props.level,\n      html: props.html,\n      childrenLevel: 0,\n      children: props.nesting ? [] : void 0,\n      parent: parent2.id\n    };\n    if ((_a2 = props.comments) == null ? void 0 : _a2.length) {\n      node.comments = props.comments;\n    }\n    if (Object.keys(props.data || {}).length) {\n      node.data = props.data;\n    }\n    if (parent2.children) {\n      if (parent2.childrenLevel === 0 || parent2.childrenLevel > node.level) {\n        parent2.children = [];\n        parent2.childrenLevel = node.level;\n      }\n      if (parent2.childrenLevel === node.level) {\n        parent2.children.push(node);\n      }\n    }\n    return node;\n  }\n  function getCurrentHeading(level) {\n    let heading;\n    while ((heading = headingStack[headingStack.length - 1]) && heading.level >= level) {\n      headingStack.pop();\n    }\n    return heading || rootNode;\n  }\n  function getContent($node) {\n    var _a2;\n    const result = extractMagicComments($node);\n    const html22 = (_a2 = $.html(result.$node)) == null ? void 0 : _a2.trimEnd();\n    return { comments: result.comments, html: html22 };\n  }\n  function extractMagicComments($node) {\n    const comments = [];\n    $node = $node.filter((_, child) => {\n      if (child.type === \"comment\") {\n        const data2 = child.data.trim();\n        if (data2.startsWith(MARKMAP_COMMENT_PREFIX)) {\n          comments.push(data2.slice(MARKMAP_COMMENT_PREFIX.length).trim());\n          return false;\n        }\n      }\n      return true;\n    });\n    return { $node, comments };\n  }\n  function checkNodes($els, node) {\n    $els.each((_, child) => {\n      var _a2;\n      const $child = $(child);\n      const rule = (_a2 = Object.entries(options.selectorRules).find(\n        ([selector]) => $child.is(selector)\n      )) == null ? void 0 : _a2[1];\n      const result = rule == null ? void 0 : rule({ $node: $child, $, getContent });\n      if ((result == null ? void 0 : result.queue) && !result.nesting) {\n        checkNodes(result.queue, node);\n        return;\n      }\n      const level = getLevel(child.tagName);\n      if (!result) {\n        if (level <= 6) {\n          skippingHeading = level;\n        }\n        return;\n      }\n      if (skippingHeading > 0 && level > skippingHeading) return;\n      if (!$child.is(options.selector)) return;\n      skippingHeading = 0;\n      const isHeading = level <= 6;\n      let data2 = {\n        // If the child is an inline element and expected to be a separate node,\n        // data from the closest `<p>` should be included, e.g. `<p data-lines><img /></p>`\n        ...$child.closest(\"p\").data(),\n        ...$child.data()\n      };\n      let html22 = result.html || \"\";\n      if ($child.is(\"ol>li\") && (node == null ? void 0 : node.children)) {\n        const start = +($child.parent().attr(\"start\") || 1);\n        const listIndex = start + node.children.length;\n        html22 = `${listIndex}. ${html22}`;\n        data2 = {\n          ...data2,\n          listIndex\n        };\n      }\n      const childNode = addChild({\n        parent: node || getCurrentHeading(level),\n        nesting: !!result.queue || isHeading,\n        tagName: child.tagName,\n        level,\n        html: html22,\n        comments: result.comments,\n        data: data2\n      });\n      if (isHeading) headingStack.push(childNode);\n      if (result.queue) checkNodes(result.queue, childNode);\n    });\n  }\n}\nfunction convertNode(htmlRoot) {\n  return walkTree(htmlRoot, (htmlNode, next2) => {\n    const node = {\n      content: htmlNode.html,\n      children: next2() || []\n    };\n    if (htmlNode.data) {\n      node.payload = {\n        tag: htmlNode.tag,\n        ...htmlNode.data\n      };\n    }\n    if (htmlNode.comments) {\n      if (htmlNode.comments.includes(\"foldAll\")) {\n        node.payload = { ...node.payload, fold: 2 };\n      } else if (htmlNode.comments.includes(\"fold\")) {\n        node.payload = { ...node.payload, fold: 1 };\n      }\n    }\n    return node;\n  });\n}\nfunction buildTree(html2, opts) {\n  const htmlRoot = parseHtml(html2, opts);\n  return convertNode(htmlRoot);\n}\nexport {\n  Levels,\n  buildTree,\n  convertNode,\n  defaultOptions,\n  parseHtml\n};\n", "// Utilities\n//\n\nimport * as mdurl from 'mdurl'\nimport * as ucmicro from 'uc.micro'\nimport { decodeHTML } from 'entities'\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\n\nfunction isString (obj) { return _class(obj) === '[object String]' }\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction has (object, key) {\n  return _hasOwnProperty.call(object, key)\n}\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object')\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt (src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1))\n}\n\nfunction isValidEntityCode (c) {\n  /* eslint no-bitwise:0 */\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false }\n  if (c === 0x0B) { return false }\n  if (c >= 0x0E && c <= 0x1F) { return false }\n  if (c >= 0x7F && c <= 0x9F) { return false }\n  // out of range\n  if (c > 0x10FFFF) { return false }\n  return true\n}\n\nfunction fromCodePoint (c) {\n  /* eslint no-bitwise:0 */\n  if (c > 0xffff) {\n    c -= 0x10000\n    const surrogate1 = 0xd800 + (c >> 10)\n    const surrogate2 = 0xdc00 + (c & 0x3ff)\n\n    return String.fromCharCode(surrogate1, surrogate2)\n  }\n  return String.fromCharCode(c)\n}\n\nconst UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g\nconst ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi\nconst UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi')\n\nconst DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i\n\nfunction replaceEntityPattern (match, name) {\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    const code = name[1].toLowerCase() === 'x'\n      ? parseInt(name.slice(2), 16)\n      : parseInt(name.slice(1), 10)\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code)\n    }\n\n    return match\n  }\n\n  const decoded = decodeHTML(match)\n  if (decoded !== match) {\n    return decoded\n  }\n\n  return match\n}\n\n/* function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n} */\n\nfunction unescapeMd (str) {\n  if (str.indexOf('\\\\') < 0) { return str }\n  return str.replace(UNESCAPE_MD_RE, '$1')\n}\n\nfunction unescapeAll (str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped }\n    return replaceEntityPattern(match, entity)\n  })\n}\n\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n}\n\nfunction replaceUnsafeChar (ch) {\n  return HTML_REPLACEMENTS[ch]\n}\n\nfunction escapeHtml (str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar)\n  }\n  return str\n}\n\nconst REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g\n\nfunction escapeRE (str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&')\n}\n\nfunction isSpace (code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true\n  }\n  return false\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace (code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true\n  }\n  return false\n}\n\n/* eslint-disable max-len */\n\n// Currently without astral characters support.\nfunction isPunctChar (ch) {\n  return ucmicro.P.test(ch) || ucmicro.S.test(ch)\n}\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct (ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference (str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ')\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß')\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase()\n}\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nconst lib = { mdurl, ucmicro }\n\nexport {\n  lib,\n  assign,\n  isString,\n  has,\n  unescapeMd,\n  unescapeAll,\n  isValidEntityCode,\n  fromCodePoint,\n  escapeHtml,\n  arrayReplaceAt,\n  isSpace,\n  isWhiteSpace,\n  isMdAsciiPunct,\n  isPunctChar,\n  escapeRE,\n  normalizeReference\n}\n", "import decode from './lib/decode.mjs'\nimport encode from './lib/encode.mjs'\nimport format from './lib/format.mjs'\nimport parse from './lib/parse.mjs'\n\nexport {\n  decode,\n  encode,\n  format,\n  parse\n}\n", "/* eslint-disable no-bitwise */\n\nconst decodeCache = {}\n\nfunction getDecodeCache (exclude) {\n  let cache = decodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = decodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n    cache.push(ch)\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    const ch = exclude.charCodeAt(i)\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2)\n  }\n\n  return cache\n}\n\n// Decode percent-encoded string.\n//\nfunction decode (string, exclude) {\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars\n  }\n\n  const cache = getDecodeCache(exclude)\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    let result = ''\n\n    for (let i = 0, l = seq.length; i < l; i += 3) {\n      const b1 = parseInt(seq.slice(i + 1, i + 3), 16)\n\n      if (b1 < 0x80) {\n        result += cache[b1]\n        continue\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n\n        if ((b2 & 0xC0) === 0x80) {\n          const chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F)\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 3\n          continue\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          const chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F)\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 6\n          continue\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n        const b4 = parseInt(seq.slice(i + 10, i + 12), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          let chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F)\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd'\n          } else {\n            chr -= 0x10000\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF))\n          }\n\n          i += 9\n          continue\n        }\n      }\n\n      result += '\\ufffd'\n    }\n\n    return result\n  })\n}\n\ndecode.defaultChars = ';/?:@&=+$,#'\ndecode.componentChars = ''\n\nexport default decode\n", "const encodeCache = {}\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache (exclude) {\n  let cache = encodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = encodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch)\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2))\n    }\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i]\n  }\n\n  return cache\n}\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode (string, exclude, keepEscaped) {\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude\n    exclude = encode.defaultChars\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true\n  }\n\n  const cache = getEncodeCache(exclude)\n  let result = ''\n\n  for (let i = 0, l = string.length; i < l; i++) {\n    const code = string.charCodeAt(i)\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3)\n        i += 2\n        continue\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code]\n      continue\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        const nextCode = string.charCodeAt(i + 1)\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1])\n          i++\n          continue\n        }\n      }\n      result += '%EF%BF%BD'\n      continue\n    }\n\n    result += encodeURIComponent(string[i])\n  }\n\n  return result\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\"\nencode.componentChars = \"-_.!~*'()\"\n\nexport default encode\n", "export default function format (url) {\n  let result = ''\n\n  result += url.protocol || ''\n  result += url.slashes ? '//' : ''\n  result += url.auth ? url.auth + '@' : ''\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']'\n  } else {\n    result += url.hostname || ''\n  }\n\n  result += url.port ? ':' + url.port : ''\n  result += url.pathname || ''\n  result += url.search || ''\n  result += url.hash || ''\n\n  return result\n};\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url () {\n  this.protocol = null\n  this.slashes = null\n  this.auth = null\n  this.port = null\n  this.hostname = null\n  this.hash = null\n  this.search = null\n  this.pathname = null\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nconst protocolPattern = /^([a-z0-9.+-]+:)/i\nconst portPattern = /:[0-9]*$/\n\n// Special case for a simple path URL\n/* eslint-disable-next-line no-useless-escape */\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/\n\n// RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\nconst delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t']\n\n// RFC 2396: characters not allowed for various reasons.\nconst unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims)\n\n// Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nconst autoEscape = ['\\''].concat(unwise)\n// Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nconst nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape)\nconst hostEndingChars = ['/', '?', '#']\nconst hostnameMaxLen = 255\nconst hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/\nconst hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/\n// protocols that can allow \"unsafe\" and \"unwise\" chars.\n// protocols that never have a hostname.\nconst hostlessProtocol = {\n  javascript: true,\n  'javascript:': true\n}\n// protocols that always contain a // bit.\nconst slashedProtocol = {\n  http: true,\n  https: true,\n  ftp: true,\n  gopher: true,\n  file: true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n}\n\nfunction urlParse (url, slashesDenoteHost) {\n  if (url && url instanceof Url) return url\n\n  const u = new Url()\n  u.parse(url, slashesDenoteHost)\n  return u\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  let lowerProto, hec, slashes\n  let rest = url\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim()\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    const simplePath = simplePathPattern.exec(rest)\n    if (simplePath) {\n      this.pathname = simplePath[1]\n      if (simplePath[2]) {\n        this.search = simplePath[2]\n      }\n      return this\n    }\n  }\n\n  let proto = protocolPattern.exec(rest)\n  if (proto) {\n    proto = proto[0]\n    lowerProto = proto.toLowerCase()\n    this.protocol = proto\n    rest = rest.substr(proto.length)\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  /* eslint-disable-next-line no-useless-escape */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//'\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2)\n      this.slashes = true\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    let hostEnd = -1\n    for (let i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    let auth, atSign\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@')\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd)\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign)\n      rest = rest.slice(atSign + 1)\n      this.auth = auth\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1\n    for (let i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd-- }\n    const host = rest.slice(0, hostEnd)\n    rest = rest.slice(hostEnd)\n\n    // pull out port.\n    this.parseHost(host)\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || ''\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    const ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']'\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      const hostparts = this.hostname.split(/\\./)\n      for (let i = 0, l = hostparts.length; i < l; i++) {\n        const part = hostparts[i]\n        if (!part) { continue }\n        if (!part.match(hostnamePartPattern)) {\n          let newpart = ''\n          for (let j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x'\n            } else {\n              newpart += part[j]\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            const validParts = hostparts.slice(0, i)\n            const notHost = hostparts.slice(i + 1)\n            const bit = part.match(hostnamePartStart)\n            if (bit) {\n              validParts.push(bit[1])\n              notHost.unshift(bit[2])\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest\n            }\n            this.hostname = validParts.join('.')\n            break\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = ''\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2)\n    }\n  }\n\n  // chop off from the tail first.\n  const hash = rest.indexOf('#')\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash)\n    rest = rest.slice(0, hash)\n  }\n  const qm = rest.indexOf('?')\n  if (qm !== -1) {\n    this.search = rest.substr(qm)\n    rest = rest.slice(0, qm)\n  }\n  if (rest) { this.pathname = rest }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = ''\n  }\n\n  return this\n}\n\nUrl.prototype.parseHost = function (host) {\n  let port = portPattern.exec(host)\n  if (port) {\n    port = port[0]\n    if (port !== ':') {\n      this.port = port.substr(1)\n    }\n    host = host.substr(0, host.length - port.length)\n  }\n  if (host) { this.hostname = host }\n}\n\nexport default urlParse\n", "import Any from './properties/Any/regex.mjs';\nimport Cc  from './categories/Cc/regex.mjs';\nimport Cf  from './categories/Cf/regex.mjs';\nimport P   from './categories/P/regex.mjs';\nimport S   from './categories/S/regex.mjs';\nimport Z   from './categories/Z/regex.mjs';\n\nexport { Any, Cc, Cf, P, S, Z };\n", "export default /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/", "export default /[\\0-\\x1F\\x7F-\\x9F]/", "export default /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u0890\\u0891\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC3F]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/", "export default /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2\\uDF00-\\uDF09]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDF43-\\uDF4F\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/", "export default /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u0888\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20C0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFF\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u31EF\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC2\\uFD40-\\uFD4F\\uFDCF\\uFDFC-\\uFDFF\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEDC-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF76\\uDF7B-\\uDFD9\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC5\\uDECE-\\uDEDB\\uDEE0-\\uDEE8\\uDEF0-\\uDEF8\\uDF00-\\uDF92\\uDF94-\\uDFCA]/", "export default /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/", null, null, null, null, null, null, null, "// Just a shortcut for bulk export\n\nimport parseLinkLabel from './parse_link_label.mjs'\nimport parseLinkDestination from './parse_link_destination.mjs'\nimport parseLinkTitle from './parse_link_title.mjs'\n\nexport {\n  parseLinkLabel,\n  parseLinkDestination,\n  parseLinkTitle\n}\n", "// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n\nexport default function parseLinkLabel (state, start, disableNested) {\n  let level, found, marker, prevPos\n\n  const max = state.posMax\n  const oldPos = state.pos\n\n  state.pos = start + 1\n  level = 1\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos)\n    if (marker === 0x5D /* ] */) {\n      level--\n      if (level === 0) {\n        found = true\n        break\n      }\n    }\n\n    prevPos = state.pos\n    state.md.inline.skipToken(state)\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++\n      } else if (disableNested) {\n        state.pos = oldPos\n        return -1\n      }\n    }\n  }\n\n  let labelEnd = -1\n\n  if (found) {\n    labelEnd = state.pos\n  }\n\n  // restore old state\n  state.pos = oldPos\n\n  return labelEnd\n}\n", "// Parse link destination\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\nexport default function parseLinkDestination (str, start, max) {\n  let code\n  let pos = start\n\n  const result = {\n    ok: false,\n    pos: 0,\n    str: ''\n  }\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++\n    while (pos < max) {\n      code = str.charCodeAt(pos)\n      if (code === 0x0A /* \\n */) { return result }\n      if (code === 0x3C /* < */) { return result }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1\n        result.str = unescapeAll(str.slice(start + 1, pos))\n        result.ok = true\n        return result\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2\n        continue\n      }\n\n      pos++\n    }\n\n    // no closing '>'\n    return result\n  }\n\n  // this should be ... } else { ... branch\n\n  let level = 0\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n\n    if (code === 0x20) { break }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break }\n      pos += 2\n      continue\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++\n      if (level > 32) { return result }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break }\n      level--\n    }\n\n    pos++\n  }\n\n  if (start === pos) { return result }\n  if (level !== 0) { return result }\n\n  result.str = unescapeAll(str.slice(start, pos))\n  result.pos = pos\n  result.ok = true\n  return result\n}\n", "// Parse link title\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\n// Parse link title within `str` in [start, max] range,\n// or continue previous parsing if `prev_state` is defined (equal to result of last execution).\n//\nexport default function parseLinkTitle (str, start, max, prev_state) {\n  let code\n  let pos = start\n\n  const state = {\n    // if `true`, this is a valid link title\n    ok: false,\n    // if `true`, this link can be continued on the next line\n    can_continue: false,\n    // if `ok`, it's the position of the first character after the closing marker\n    pos: 0,\n    // if `ok`, it's the unescaped title\n    str: '',\n    // expected closing marker character code\n    marker: 0\n  }\n\n  if (prev_state) {\n    // this is a continuation of a previous parseLinkTitle call on the next line,\n    // used in reference links only\n    state.str = prev_state.str\n    state.marker = prev_state.marker\n  } else {\n    if (pos >= max) { return state }\n\n    let marker = str.charCodeAt(pos)\n    if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return state }\n\n    start++\n    pos++\n\n    // if opening marker is \"(\", switch it to closing marker \")\"\n    if (marker === 0x28) { marker = 0x29 }\n\n    state.marker = marker\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n    if (code === state.marker) {\n      state.pos = pos + 1\n      state.str += unescapeAll(str.slice(start, pos))\n      state.ok = true\n      return state\n    } else if (code === 0x28 /* ( */ && state.marker === 0x29 /* ) */) {\n      return state\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++\n    }\n\n    pos++\n  }\n\n  // no closing marker found, but this link title may continue on the next line (for references)\n  state.can_continue = true\n  state.str += unescapeAll(str.slice(start, pos))\n  return state\n}\n", "/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n\nimport { assign, unescapeAll, escapeHtml } from './common/utils.mjs'\n\nconst default_rules = {}\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(token.content) +\n          '</code>'\n}\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n'\n}\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n  const info = token.info ? unescapeAll(token.info).trim() : ''\n  let langName = ''\n  let langAttrs = ''\n\n  if (info) {\n    const arr = info.split(/(\\s+)/g)\n    langName = arr[0]\n    langAttrs = arr.slice(2).join('')\n  }\n\n  let highlighted\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content)\n  } else {\n    highlighted = escapeHtml(token.content)\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n'\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    const i = token.attrIndex('class')\n    const tmpAttrs = token.attrs ? token.attrs.slice() : []\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName])\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice()\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName\n    }\n\n    // Fake token just to render attributes\n    const tmpToken = {\n      attrs: tmpAttrs\n    }\n\n    return `<pre><code${slf.renderAttrs(tmpToken)}>${highlighted}</code></pre>\\n`\n  }\n\n  return `<pre><code${slf.renderAttrs(token)}>${highlighted}</code></pre>\\n`\n}\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env)\n\n  return slf.renderToken(tokens, idx, options)\n}\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n'\n}\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n'\n}\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content)\n}\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer () {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules)\n}\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs (token) {\n  let i, l, result\n\n  if (!token.attrs) { return '' }\n\n  result = ''\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"'\n  }\n\n  return result\n}\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken (tokens, idx, options) {\n  const token = tokens[idx]\n  let result = ''\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return ''\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n'\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token)\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /'\n  }\n\n  // Check if we need to add a newline after this tag\n  let needLf = false\n  if (token.block) {\n    needLf = true\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        const nextToken = tokens[idx + 1]\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>'\n\n  return result\n}\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options)\n    }\n  }\n\n  return result\n}\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  let result = ''\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    switch (tokens[i].type) {\n      case 'text':\n        result += tokens[i].content\n        break\n      case 'image':\n        result += this.renderInlineAsText(tokens[i].children, options, env)\n        break\n      case 'html_inline':\n      case 'html_block':\n        result += tokens[i].content\n        break\n      case 'softbreak':\n      case 'hardbreak':\n        result += '\\n'\n        break\n      default:\n        // all other tokens are skipped\n    }\n  }\n\n  return result\n}\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env)\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options, env)\n    }\n  }\n\n  return result\n}\n\nexport default Renderer\n", "/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n\n/**\n * new Ruler()\n **/\nfunction Ruler () {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null\n}\n\n// Helper methods, should not be used directly\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (let i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i\n    }\n  }\n  return -1\n}\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  const self = this\n  const chains = ['']\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName)\n      }\n    })\n  })\n\n  self.__cache__ = {}\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = []\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return }\n\n      self.__cache__[chain].push(rule.fn)\n    })\n  })\n}\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  const index = this.__find__(name)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name) }\n\n  this.__rules__[index].fn = fn\n  this.__rules__[index].alt = opt.alt || []\n  this.__cache__ = null\n}\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  const index = this.__find__(beforeName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName) }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  const index = this.__find__(afterName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName) }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  const opt = options || {}\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = true\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false })\n\n  this.enable(list, ignoreInvalid)\n}\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = false\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__()\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || []\n}\n\nexport default Ruler\n", "// Token class\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token (type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = ''\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = ''\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = ''\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false\n}\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex (name) {\n  if (!this.attrs) { return -1 }\n\n  const attrs = this.attrs\n\n  for (let i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i }\n  }\n  return -1\n}\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush (attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData)\n  } else {\n    this.attrs = [attrData]\n  }\n}\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet (name, value) {\n  const idx = this.attrIndex(name)\n  const attrData = [name, value]\n\n  if (idx < 0) {\n    this.attrPush(attrData)\n  } else {\n    this.attrs[idx] = attrData\n  }\n}\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet (name) {\n  const idx = this.attrIndex(name)\n  let value = null\n  if (idx >= 0) {\n    value = this.attrs[idx][1]\n  }\n  return value\n}\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin (name, value) {\n  const idx = this.attrIndex(name)\n\n  if (idx < 0) {\n    this.attrPush([name, value])\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value\n  }\n}\n\nexport default Token\n", "// Core state object\n//\n\nimport Token from '../token.mjs'\n\nfunction StateCore (src, md, env) {\n  this.src = src\n  this.env = env\n  this.tokens = []\n  this.inlineMode = false\n  this.md = md // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token\n\nexport default StateCore\n", "// Normalize input string\n\n// https://spec.commonmark.org/0.29/#line-ending\nconst NEWLINES_RE  = /\\r\\n?|\\n/g\nconst NULL_RE      = /\\0/g\n\nexport default function normalize (state) {\n  let str\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n')\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD')\n\n  state.src = str\n}\n", "export default function block (state) {\n  let token\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0)\n    token.content  = state.src\n    token.map      = [0, 1]\n    token.children = []\n    state.tokens.push(token)\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens)\n  }\n}\n", "export default function inline (state) {\n  const tokens = state.tokens\n\n  // Parse inlines\n  for (let i = 0, l = tokens.length; i < l; i++) {\n    const tok = tokens[i]\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children)\n    }\n  }\n}\n", "// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n\nimport { arrayReplaceAt } from '../common/utils.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nexport default function linkify (state) {\n  const blockTokens = state.tokens\n\n  if (!state.md.options.linkify) { return }\n\n  for (let j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue\n    }\n\n    let tokens = blockTokens[j].children\n\n    let htmlLinkLevel = 0\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      const currentToken = tokens[i]\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--\n        }\n        continue\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++\n        }\n      }\n      if (htmlLinkLevel > 0) { continue }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        const text = currentToken.content\n        let links = state.md.linkify.match(text)\n\n        // Now split string to nodes\n        const nodes = []\n        let level = currentToken.level\n        let lastPos = 0\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1)\n        }\n\n        for (let ln = 0; ln < links.length; ln++) {\n          const url = links[ln].url\n          const fullUrl = state.md.normalizeLink(url)\n          if (!state.md.validateLink(fullUrl)) { continue }\n\n          let urlText = links[ln].text\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '')\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '')\n          } else {\n            urlText = state.md.normalizeLinkText(urlText)\n          }\n\n          const pos = links[ln].index\n\n          if (pos > lastPos) {\n            const token   = new state.Token('text', '', 0)\n            token.content = text.slice(lastPos, pos)\n            token.level   = level\n            nodes.push(token)\n          }\n\n          const token_o   = new state.Token('link_open', 'a', 1)\n          token_o.attrs   = [['href', fullUrl]]\n          token_o.level   = level++\n          token_o.markup  = 'linkify'\n          token_o.info    = 'auto'\n          nodes.push(token_o)\n\n          const token_t   = new state.Token('text', '', 0)\n          token_t.content = urlText\n          token_t.level   = level\n          nodes.push(token_t)\n\n          const token_c   = new state.Token('link_close', 'a', -1)\n          token_c.level   = --level\n          token_c.markup  = 'linkify'\n          token_c.info    = 'auto'\n          nodes.push(token_c)\n\n          lastPos = links[ln].lastIndex\n        }\n        if (lastPos < text.length) {\n          const token   = new state.Token('text', '', 0)\n          token.content = text.slice(lastPos)\n          token.level   = level\n          nodes.push(token)\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes)\n      }\n    }\n  }\n}\n", "// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nconst RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nconst SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i\n\nconst SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig\nconst SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n}\n\nfunction replaceFn (match, name) {\n  return SCOPED_ABBR[name.toLowerCase()]\n}\n\nfunction replace_scoped (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn)\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nfunction replace_rare (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013')\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nexport default function replace (state) {\n  let blkIdx\n\n  if (!state.md.options.typographer) { return }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') { continue }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children)\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children)\n    }\n  }\n}\n", "// Convert straight quotation marks to typographic ones\n//\n\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nconst QUOTE_TEST_RE = /['\"]/\nconst QUOTE_RE = /['\"]/g\nconst APOSTROPHE = '\\u2019' /* ’ */\n\nfunction replaceAt (str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1)\n}\n\nfunction process_inlines (tokens, state) {\n  let j\n\n  const stack = []\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n\n    const thisLevel = tokens[i].level\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break }\n    }\n    stack.length = j + 1\n\n    if (token.type !== 'text') { continue }\n\n    let text = token.content\n    let pos = 0\n    let max = text.length\n\n    /* eslint no-labels:0,block-scoped-var:0 */\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos\n      const t = QUOTE_RE.exec(text)\n      if (!t) { break }\n\n      let canOpen = true\n      let canClose = true\n      pos = t.index + 1\n      const isSingle = (t[0] === \"'\")\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      let lastChar = 0x20\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1)\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // lastChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1)\n          break\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      let nextChar = 0x20\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos)\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // nextChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0)\n          break\n        }\n      }\n\n      const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n      const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n      const isLastWhiteSpace = isWhiteSpace(lastChar)\n      const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n      if (isNextWhiteSpace) {\n        canOpen = false\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar\n        canClose = isNextPunctChar\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE)\n        }\n        continue\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          let item = stack[j]\n          if (stack[j].level < thisLevel) { break }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j]\n\n            let openQuote\n            let closeQuote\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2]\n              closeQuote = state.md.options.quotes[3]\n            } else {\n              openQuote = state.md.options.quotes[0]\n              closeQuote = state.md.options.quotes[1]\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote)\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote)\n\n            pos += closeQuote.length - 1\n            if (item.token === i) { pos += openQuote.length - 1 }\n\n            text = token.content\n            max = text.length\n\n            stack.length = j\n            continue OUTER\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        })\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE)\n      }\n    }\n  }\n}\n\nexport default function smartquotes (state) {\n  /* eslint max-depth:0 */\n  if (!state.md.options.typographer) { return }\n\n  for (let blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state)\n  }\n}\n", "// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n\nexport default function text_join (state) {\n  let curr, last\n  const blockTokens = state.tokens\n  const l = blockTokens.length\n\n  for (let j = 0; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue\n\n    const tokens = blockTokens[j].children\n    const max = tokens.length\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text'\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr] }\n\n        last++\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last\n    }\n  }\n}\n", "/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateCore from './rules_core/state_core.mjs'\n\nimport r_normalize from './rules_core/normalize.mjs'\nimport r_block from './rules_core/block.mjs'\nimport r_inline from './rules_core/inline.mjs'\nimport r_linkify from './rules_core/linkify.mjs'\nimport r_replacements from './rules_core/replacements.mjs'\nimport r_smartquotes from './rules_core/smartquotes.mjs'\nimport r_text_join from './rules_core/text_join.mjs'\n\nconst _rules = [\n  ['normalize',      r_normalize],\n  ['block',          r_block],\n  ['inline',         r_inline],\n  ['linkify',        r_linkify],\n  ['replacements',   r_replacements],\n  ['smartquotes',    r_smartquotes],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  ['text_join',      r_text_join]\n]\n\n/**\n * new Core()\n **/\nfunction Core () {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n}\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  const rules = this.ruler.getRules('')\n\n  for (let i = 0, l = rules.length; i < l; i++) {\n    rules[i](state)\n  }\n}\n\nCore.prototype.State = StateCore\n\nexport default Core\n", "// Parser state class\n\nimport Token from '../token.mjs'\nimport { isSpace } from '../common/utils.mjs'\n\nfunction StateBlock (src, md, env, tokens) {\n  this.src = src\n\n  // link to parser instance\n  this.md     = md\n\n  this.env = env\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens\n\n  this.bMarks = []  // line begin offsets for fast jumps\n  this.eMarks = []  // line end offsets for fast jumps\n  this.tShift = []  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = []  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = []\n\n  // block parser variables\n\n  // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n  this.blkIndent  = 0\n  this.line       = 0 // line index in src\n  this.lineMax    = 0 // lines count\n  this.tight      = false  // loose/tight mode for lists\n  this.ddIndent   = -1 // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1 // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root'\n\n  this.level = 0\n\n  // Create caches\n  // Generate markers.\n  const s = this.src\n\n  for (let start = 0, pos = 0, indent = 0, offset = 0, len = s.length, indent_found = false; pos < len; pos++) {\n    const ch = s.charCodeAt(pos)\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4\n        } else {\n          offset++\n        }\n        continue\n      } else {\n        indent_found = true\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++ }\n      this.bMarks.push(start)\n      this.eMarks.push(pos)\n      this.tShift.push(indent)\n      this.sCount.push(offset)\n      this.bsCount.push(0)\n\n      indent_found = false\n      indent = 0\n      offset = 0\n      start = pos + 1\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length)\n  this.eMarks.push(s.length)\n  this.tShift.push(0)\n  this.sCount.push(0)\n  this.bsCount.push(0)\n\n  this.lineMax = this.bMarks.length - 1 // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  const token = new Token(type, tag, nesting)\n  token.block = true\n\n  if (nesting < 0) this.level-- // closing tag\n  token.level = this.level\n  if (nesting > 0) this.level++ // opening tag\n\n  this.tokens.push(token)\n  return token\n}\n\nStateBlock.prototype.isEmpty = function isEmpty (line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line]\n}\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines (from) {\n  for (let max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break\n    }\n  }\n  return from\n}\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces (pos) {\n  for (let max = this.src.length; pos < max; pos++) {\n    const ch = this.src.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n  }\n  return pos\n}\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack (pos, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1 }\n  }\n  return pos\n}\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars (pos, code) {\n  for (let max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break }\n  }\n  return pos\n}\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack (pos, code, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1 }\n  }\n  return pos\n}\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines (begin, end, indent, keepLastLF) {\n  if (begin >= end) {\n    return ''\n  }\n\n  const queue = new Array(end - begin)\n\n  for (let i = 0, line = begin; line < end; line++, i++) {\n    let lineIndent = 0\n    const lineStart = this.bMarks[line]\n    let first = lineStart\n    let last\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1\n    } else {\n      last = this.eMarks[line]\n    }\n\n    while (first < last && lineIndent < indent) {\n      const ch = this.src.charCodeAt(first)\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4\n        } else {\n          lineIndent++\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++\n      } else {\n        break\n      }\n\n      first++\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last)\n    } else {\n      queue[i] = this.src.slice(first, last)\n    }\n  }\n\n  return queue.join('')\n}\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token\n\nexport default StateBlock\n", "// GFM table, https://github.github.com/gfm/#tables-extension-\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Limit the amount of empty autocompleted cells in a table,\n// see https://github.com/markdown-it/markdown-it/issues/1000,\n//\n// Both pulldown-cmark and commonmark-hs limit the number of cells this way to ~200k.\n// We set it to 65k, which can expand user input by a factor of x370\n// (256x256 square is 1.8kB expanded into 650kB).\nconst MAX_AUTOCOMPLETED_CELLS = 0x10000\n\nfunction getLine (state, line) {\n  const pos = state.bMarks[line] + state.tShift[line]\n  const max = state.eMarks[line]\n\n  return state.src.slice(pos, max)\n}\n\nfunction escapedSplit (str) {\n  const result = []\n  const max = str.length\n\n  let pos = 0\n  let ch = str.charCodeAt(pos)\n  let isEscaped = false\n  let lastPos = 0\n  let current = ''\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos))\n        current = ''\n        lastPos = pos + 1\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1)\n        lastPos = pos\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */)\n    pos++\n\n    ch = str.charCodeAt(pos)\n  }\n\n  result.push(current + str.substring(lastPos))\n\n  return result\n}\n\nexport default function table (state, startLine, endLine, silent) {\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false }\n\n  let nextLine = startLine + 1\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const firstCh = state.src.charCodeAt(pos++)\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false }\n\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const secondCh = state.src.charCodeAt(pos++)\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false }\n\n  while (pos < state.eMarks[nextLine]) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false }\n\n    pos++\n  }\n\n  let lineText = getLine(state, startLine + 1)\n  let columns = lineText.split('|')\n  const aligns = []\n  for (let i = 0; i < columns.length; i++) {\n    const t = columns[i].trim()\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue\n      } else {\n        return false\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right')\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left')\n    } else {\n      aligns.push('')\n    }\n  }\n\n  lineText = getLine(state, startLine).trim()\n  if (lineText.indexOf('|') === -1) { return false }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n  columns = escapedSplit(lineText)\n  if (columns.length && columns[0] === '') columns.shift()\n  if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  const columnCount = columns.length\n  if (columnCount === 0 || columnCount !== aligns.length) { return false }\n\n  if (silent) { return true }\n\n  const oldParentType = state.parentType\n  state.parentType = 'table'\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const token_to = state.push('table_open', 'table', 1)\n  const tableLines = [startLine, 0]\n  token_to.map = tableLines\n\n  const token_tho = state.push('thead_open', 'thead', 1)\n  token_tho.map = [startLine, startLine + 1]\n\n  const token_htro = state.push('tr_open', 'tr', 1)\n  token_htro.map = [startLine, startLine + 1]\n\n  for (let i = 0; i < columns.length; i++) {\n    const token_ho = state.push('th_open', 'th', 1)\n    if (aligns[i]) {\n      token_ho.attrs  = [['style', 'text-align:' + aligns[i]]]\n    }\n\n    const token_il = state.push('inline', '', 0)\n    token_il.content  = columns[i].trim()\n    token_il.children = []\n\n    state.push('th_close', 'th', -1)\n  }\n\n  state.push('tr_close', 'tr', -1)\n  state.push('thead_close', 'thead', -1)\n\n  let tbodyLines\n  let autocompletedCells = 0\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) { break }\n    lineText = getLine(state, nextLine).trim()\n    if (!lineText) { break }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n    columns = escapedSplit(lineText)\n    if (columns.length && columns[0] === '') columns.shift()\n    if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n    // note: autocomplete count can be negative if user specifies more columns than header,\n    // but that does not affect intended use (which is limiting expansion)\n    autocompletedCells += columnCount - columns.length\n    if (autocompletedCells > MAX_AUTOCOMPLETED_CELLS) { break }\n\n    if (nextLine === startLine + 2) {\n      const token_tbo = state.push('tbody_open', 'tbody', 1)\n      token_tbo.map = tbodyLines = [startLine + 2, 0]\n    }\n\n    const token_tro = state.push('tr_open', 'tr', 1)\n    token_tro.map = [nextLine, nextLine + 1]\n\n    for (let i = 0; i < columnCount; i++) {\n      const token_tdo = state.push('td_open', 'td', 1)\n      if (aligns[i]) {\n        token_tdo.attrs  = [['style', 'text-align:' + aligns[i]]]\n      }\n\n      const token_il = state.push('inline', '', 0)\n      token_il.content  = columns[i] ? columns[i].trim() : ''\n      token_il.children = []\n\n      state.push('td_close', 'td', -1)\n    }\n    state.push('tr_close', 'tr', -1)\n  }\n\n  if (tbodyLines) {\n    state.push('tbody_close', 'tbody', -1)\n    tbodyLines[1] = nextLine\n  }\n\n  state.push('table_close', 'table', -1)\n  tableLines[1] = nextLine\n\n  state.parentType = oldParentType\n  state.line = nextLine\n  return true\n}\n", "// Code block (4 spaces padded)\n\nexport default function code (state, startLine, endLine/*, silent */) {\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false }\n\n  let nextLine = startLine + 1\n  let last = nextLine\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++\n      continue\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++\n      last = nextLine\n      continue\n    }\n    break\n  }\n\n  state.line = last\n\n  const token   = state.push('code_block', 'code', 0)\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n'\n  token.map     = [startLine, state.line]\n\n  return true\n}\n", "// fences (``` lang, ~~~ lang)\n\nexport default function fence (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (pos + 3 > max) { return false }\n\n  const marker = state.src.charCodeAt(pos)\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false\n  }\n\n  // scan marker length\n  let mem = pos\n  pos = state.skipChars(pos, marker)\n\n  let len = pos - mem\n\n  if (len < 3) { return false }\n\n  const markup = state.src.slice(mem, pos)\n  const params = state.src.slice(pos, max)\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true }\n\n  // search end of block\n  let nextLine = startLine\n  let haveEndMarker = false\n\n  for (;;) {\n    nextLine++\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue\n    }\n\n    pos = state.skipChars(pos, marker)\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos)\n\n    if (pos < max) { continue }\n\n    haveEndMarker = true\n    // found!\n    break\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine]\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0)\n\n  const token   = state.push('fence', 'code', 0)\n  token.info    = params\n  token.content = state.getLines(startLine + 1, nextLine, len, true)\n  token.markup  = markup\n  token.map     = [startLine, state.line]\n\n  return true\n}\n", "// Block quotes\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function blockquote (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  const oldLineMax = state.lineMax\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E/* > */) { return false }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true }\n\n  const oldBMarks  = []\n  const oldBSCount = []\n  const oldSCount  = []\n  const oldTShift  = []\n\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const oldParentType = state.parentType\n  state.parentType = 'blockquote'\n  let lastLineEmpty = false\n  let nextLine\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    const isOutdented = state.sCount[nextLine] < state.blkIndent\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      let initial = state.sCount[nextLine] + 1\n      let spaceAfterMarker\n      let adjustTab\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++\n        initial++\n        adjustTab = false\n        spaceAfterMarker = true\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true\n\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++\n          initial++\n          adjustTab = false\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true\n        }\n      } else {\n        spaceAfterMarker = false\n      }\n\n      let offset = initial\n      oldBMarks.push(state.bMarks[nextLine])\n      state.bMarks[nextLine] = pos\n\n      while (pos < max) {\n        const ch = state.src.charCodeAt(pos)\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4\n          } else {\n            offset++\n          }\n        } else {\n          break\n        }\n\n        pos++\n      }\n\n      lastLineEmpty = pos >= max\n\n      oldBSCount.push(state.bsCount[nextLine])\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0)\n\n      oldSCount.push(state.sCount[nextLine])\n      state.sCount[nextLine] = offset - initial\n\n      oldTShift.push(state.tShift[nextLine])\n      state.tShift[nextLine] = pos - state.bMarks[nextLine]\n      continue\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break }\n\n    // Case 3: another tag found.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine])\n        oldBSCount.push(state.bsCount[nextLine])\n        oldTShift.push(state.tShift[nextLine])\n        oldSCount.push(state.sCount[nextLine])\n        state.sCount[nextLine] -= state.blkIndent\n      }\n\n      break\n    }\n\n    oldBMarks.push(state.bMarks[nextLine])\n    oldBSCount.push(state.bsCount[nextLine])\n    oldTShift.push(state.tShift[nextLine])\n    oldSCount.push(state.sCount[nextLine])\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1\n  }\n\n  const oldIndent = state.blkIndent\n  state.blkIndent = 0\n\n  const token_o  = state.push('blockquote_open', 'blockquote', 1)\n  token_o.markup = '>'\n  const lines = [startLine, 0]\n  token_o.map    = lines\n\n  state.md.block.tokenize(state, startLine, nextLine)\n\n  const token_c  = state.push('blockquote_close', 'blockquote', -1)\n  token_c.markup = '>'\n\n  state.lineMax = oldLineMax\n  state.parentType = oldParentType\n  lines[1] = state.line\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (let i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i]\n    state.tShift[i + startLine] = oldTShift[i]\n    state.sCount[i + startLine] = oldSCount[i]\n    state.bsCount[i + startLine] = oldBSCount[i]\n  }\n  state.blkIndent = oldIndent\n\n  return true\n}\n", "// Horizontal rule\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function hr (state, startLine, endLine, silent) {\n  const max = state.eMarks[startLine]\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  const marker = state.src.charCodeAt(pos++)\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  let cnt = 1\n  while (pos < max) {\n    const ch = state.src.charCodeAt(pos++)\n    if (ch !== marker && !isSpace(ch)) { return false }\n    if (ch === marker) { cnt++ }\n  }\n\n  if (cnt < 3) { return false }\n\n  if (silent) { return true }\n\n  state.line = startLine + 1\n\n  const token  = state.push('hr', 'hr', 0)\n  token.map    = [startLine, state.line]\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker))\n\n  return true\n}\n", "// Lists\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker (state, startLine) {\n  const max = state.eMarks[startLine]\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n\n  const marker = state.src.charCodeAt(pos++)\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1\n  }\n\n  if (pos < max) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1\n    }\n  }\n\n  return pos\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker (state, startLine) {\n  const start = state.bMarks[startLine] + state.tShift[startLine]\n  const max = state.eMarks[startLine]\n  let pos = start\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1 }\n\n  let ch = state.src.charCodeAt(pos++)\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1 }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1 }\n\n    ch = state.src.charCodeAt(pos++)\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1 }\n\n      continue\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break\n    }\n\n    return -1\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1\n    }\n  }\n  return pos\n}\n\nfunction markTightParagraphs (state, idx) {\n  const level = state.level + 2\n\n  for (let i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true\n      state.tokens[i].hidden = true\n      i += 2\n    }\n  }\n}\n\nexport default function list (state, startLine, endLine, silent) {\n  let max, pos, start, token\n  let nextLine = startLine\n  let tight = true\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[nextLine] - state.listIndent >= 4 &&\n      state.sCount[nextLine] < state.blkIndent) {\n    return false\n  }\n\n  let isTerminatingParagraph = false\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true\n    }\n  }\n\n  // Detect list type and position after marker\n  let isOrdered\n  let markerValue\n  let posAfterMarker\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true\n    start = state.bMarks[nextLine] + state.tShift[nextLine]\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1))\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false\n  } else {\n    return false\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true }\n\n  // We should terminate list on style change. Remember first one to compare.\n  const markerCharCode = state.src.charCodeAt(posAfterMarker - 1)\n\n  // Start list\n  const listTokIdx = state.tokens.length\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1)\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]]\n    }\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1)\n  }\n\n  const listLines = [nextLine, 0]\n  token.map    = listLines\n  token.markup = String.fromCharCode(markerCharCode)\n\n  //\n  // Iterate list items\n  //\n\n  let prevEmptyEnd = false\n  const terminatorRules = state.md.block.ruler.getRules('list')\n\n  const oldParentType = state.parentType\n  state.parentType = 'list'\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker\n    max = state.eMarks[nextLine]\n\n    const initial = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine])\n    let offset = initial\n\n    while (pos < max) {\n      const ch = state.src.charCodeAt(pos)\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4\n      } else if (ch === 0x20) {\n        offset++\n      } else {\n        break\n      }\n\n      pos++\n    }\n\n    const contentStart = pos\n    let indentAfterMarker\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1\n    } else {\n      indentAfterMarker = offset - initial\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1 }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    const indent = initial + indentAfterMarker\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1)\n    token.markup = String.fromCharCode(markerCharCode)\n    const itemLines = [nextLine, 0]\n    token.map    = itemLines\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1)\n    }\n\n    // change current state, then restore it after parser subcall\n    const oldTight = state.tight\n    const oldTShift = state.tShift[nextLine]\n    const oldSCount = state.sCount[nextLine]\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    const oldListIndent = state.listIndent\n    state.listIndent = state.blkIndent\n    state.blkIndent = indent\n\n    state.tight = true\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine]\n    state.sCount[nextLine] = offset\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine)\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true)\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - nextLine) > 1 && state.isEmpty(state.line - 1)\n\n    state.blkIndent = state.listIndent\n    state.listIndent = oldListIndent\n    state.tShift[nextLine] = oldTShift\n    state.sCount[nextLine] = oldSCount\n    state.tight = oldTight\n\n    token        = state.push('list_item_close', 'li', -1)\n    token.markup = String.fromCharCode(markerCharCode)\n\n    nextLine = state.line\n    itemLines[1] = nextLine\n\n    if (nextLine >= endLine) { break }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n\n    // fail if terminating block found\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n      start = state.bMarks[nextLine] + state.tShift[nextLine]\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1)\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1)\n  }\n  token.markup = String.fromCharCode(markerCharCode)\n\n  listLines[1] = nextLine\n  state.line = nextLine\n\n  state.parentType = oldParentType\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx)\n  }\n\n  return true\n}\n", "import { isSpace, normalizeReference } from '../common/utils.mjs'\n\nexport default function reference (state, startLine, _endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n  let nextLine = startLine + 1\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false }\n\n  function getNextLine (nextLine) {\n    const endLine = state.lineMax\n\n    if (nextLine >= endLine || state.isEmpty(nextLine)) {\n      // empty line or end of input\n      return null\n    }\n\n    let isContinuation = false\n\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { isContinuation = true }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { isContinuation = true }\n\n    if (!isContinuation) {\n      const terminatorRules = state.md.block.ruler.getRules('reference')\n      const oldParentType = state.parentType\n      state.parentType = 'reference'\n\n      // Some tags can terminate paragraph without empty line.\n      let terminate = false\n      for (let i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true\n          break\n        }\n      }\n\n      state.parentType = oldParentType\n      if (terminate) {\n        // terminated by another block\n        return null\n      }\n    }\n\n    const pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    const max = state.eMarks[nextLine]\n\n    // max + 1 explicitly includes the newline\n    return state.src.slice(pos, max + 1)\n  }\n\n  let str = state.src.slice(pos, max + 1)\n\n  max = str.length\n  let labelEnd = -1\n\n  for (pos = 1; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x5B /* [ */) {\n      return false\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos\n      break\n    } else if (ch === 0x0A /* \\n */) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (ch === 0x5C /* \\ */) {\n      pos++\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        const lineContent = getNextLine(nextLine)\n        if (lineContent !== null) {\n          str += lineContent\n          max = str.length\n          nextLine++\n        }\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  const destRes = state.md.helpers.parseLinkDestination(str, pos, max)\n  if (!destRes.ok) { return false }\n\n  const href = state.md.normalizeLink(destRes.str)\n  if (!state.md.validateLink(href)) { return false }\n\n  pos = destRes.pos\n\n  // save cursor state, we could require to rollback later\n  const destEndPos = pos\n  const destEndLineNo = nextLine\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  const start = pos\n  for (; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  let titleRes = state.md.helpers.parseLinkTitle(str, pos, max)\n  while (titleRes.can_continue) {\n    const lineContent = getNextLine(nextLine)\n    if (lineContent === null) break\n    str += lineContent\n    pos = max\n    max = str.length\n    nextLine++\n    titleRes = state.md.helpers.parseLinkTitle(str, pos, max, titleRes)\n  }\n  let title\n\n  if (pos < max && start !== pos && titleRes.ok) {\n    title = titleRes.str\n    pos = titleRes.pos\n  } else {\n    title = ''\n    pos = destEndPos\n    nextLine = destEndLineNo\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    const ch = str.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n    pos++\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = ''\n      pos = destEndPos\n      nextLine = destEndLineNo\n      while (pos < max) {\n        const ch = str.charCodeAt(pos)\n        if (!isSpace(ch)) { break }\n        pos++\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false\n  }\n\n  const label = normalizeReference(str.slice(1, labelEnd))\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /* istanbul ignore if */\n  if (silent) { return true }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {}\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title, href }\n  }\n\n  state.line = nextLine\n  return true\n}\n", "// List of valid html blocks names, according to commonmark spec\n// https://spec.commonmark.org/0.30/#html-blocks\n\nexport default [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n", "// Regexps to match html elements\n\nconst attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*'\n\nconst unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+'\nconst single_quoted = \"'[^']*'\"\nconst double_quoted = '\"[^\"]*\"'\n\nconst attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')'\n\nconst attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)'\n\nconst open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>'\n\nconst close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>'\nconst comment     = '<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->'\nconst processing  = '<[?][\\\\s\\\\S]*?[?]>'\nconst declaration = '<![A-Za-z][^>]*>'\nconst cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>'\n\nconst HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')')\nconst HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')')\n\nexport { HTML_TAG_RE, HTML_OPEN_CLOSE_TAG_RE }\n", "// HTML block\n\nimport block_names from '../common/html_blocks.mjs'\nimport { HTML_OPEN_CLOSE_TAG_RE } from '../common/html_re.mjs'\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nconst HTML_SEQUENCES = [\n  [/^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true],\n  [/^<!--/,        /-->/,   true],\n  [/^<\\?/,         /\\?>/,   true],\n  [/^<![A-Z]/,     />/,     true],\n  [/^<!\\[CDATA\\[/, /\\]\\]>/, true],\n  [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true],\n  [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false]\n]\n\nexport default function html_block (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (!state.md.options.html) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  let lineText = state.src.slice(pos, max)\n\n  let i = 0\n  for (; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break }\n  }\n  if (i === HTML_SEQUENCES.length) { return false }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2]\n  }\n\n  let nextLine = startLine + 1\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      max = state.eMarks[nextLine]\n      lineText = state.src.slice(pos, max)\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++ }\n        break\n      }\n    }\n  }\n\n  state.line = nextLine\n\n  const token   = state.push('html_block', '', 0)\n  token.map     = [startLine, nextLine]\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true)\n\n  return true\n}\n", "// heading (#, ##, ...)\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function heading (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let ch  = state.src.charCodeAt(pos)\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false }\n\n  // count heading level\n  let level = 1\n  ch = state.src.charCodeAt(++pos)\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++\n    ch = state.src.charCodeAt(++pos)\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false }\n\n  if (silent) { return true }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos)\n  const tmp = state.skipCharsBack(max, 0x23, pos) // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp\n  }\n\n  state.line = startLine + 1\n\n  const token_o  = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup = '########'.slice(0, level)\n  token_o.map    = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = state.src.slice(pos, max).trim()\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  const token_c  = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup = '########'.slice(0, level)\n\n  return true\n}\n", "// lheading (---, ===)\n\nexport default function lheading (state, startLine, endLine/*, silent */) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  const oldParentType = state.parentType\n  state.parentType = 'paragraph' // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  let level = 0\n  let marker\n  let nextLine = startLine + 1\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      const max = state.eMarks[nextLine]\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos)\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker)\n          pos = state.skipSpaces(pos)\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2)\n            break\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine + 1\n\n  const token_o    = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup   = String.fromCharCode(marker)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line - 1]\n  token_i.children = []\n\n  const token_c    = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup   = String.fromCharCode(marker)\n\n  state.parentType = oldParentType\n\n  return true\n}\n", "// Paragraph\n\nexport default function paragraph (state, startLine, endLine) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n  const oldParentType = state.parentType\n  let nextLine = startLine + 1\n  state.parentType = 'paragraph'\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine\n\n  const token_o    = state.push('paragraph_open', 'p', 1)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  state.push('paragraph_close', 'p', -1)\n\n  state.parentType = oldParentType\n\n  return true\n}\n", "/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateBlock from './rules_block/state_block.mjs'\n\nimport r_table from './rules_block/table.mjs'\nimport r_code from './rules_block/code.mjs'\nimport r_fence from './rules_block/fence.mjs'\nimport r_blockquote from './rules_block/blockquote.mjs'\nimport r_hr from './rules_block/hr.mjs'\nimport r_list from './rules_block/list.mjs'\nimport r_reference from './rules_block/reference.mjs'\nimport r_html_block from './rules_block/html_block.mjs'\nimport r_heading from './rules_block/heading.mjs'\nimport r_lheading from './rules_block/lheading.mjs'\nimport r_paragraph from './rules_block/paragraph.mjs'\n\nconst _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  ['table',      r_table,      ['paragraph', 'reference']],\n  ['code',       r_code],\n  ['fence',      r_fence,      ['paragraph', 'reference', 'blockquote', 'list']],\n  ['blockquote', r_blockquote, ['paragraph', 'reference', 'blockquote', 'list']],\n  ['hr',         r_hr,         ['paragraph', 'reference', 'blockquote', 'list']],\n  ['list',       r_list,       ['paragraph', 'reference', 'blockquote']],\n  ['reference',  r_reference],\n  ['html_block', r_html_block, ['paragraph', 'reference', 'blockquote']],\n  ['heading',    r_heading,    ['paragraph', 'reference', 'blockquote']],\n  ['lheading',   r_lheading],\n  ['paragraph',  r_paragraph]\n]\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock () {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() })\n  }\n}\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  let line = startLine\n  let hasEmptyLines = false\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line)\n    if (line >= endLine) { break }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine\n      break\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    const prevLine = state.line\n    let ok = false\n\n    for (let i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false)\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\")\n        }\n        break\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched')\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true\n    }\n\n    line = state.line\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true\n      line++\n      state.line = line\n    }\n  }\n}\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  if (!src) { return }\n\n  const state = new this.State(src, md, env, outTokens)\n\n  this.tokenize(state, state.line, state.lineMax)\n}\n\nParserBlock.prototype.State = StateBlock\n\nexport default ParserBlock\n", "// Inline parser state\n\nimport Token from '../token.mjs'\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nfunction StateInline (src, md, env, outTokens) {\n  this.src = src\n  this.env = env\n  this.md = md\n  this.tokens = outTokens\n  this.tokens_meta = Array(outTokens.length)\n\n  this.pos = 0\n  this.posMax = this.src.length\n  this.level = 0\n  this.pending = ''\n  this.pendingLevel = 0\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {}\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = []\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = []\n\n  // backtick length => last seen position\n  this.backticks = {}\n  this.backticksScanned = false\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  const token = new Token('text', '', 0)\n  token.content = this.pending\n  token.level = this.pendingLevel\n  this.tokens.push(token)\n  this.pending = ''\n  return token\n}\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending()\n  }\n\n  const token = new Token(type, tag, nesting)\n  let token_meta = null\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--\n    this.delimiters = this._prev_delimiters.pop()\n  }\n\n  token.level = this.level\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++\n    this._prev_delimiters.push(this.delimiters)\n    this.delimiters = []\n    token_meta = { delimiters: this.delimiters }\n  }\n\n  this.pendingLevel = this.level\n  this.tokens.push(token)\n  this.tokens_meta.push(token_meta)\n  return token\n}\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  const max = this.posMax\n  const marker = this.src.charCodeAt(start)\n\n  // treat beginning of the line as a whitespace\n  const lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20\n\n  let pos = start\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++ }\n\n  const count = pos - start\n\n  // treat end of the line as a whitespace\n  const nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20\n\n  const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n  const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n  const isLastWhiteSpace = isWhiteSpace(lastChar)\n  const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n  const left_flanking =\n    !isNextWhiteSpace && (!isNextPunctChar || isLastWhiteSpace || isLastPunctChar)\n  const right_flanking =\n    !isLastWhiteSpace && (!isLastPunctChar || isNextWhiteSpace || isNextPunctChar)\n\n  const can_open  = left_flanking  && (canSplitWord || !right_flanking || isLastPunctChar)\n  const can_close = right_flanking && (canSplitWord || !left_flanking  || isNextPunctChar)\n\n  return { can_open, can_close, length: count }\n}\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token\n\nexport default StateInline\n", "// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar (ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\nexport default function text (state, silent) {\n  let pos = state.pos\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++\n  }\n\n  if (pos === state.pos) { return false }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos) }\n\n  state.pos = pos\n\n  return true\n}\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParserInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n}; */\n", "// Process links like https://example.org/\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nconst SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i\n\nexport default function linkify (state, silent) {\n  if (!state.md.options.linkify) return false\n  if (state.linkLevel > 0) return false\n\n  const pos = state.pos\n  const max = state.posMax\n\n  if (pos + 3 > max) return false\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false\n\n  const match = state.pending.match(SCHEME_RE)\n  if (!match) return false\n\n  const proto = match[1]\n\n  const link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length))\n  if (!link) return false\n\n  let url = link.url\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '')\n\n  const fullUrl = state.md.normalizeLink(url)\n  if (!state.md.validateLink(fullUrl)) return false\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length)\n\n    const token_o = state.push('link_open', 'a', 1)\n    token_o.attrs = [['href', fullUrl]]\n    token_o.markup = 'linkify'\n    token_o.info = 'auto'\n\n    const token_t = state.push('text', '', 0)\n    token_t.content = state.md.normalizeLinkText(url)\n\n    const token_c = state.push('link_close', 'a', -1)\n    token_c.markup = 'linkify'\n    token_c.info = 'auto'\n  }\n\n  state.pos += url.length - proto.length\n  return true\n}\n", "// Proceess '\\n'\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function newline (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false }\n\n  const pmax = state.pending.length - 1\n  const max = state.posMax\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        let ws = pmax - 1\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--\n\n        state.pending = state.pending.slice(0, ws)\n        state.push('hardbreak', 'br', 0)\n      } else {\n        state.pending = state.pending.slice(0, -1)\n        state.push('softbreak', 'br', 0)\n      }\n    } else {\n      state.push('softbreak', 'br', 0)\n    }\n  }\n\n  pos++\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++ }\n\n  state.pos = pos\n  return true\n}\n", "// Process escaped chars and hardbreaks\n\nimport { isSpace } from '../common/utils.mjs'\n\nconst ESCAPED = []\n\nfor (let i = 0; i < 256; i++) { ESCAPED.push(0) }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1 })\n\nexport default function escape (state, silent) {\n  let pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false\n  pos++\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false\n\n  let ch1 = state.src.charCodeAt(pos)\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0)\n    }\n\n    pos++\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos)\n      if (!isSpace(ch1)) break\n      pos++\n    }\n\n    state.pos = pos\n    return true\n  }\n\n  let escapedStr = state.src[pos]\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    const ch2 = state.src.charCodeAt(pos + 1)\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1]\n      pos++\n    }\n  }\n\n  const origStr = '\\\\' + escapedStr\n\n  if (!silent) {\n    const token = state.push('text_special', '', 0)\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr\n    } else {\n      token.content = origStr\n    }\n\n    token.markup = origStr\n    token.info   = 'escape'\n  }\n\n  state.pos = pos + 1\n  return true\n}\n", "// Parse backticks\n\nexport default function backtick (state, silent) {\n  let pos = state.pos\n  const ch = state.src.charCodeAt(pos)\n\n  if (ch !== 0x60/* ` */) { return false }\n\n  const start = pos\n  pos++\n  const max = state.posMax\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++ }\n\n  const marker = state.src.slice(start, pos)\n  const openerLength = marker.length\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker\n    state.pos += openerLength\n    return true\n  }\n\n  let matchEnd = pos\n  let matchStart\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++ }\n\n    const closerLength = matchEnd - matchStart\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        const token = state.push('code_inline', 'code', 0)\n        token.markup = marker\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1')\n      }\n      state.pos = matchEnd\n      return true\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true\n\n  if (!silent) state.pending += marker\n  state.pos += openerLength\n  return true\n}\n", "// ~~strike through~~\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction strikethrough_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x7E/* ~ */) { return false }\n\n  const scanned = state.scanDelims(state.pos, true)\n  let len = scanned.length\n  const ch = String.fromCharCode(marker)\n\n  if (len < 2) { return false }\n\n  let token\n\n  if (len % 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch\n    len--\n  }\n\n  for (let i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch + ch\n\n    state.delimiters.push({\n      marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  let token\n  const loneMarkers = []\n  const max = delimiters.length\n\n  for (let i = 0; i < max; i++) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue\n    }\n\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    token         = state.tokens[startDelim.token]\n    token.type    = 's_open'\n    token.tag     = 's'\n    token.nesting = 1\n    token.markup  = '~~'\n    token.content = ''\n\n    token         = state.tokens[endDelim.token]\n    token.type    = 's_close'\n    token.tag     = 's'\n    token.nesting = -1\n    token.markup  = '~~'\n    token.content = ''\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1)\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    const i = loneMarkers.pop()\n    let j = i + 1\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++\n    }\n\n    j--\n\n    if (i !== j) {\n      token = state.tokens[j]\n      state.tokens[j] = state.tokens[i]\n      state.tokens[i] = token\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction strikethrough_postProcess (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: strikethrough_tokenize,\n  postProcess: strikethrough_postProcess\n}\n", "// Process *this* and _that_\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction emphasis_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false }\n\n  const scanned = state.scanDelims(state.pos, marker === 0x2A)\n\n  for (let i = 0; i < scanned.length; i++) {\n    const token = state.push('text', '', 0)\n    token.content = String.fromCharCode(marker)\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  const max = delimiters.length\n\n  for (let i = max - 1; i >= 0; i--) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    const isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1\n\n    const ch = String.fromCharCode(startDelim.marker)\n\n    const token_o   = state.tokens[startDelim.token]\n    token_o.type    = isStrong ? 'strong_open' : 'em_open'\n    token_o.tag     = isStrong ? 'strong' : 'em'\n    token_o.nesting = 1\n    token_o.markup  = isStrong ? ch + ch : ch\n    token_o.content = ''\n\n    const token_c   = state.tokens[endDelim.token]\n    token_c.type    = isStrong ? 'strong_close' : 'em_close'\n    token_c.tag     = isStrong ? 'strong' : 'em'\n    token_c.nesting = -1\n    token_c.markup  = isStrong ? ch + ch : ch\n    token_c.content = ''\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = ''\n      state.tokens[delimiters[startDelim.end + 1].token].content = ''\n      i--\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction emphasis_post_process (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: emphasis_tokenize,\n  postProcess: emphasis_post_process\n}\n", "// Process [link](<to> \"stuff\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function link (state, silent) {\n  let code, label, res, ref\n  let href = ''\n  let title = ''\n  let start = state.pos\n  let parseReference = true\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false }\n\n  const oldPos = state.pos\n  const max = state.posMax\n  const labelStart = state.pos + 1\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  let pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str\n        pos = res.pos\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos)\n          if (!isSpace(code) && code !== 0x0A) { break }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true\n    }\n    pos++\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart\n    state.posMax = labelEnd\n\n    const token_o = state.push('link_open', 'a', 1)\n    const attrs = [['href', href]]\n    token_o.attrs  = attrs\n    if (title) {\n      attrs.push(['title', title])\n    }\n\n    state.linkLevel++\n    state.md.inline.tokenize(state)\n    state.linkLevel--\n\n    state.push('link_close', 'a', -1)\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n", "// Process ![image](<src> \"title\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function image (state, silent) {\n  let code, content, label, pos, ref, res, title, start\n  let href = ''\n  const oldPos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false }\n\n  const labelStart = state.pos + 2\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str\n      pos = res.pos\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n    } else {\n      title = ''\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos\n      return false\n    }\n    pos++\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd)\n\n    const tokens = []\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens\n    )\n\n    const token = state.push('image', 'img', 0)\n    const attrs = [['src', href], ['alt', '']]\n    token.attrs = attrs\n    token.children = tokens\n    token.content = content\n\n    if (title) {\n      attrs.push(['title', title])\n    }\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n", "// Process autolinks '<protocol:...>'\n\n/* eslint max-len:0 */\nconst EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/\n/* eslint-disable-next-line no-control-regex */\nconst AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\\x00-\\x20]*)$/\n\nexport default function autolink (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  const start = state.pos\n  const max = state.posMax\n\n  for (;;) {\n    if (++pos >= max) return false\n\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch === 0x3C /* < */) return false\n    if (ch === 0x3E /* > */) break\n  }\n\n  const url = state.src.slice(start + 1, pos)\n\n  if (AUTOLINK_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink(url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  if (EMAIL_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink('mailto:' + url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  return false\n}\n", "// Process html tags\n\nimport { HTML_TAG_RE } from '../common/html_re.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nfunction isLetter (ch) {\n  /* eslint no-bitwise:0 */\n  const lc = ch | 0x20 // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */)\n}\n\nexport default function html_inline (state, silent) {\n  if (!state.md.options.html) { return false }\n\n  // Check start\n  const max = state.posMax\n  const pos = state.pos\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false\n  }\n\n  // Quick fail on second char\n  const ch = state.src.charCodeAt(pos + 1)\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false\n  }\n\n  const match = state.src.slice(pos).match(HTML_TAG_RE)\n  if (!match) { return false }\n\n  if (!silent) {\n    const token = state.push('html_inline', '', 0)\n    token.content = match[0]\n\n    if (isLinkOpen(token.content))  state.linkLevel++\n    if (isLinkClose(token.content)) state.linkLevel--\n  }\n  state.pos += match[0].length\n  return true\n}\n", "// Process html entity - &#123;, &#xAF;, &quot;, ...\n\nimport { decodeHTML } from 'entities'\nimport { isValidEntityCode, fromCodePoint } from '../common/utils.mjs'\n\nconst DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i\nconst NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i\n\nexport default function entity (state, silent) {\n  const pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false\n\n  if (pos + 1 >= max) return false\n\n  const ch = state.src.charCodeAt(pos + 1)\n\n  if (ch === 0x23 /* # */) {\n    const match = state.src.slice(pos).match(DIGITAL_RE)\n    if (match) {\n      if (!silent) {\n        const code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10)\n\n        const token   = state.push('text_special', '', 0)\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD)\n        token.markup  = match[0]\n        token.info    = 'entity'\n      }\n      state.pos += match[0].length\n      return true\n    }\n  } else {\n    const match = state.src.slice(pos).match(NAMED_RE)\n    if (match) {\n      const decoded = decodeHTML(match[0])\n      if (decoded !== match[0]) {\n        if (!silent) {\n          const token   = state.push('text_special', '', 0)\n          token.content = decoded\n          token.markup  = match[0]\n          token.info    = 'entity'\n        }\n        state.pos += match[0].length\n        return true\n      }\n    }\n  }\n\n  return false\n}\n", "// For each opening emphasis-like marker find a matching closing one\n//\n\nfunction processDelimiters (delimiters) {\n  const openersBottom = {}\n  const max = delimiters.length\n\n  if (!max) return\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  let headerIdx = 0\n  let lastTokenIdx = -2 // needs any value lower than -1\n  const jumps = []\n\n  for (let closerIdx = 0; closerIdx < max; closerIdx++) {\n    const closer = delimiters[closerIdx]\n\n    jumps.push(0)\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx\n    }\n\n    lastTokenIdx = closer.token\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0\n\n    if (!closer.close) continue\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    /* eslint-disable-next-line no-prototype-builtins */\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1]\n    }\n\n    const minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)]\n\n    let openerIdx = headerIdx - jumps[headerIdx] - 1\n\n    let newMinOpenerIdx = openerIdx\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      const opener = delimiters[openerIdx]\n\n      if (opener.marker !== closer.marker) continue\n\n      if (opener.open && opener.end < 0) {\n        let isOddMatch = false\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          const lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open\n            ? jumps[openerIdx - 1] + 1\n            : 0\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump\n          jumps[openerIdx] = lastJump\n\n          closer.open  = false\n          opener.end   = closerIdx\n          opener.close = false\n          newMinOpenerIdx = -1\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2\n          break\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx\n    }\n  }\n}\n\nexport default function link_pairs (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  processDelimiters(state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters)\n    }\n  }\n}\n", "// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n\nexport default function fragments_join (state) {\n  let curr, last\n  let level = 0\n  const tokens = state.tokens\n  const max = state.tokens.length\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level-- // closing tag\n    tokens[curr].level = level\n    if (tokens[curr].nesting > 0) level++ // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr] }\n\n      last++\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last\n  }\n}\n", "/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateInline from './rules_inline/state_inline.mjs'\n\nimport r_text from './rules_inline/text.mjs'\nimport r_linkify from './rules_inline/linkify.mjs'\nimport r_newline from './rules_inline/newline.mjs'\nimport r_escape from './rules_inline/escape.mjs'\nimport r_backticks from './rules_inline/backticks.mjs'\nimport r_strikethrough from './rules_inline/strikethrough.mjs'\nimport r_emphasis from './rules_inline/emphasis.mjs'\nimport r_link from './rules_inline/link.mjs'\nimport r_image from './rules_inline/image.mjs'\nimport r_autolink from './rules_inline/autolink.mjs'\nimport r_html_inline from './rules_inline/html_inline.mjs'\nimport r_entity from './rules_inline/entity.mjs'\n\nimport r_balance_pairs from './rules_inline/balance_pairs.mjs'\nimport r_fragments_join from './rules_inline/fragments_join.mjs'\n\n// Parser rules\n\nconst _rules = [\n  ['text',            r_text],\n  ['linkify',         r_linkify],\n  ['newline',         r_newline],\n  ['escape',          r_escape],\n  ['backticks',       r_backticks],\n  ['strikethrough',   r_strikethrough.tokenize],\n  ['emphasis',        r_emphasis.tokenize],\n  ['link',            r_link],\n  ['image',           r_image],\n  ['autolink',        r_autolink],\n  ['html_inline',     r_html_inline],\n  ['entity',          r_entity]\n]\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nconst _rules2 = [\n  ['balance_pairs',   r_balance_pairs],\n  ['strikethrough',   r_strikethrough.postProcess],\n  ['emphasis',        r_emphasis.postProcess],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  ['fragments_join',  r_fragments_join]\n]\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline () {\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler()\n\n  for (let i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1])\n  }\n}\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  const pos = state.pos\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  const cache = state.cache\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos]\n    return\n  }\n\n  let ok = false\n\n  if (state.level < maxNesting) {\n    for (let i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++\n      ok = rules[i](state, true)\n      state.level--\n\n      if (ok) {\n        if (pos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n        break\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax\n  }\n\n  if (!ok) { state.pos++ }\n  cache[pos] = state.pos\n}\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const end = state.posMax\n  const maxNesting = state.md.options.maxNesting\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    const prevPos = state.pos\n    let ok = false\n\n    if (state.level < maxNesting) {\n      for (let i = 0; i < len; i++) {\n        ok = rules[i](state, false)\n        if (ok) {\n          if (prevPos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n          break\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break }\n      continue\n    }\n\n    state.pending += state.src[state.pos++]\n  }\n\n  if (state.pending) {\n    state.pushPending()\n  }\n}\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  const state = new this.State(str, md, env, outTokens)\n\n  this.tokenize(state)\n\n  const rules = this.ruler2.getRules('')\n  const len = rules.length\n\n  for (let i = 0; i < len; i++) {\n    rules[i](state)\n  }\n}\n\nParserInline.prototype.State = StateInline\n\nexport default ParserInline\n", "import { Any, Cc, Z, P } from 'uc.micro'\n\nexport default function (opts) {\n  const re = {}\n  opts = opts || {}\n\n  re.src_Any = Any.source\n  re.src_Cc = Cc.source\n  re.src_Z = Z.source\n  re.src_P = P.source\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|')\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|')\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  const text_separators = '[><\\uff5c]'\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?'\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?'\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))'\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n\n          // allow `I'm_king` if no pair found\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +\n\n          // google has many dots in \"google search\" links (#66, #81).\n          // github has ... in commit range links,\n          // Restrict to\n          // - english\n          // - percent-encoded\n          // - parts of file path\n          // - params separator\n          // until more examples found.\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' +\n\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---']\n            ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            : '\\\\-+|'\n          ) +\n          // allow `,,,` in paths\n          ',(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `;` if not followed by space-like char\n          ';(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `!!!` in paths, but not at the end\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +\n\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?'\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*'\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}'\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')'\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')'\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/* _root */ + ')' +\n    ')'\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')'\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))'\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator\n\n  //\n  // Main rules\n  //\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))'\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')'\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')'\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')'\n\n  return re\n}\n", "import reFactory from './lib/re.mjs'\n\n//\n// Helpers\n//\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\nfunction isString (obj) { return _class(obj) === '[object String]' }\nfunction isObject (obj) { return _class(obj) === '[object Object]' }\nfunction isRegExp (obj) { return _class(obj) === '[object RegExp]' }\nfunction isFunction (obj) { return _class(obj) === '[object Function]' }\n\nfunction escapeRE (str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&') }\n\n//\n\nconst defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n}\n\nfunction isOptionsObj (obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    /* eslint-disable-next-line no-prototype-builtins */\n    return acc || defaultOptions.hasOwnProperty(k)\n  }, false)\n}\n\nconst defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        )\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length\n      }\n      return 0\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        )\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0 }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0 }\n        return tail.match(self.re.no_http)[0].length\n      }\n      return 0\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        )\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length\n      }\n      return 0\n    }\n  }\n}\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n/* eslint-disable-next-line max-len */\nconst tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nconst tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|')\n\nfunction resetScanCache (self) {\n  self.__index__ = -1\n  self.__text_cache__ = ''\n}\n\nfunction createValidator (re) {\n  return function (text, pos) {\n    const tail = text.slice(pos)\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length\n    }\n    return 0\n  }\n}\n\nfunction createNormalizer () {\n  return function (match, self) {\n    self.normalize(match)\n  }\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile (self) {\n  // Load & clone RE patterns.\n  const re = self.re = reFactory(self.__opts__)\n\n  // Define dynamic patterns\n  const tlds = self.__tlds__.slice()\n\n  self.onCompile()\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re)\n  }\n  tlds.push(re.src_xn)\n\n  re.src_tlds = tlds.join('|')\n\n  function untpl (tpl) { return tpl.replace('%TLDS%', re.src_tlds) }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i')\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i')\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i')\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i')\n\n  //\n  // Compile each schema\n  //\n\n  const aliases = []\n\n  self.__compiled__ = {} // Reset compiled data\n\n  function schemaError (name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val)\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    const val = self.__schemas__[name]\n\n    // skip disabled methods\n    if (val === null) { return }\n\n    const compiled = { validate: null, link: null }\n\n    self.__compiled__[name] = compiled\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate)\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate\n      } else {\n        schemaError(name, val)\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer()\n      } else {\n        schemaError(name, val)\n      }\n\n      return\n    }\n\n    if (isString(val)) {\n      aliases.push(name)\n      return\n    }\n\n    schemaError(name, val)\n  })\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize\n  })\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() }\n\n  //\n  // Build schema condition\n  //\n  const slist = Object.keys(self.__compiled__)\n    .filter(function (name) {\n      // Filter disabled & fake schemas\n      return name.length > 0 && self.__compiled__[name]\n    })\n    .map(escapeRE)\n    .join('|')\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i')\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig')\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i')\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  )\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self)\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match (self, shift) {\n  const start = self.__index__\n  const end = self.__last_index__\n  const text = self.__text_cache__.slice(start, end)\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema = self.__schema__.toLowerCase()\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index = start + shift\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw = text\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text = text\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url = text\n}\n\nfunction createMatch (self, shift) {\n  const match = new Match(self, shift)\n\n  self.__compiled__[match.schema].normalize(match, self)\n\n  return match\n}\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt (schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options)\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas\n      schemas = {}\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options)\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__ = -1\n  this.__last_index__ = -1 // Next scan position\n  this.__schema__ = ''\n  this.__text_cache__ = ''\n\n  this.__schemas__ = assign({}, defaultSchemas, schemas)\n  this.__compiled__ = {}\n\n  this.__tlds__ = tlds_default\n  this.__tlds_replaced__ = false\n\n  this.re = {}\n\n  compile(this)\n}\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add (schema, definition) {\n  this.__schemas__[schema] = definition\n  compile(this)\n  return this\n}\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set (options) {\n  this.__opts__ = assign(this.__opts__, options)\n  return this\n}\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) { return false }\n\n  let m, ml, me, len, shift, next, re, tld_pos, at_pos\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search\n    re.lastIndex = 0\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex)\n      if (len) {\n        this.__schema__ = m[2]\n        this.__index__ = m.index + m[1].length\n        this.__last_index__ = m.index + m[0].length + len\n        break\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test)\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = ''\n            this.__index__ = shift\n            this.__last_index__ = ml.index + ml[0].length\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@')\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length\n        next = me.index + me[0].length\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__ = 'mailto:'\n          this.__index__ = shift\n          this.__last_index__ = next\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0\n}\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest (text) {\n  return this.re.pretest.test(text)\n}\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt (text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this)\n}\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match (text) {\n  const result = []\n  let shift = 0\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift))\n    shift = this.__last_index__\n  }\n\n  // Cut head if cache was used\n  let tail = shift ? text.slice(shift) : text\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift))\n\n    tail = tail.slice(this.__last_index__)\n    shift += this.__last_index__\n  }\n\n  if (result.length) {\n    return result\n  }\n\n  return null\n}\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) return null\n\n  const m = this.re.schema_at_start.exec(text)\n  if (!m) return null\n\n  const len = this.testSchemaAt(text, m[2], m[0].length)\n  if (!len) return null\n\n  this.__schema__ = m[2]\n  this.__index__ = m.index + m[1].length\n  this.__last_index__ = m.index + m[0].length + len\n\n  return createMatch(this, 0)\n}\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds (list, keepOld) {\n  list = Array.isArray(list) ? list : [list]\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice()\n    this.__tlds_replaced__ = true\n    compile(this)\n    return this\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n    .sort()\n    .filter(function (el, idx, arr) {\n      return el !== arr[idx - 1]\n    })\n    .reverse()\n\n  compile(this)\n  return this\n}\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize (match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url\n  }\n}\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile () {\n}\n\nexport default LinkifyIt\n", "'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n", "// markdown-it default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 100\n  },\n\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n}\n", "// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n}\n", "// Commonmark default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: true,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: true,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n}\n", "// Main parser class\n\nimport * as utils from './common/utils.mjs'\nimport * as helpers from './helpers/index.mjs'\nimport Renderer from './renderer.mjs'\nimport ParserCore from './parser_core.mjs'\nimport ParserBlock from './parser_block.mjs'\nimport ParserInline from './parser_inline.mjs'\nimport LinkifyIt from 'linkify-it'\nimport * as mdurl from 'mdurl'\nimport punycode from 'punycode.js'\n\nimport cfg_default from './presets/default.mjs'\nimport cfg_zero from './presets/zero.mjs'\nimport cfg_commonmark from './presets/commonmark.mjs'\n\nconst config = {\n  default: cfg_default,\n  zero: cfg_zero,\n  commonmark: cfg_commonmark\n}\n\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nconst BAD_PROTO_RE = /^(vbscript|javascript|file|data):/\nconst GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/\n\nfunction validateLink (url) {\n  // url should be normalized at this point, and existing entities are decoded\n  const str = url.trim().toLowerCase()\n\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) : true\n}\n\nconst RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:']\n\nfunction normalizeLink (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed))\n}\n\nfunction normalizeLinkText (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%')\n}\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.mjs) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.mjs) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.mjs) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.mjs) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>` or `<code>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre><code class=\"hljs\">' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre><code class=\"hljs\">' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt (presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options)\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {}\n      presetName = 'default'\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline()\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock()\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore()\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs).\n   **/\n  this.renderer = new Renderer()\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.mjs)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt()\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.mjs).\n   **/\n  this.utils = utils\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers)\n\n  this.options = {}\n  this.configure(presetName)\n\n  if (options) { this.set(options) }\n}\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options)\n  return this\n}\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  const self = this\n\n  if (utils.isString(presets)) {\n    const presetName = presets\n    presets = config[presetName]\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name') }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty') }\n\n  if (presets.options) { self.set(presets.options) }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules)\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2)\n      }\n    })\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.enable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed)\n  }\n\n  return this\n}\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.disable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed)\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  const args = [this].concat(Array.prototype.slice.call(arguments, 1))\n  plugin.apply(plugin, args)\n  return this\n}\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String')\n  }\n\n  const state = new this.core.State(src, this, env)\n\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parse(src, env), this.options, env)\n}\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  const state = new this.core.State(src, this, env)\n\n  state.inlineMode = true\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env)\n}\n\nexport default MarkdownIt\n", "export default function ins_plugin (md) {\n  // Insert each marker as a separate text token, and add it to delimiter list\n  //\n  function tokenize (state, silent) {\n    const start = state.pos\n    const marker = state.src.charCodeAt(start)\n\n    if (silent) { return false }\n\n    if (marker !== 0x2B/* + */) { return false }\n\n    const scanned = state.scanDelims(state.pos, true)\n    let len = scanned.length\n    const ch = String.fromCharCode(marker)\n\n    if (len < 2) { return false }\n\n    if (len % 2) {\n      const token = state.push('text', '', 0)\n      token.content = ch\n      len--\n    }\n\n    for (let i = 0; i < len; i += 2) {\n      const token = state.push('text', '', 0)\n      token.content = ch + ch\n\n      if (!scanned.can_open && !scanned.can_close) { continue }\n\n      state.delimiters.push({\n        marker,\n        length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n        jump: i / 2, // 1 delimiter = 2 characters\n        token: state.tokens.length - 1,\n        end: -1,\n        open: scanned.can_open,\n        close: scanned.can_close\n      })\n    }\n\n    state.pos += scanned.length\n\n    return true\n  }\n\n  // Walk through delimiter list and replace text tokens with tags\n  //\n  function postProcess (state, delimiters) {\n    let token\n    const loneMarkers = []\n    const max = delimiters.length\n\n    for (let i = 0; i < max; i++) {\n      const startDelim = delimiters[i]\n\n      if (startDelim.marker !== 0x2B/* + */) {\n        continue\n      }\n\n      if (startDelim.end === -1) {\n        continue\n      }\n\n      const endDelim = delimiters[startDelim.end]\n\n      token         = state.tokens[startDelim.token]\n      token.type    = 'ins_open'\n      token.tag     = 'ins'\n      token.nesting = 1\n      token.markup  = '++'\n      token.content = ''\n\n      token         = state.tokens[endDelim.token]\n      token.type    = 'ins_close'\n      token.tag     = 'ins'\n      token.nesting = -1\n      token.markup  = '++'\n      token.content = ''\n\n      if (state.tokens[endDelim.token - 1].type === 'text' &&\n          state.tokens[endDelim.token - 1].content === '+') {\n        loneMarkers.push(endDelim.token - 1)\n      }\n    }\n\n    // If a marker sequence has an odd number of characters, it's splitted\n    // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n    // start of the sequence.\n    //\n    // So, we have to move all those markers after subsequent s_close tags.\n    //\n    while (loneMarkers.length) {\n      const i = loneMarkers.pop()\n      let j = i + 1\n\n      while (j < state.tokens.length && state.tokens[j].type === 'ins_close') {\n        j++\n      }\n\n      j--\n\n      if (i !== j) {\n        token = state.tokens[j]\n        state.tokens[j] = state.tokens[i]\n        state.tokens[i] = token\n      }\n    }\n  }\n\n  md.inline.ruler.before('emphasis', 'ins', tokenize)\n  md.inline.ruler2.before('emphasis', 'ins', function (state) {\n    const tokens_meta = state.tokens_meta\n    const max = (state.tokens_meta || []).length\n\n    postProcess(state, state.delimiters)\n\n    for (let curr = 0; curr < max; curr++) {\n      if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n        postProcess(state, tokens_meta[curr].delimiters)\n      }\n    }\n  })\n};\n", "export default function ins_plugin (md) {\n  // Insert each marker as a separate text token, and add it to delimiter list\n  //\n  function tokenize (state, silent) {\n    const start = state.pos\n    const marker = state.src.charCodeAt(start)\n\n    if (silent) { return false }\n\n    if (marker !== 0x3D/* = */) { return false }\n\n    const scanned = state.scanDelims(state.pos, true)\n    let len = scanned.length\n    const ch = String.fromCharCode(marker)\n\n    if (len < 2) { return false }\n\n    if (len % 2) {\n      const token = state.push('text', '', 0)\n      token.content = ch\n      len--\n    }\n\n    for (let i = 0; i < len; i += 2) {\n      const token = state.push('text', '', 0)\n      token.content = ch + ch\n\n      if (!scanned.can_open && !scanned.can_close) { continue }\n\n      state.delimiters.push({\n        marker,\n        length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n        jump: i / 2, // 1 delimiter = 2 characters\n        token: state.tokens.length - 1,\n        end: -1,\n        open: scanned.can_open,\n        close: scanned.can_close\n      })\n    }\n\n    state.pos += scanned.length\n\n    return true\n  }\n\n  // Walk through delimiter list and replace text tokens with tags\n  //\n  function postProcess (state, delimiters) {\n    const loneMarkers = []\n    const max = delimiters.length\n\n    for (let i = 0; i < max; i++) {\n      const startDelim = delimiters[i]\n\n      if (startDelim.marker !== 0x3D/* = */) {\n        continue\n      }\n\n      if (startDelim.end === -1) {\n        continue\n      }\n\n      const endDelim = delimiters[startDelim.end]\n\n      const token_o = state.tokens[startDelim.token]\n      token_o.type = 'mark_open'\n      token_o.tag = 'mark'\n      token_o.nesting = 1\n      token_o.markup = '=='\n      token_o.content = ''\n\n      const token_c = state.tokens[endDelim.token]\n      token_c.type = 'mark_close'\n      token_c.tag = 'mark'\n      token_c.nesting = -1\n      token_c.markup = '=='\n      token_c.content = ''\n\n      if (state.tokens[endDelim.token - 1].type === 'text' &&\n          state.tokens[endDelim.token - 1].content === '=') {\n        loneMarkers.push(endDelim.token - 1)\n      }\n    }\n\n    // If a marker sequence has an odd number of characters, it's splitted\n    // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n    // start of the sequence.\n    //\n    // So, we have to move all those markers after subsequent s_close tags.\n    //\n    while (loneMarkers.length) {\n      const i = loneMarkers.pop()\n      let j = i + 1\n\n      while (j < state.tokens.length && state.tokens[j].type === 'mark_close') {\n        j++\n      }\n\n      j--\n\n      if (i !== j) {\n        const token = state.tokens[j]\n        state.tokens[j] = state.tokens[i]\n        state.tokens[i] = token\n      }\n    }\n  }\n\n  md.inline.ruler.before('emphasis', 'mark', tokenize)\n  md.inline.ruler2.before('emphasis', 'mark', function (state) {\n    let curr\n    const tokens_meta = state.tokens_meta\n    const max = (state.tokens_meta || []).length\n\n    postProcess(state, state.delimiters)\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n        postProcess(state, tokens_meta[curr].delimiters)\n      }\n    }\n  })\n};\n", "// Process ~subscript~\n\n// same as UNESCAPE_MD_RE plus a space\nconst UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,./:;<=>?@[\\]^_`{|}~-])/g\n\nfunction subscript (state, silent) {\n  const max = state.posMax\n  const start = state.pos\n\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false }\n  if (silent) { return false } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false }\n\n  state.pos = start + 1\n  let found = false\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\n      found = true\n      break\n    }\n\n    state.md.inline.skipToken(state)\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start\n    return false\n  }\n\n  const content = state.src.slice(start + 1, state.pos)\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start\n    return false\n  }\n\n  // found!\n  state.posMax = state.pos\n  state.pos = start + 1\n\n  // Earlier we checked !silent, but this implementation does not need it\n  const token_so = state.push('sub_open', 'sub', 1)\n  token_so.markup = '~'\n\n  const token_t = state.push('text', '', 0)\n  token_t.content = content.replace(UNESCAPE_RE, '$1')\n\n  const token_sc = state.push('sub_close', 'sub', -1)\n  token_sc.markup = '~'\n\n  state.pos = state.posMax + 1\n  state.posMax = max\n  return true\n}\n\nexport default function sub_plugin (md) {\n  md.inline.ruler.after('emphasis', 'sub', subscript)\n};\n", "// Process ^superscript^\n\n// same as UNESCAPE_MD_RE plus a space\nconst UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,./:;<=>?@[\\]^_`{|}~-])/g\n\nfunction superscript (state, silent) {\n  const max = state.posMax\n  const start = state.pos\n\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false }\n  if (silent) { return false } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false }\n\n  state.pos = start + 1\n  let found = false\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x5E/* ^ */) {\n      found = true\n      break\n    }\n\n    state.md.inline.skipToken(state)\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start\n    return false\n  }\n\n  const content = state.src.slice(start + 1, state.pos)\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start\n    return false\n  }\n\n  // found!\n  state.posMax = state.pos\n  state.pos = start + 1\n\n  // Earlier we checked !silent, but this implementation does not need it\n  const token_so = state.push('sup_open', 'sup', 1)\n  token_so.markup = '^'\n\n  const token_t = state.push('text', '', 0)\n  token_t.content = content.replace(UNESCAPE_RE, '$1')\n\n  const token_sc = state.push('sup_close', 'sup', -1)\n  token_sc.markup = '^'\n\n  state.pos = state.posMax + 1\n  state.posMax = max\n  return true\n}\n\nexport default function sup_plugin (md) {\n  md.inline.ruler.after('emphasis', 'sup', superscript)\n};\n", "const ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\n\nexport { ALIAS, DOC, MAP, NODE_TYPE, PAIR, SCALAR, SEQ, hasAnchor, isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq };\n", "import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/identity.js';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexport { visit, visitAsync };\n", "import { isNode } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/s);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix) {\n            try {\n                return prefix + decodeURIComponent(suffix);\n            }\n            catch (error) {\n                onError(String(error));\n                return null;\n            }\n        }\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n            const tags = {};\n            visit(doc.contents, (_key, node) => {\n                if (isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexport { Directives };\n", "import { isScalar, isCollection } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            if (!prevAnchors)\n                prevAnchors = anchorNames(doc);\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (isScalar(ref.node) || isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexport { anchorIsValid, anchorNames, createNodeAnchors, findNewAnchor };\n", "/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                // eslint-disable-next-line @typescript-eslint/no-array-delete\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexport { applyReviver };\n", "import { hasAnchor } from './identity.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexport { toJS };\n", "import { applyReviver } from '../doc/applyReviver.js';\nimport { NODE_TYPE, isDocument } from './identity.js';\nimport { toJS } from './toJS.js';\n\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** A plain JavaScript representation of this node. */\n    toJS(doc, { mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        if (!isDocument(doc))\n            throw new TypeError('A document argument is required');\n        const ctx = {\n            anchors: new Map(),\n            doc,\n            keep: true,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this, '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n}\n\nexport { NodeBase };\n", "import { anchorIsValid } from '../doc/anchors.js';\nimport { visit } from '../visit.js';\nimport { ALIAS, isAlias, isCollection, isPair } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nclass Alias extends NodeBase {\n    constructor(source) {\n        super(ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc) {\n        let found = undefined;\n        visit(doc, {\n            Node: (_key, node) => {\n                if (node === this)\n                    return visit.BREAK;\n                if (node.anchor === this.source)\n                    found = node;\n            }\n        });\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        let data = anchors.get(source);\n        if (!data) {\n            // Resolve anchors for Node.prototype.toJS()\n            toJS(source, null, ctx);\n            data = anchors.get(source);\n        }\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexport { Alias };\n", "import { SCALAR } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends NodeBase {\n    constructor(value) {\n        super(SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexport { Scalar, isScalarValue };\n", "import { Alias } from '../nodes/Alias.js';\nimport { isNode, isPair, MAP, SEQ, isDocument } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (isDocument(value))\n        value = value.contents;\n    if (isNode(value))\n        return value;\n    if (isPair(value)) {\n        const map = ctx.schema[MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt !== 'undefined' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            if (!ref.anchor)\n                ref.anchor = onAnchor(value);\n            return new Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[SEQ]\n                    : schema[MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : typeof tagObj?.nodeClass?.from === 'function'\n            ? tagObj.nodeClass.from(ctx.schema, value, ctx)\n            : new Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    else if (!tagObj.default)\n        node.tag = tagObj.tag;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexport { createNode };\n", "import { createNode } from '../doc/createNode.js';\nimport { isNode, isPair, isCollection, isScalar } from './identity.js';\nimport { NodeBase } from './Node.js';\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && isScalar(node) ? node.value : node;\n        else\n            return isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\n\nexport { Collection, collectionFromPath, isEmptyPath };\n", "/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexport { indentComment, lineComment, stringifyComment };\n", "const FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    if (lineWidth < minContentWidth)\n        minContentWidth = 0;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i, indent.length);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i, indent.length);\n            end = i + indent.length + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i, indent) {\n    let end = i;\n    let start = i + 1;\n    let ch = text[start];\n    while (ch === ' ' || ch === '\\t') {\n        if (i < start + indent) {\n            ch = text[++i];\n        }\n        else {\n            do {\n                ch = text[++i];\n            } while (ch && ch !== '\\n');\n            end = i;\n            start = i + 1;\n            ch = text[start];\n        }\n    }\n    return end;\n}\n\nexport { FOLD_BLOCK, FOLD_FLOW, FOLD_QUOTED, foldFlowLines };\n", "import { Scalar } from '../nodes/Scalar.js';\nimport { foldFlowLines, FOLD_QUOTED, FOLD_FLOW, FOLD_BLOCK } from './foldFlowLines.js';\n\nconst getFoldOptions = (ctx, isBlock) => ({\n    indentAtStart: isBlock ? ctx.indent.length : ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx, false));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\n// The negative lookbehind avoids a polynomial search,\n// but isn't supported yet on Safari: https://caniuse.com/js-regexp-lookbehind\nlet blockEndNewlines;\ntry {\n    blockEndNewlines = new RegExp('(^|(?<!\\n))\\n+(?!\\n|$)', 'g');\n}\ncatch {\n    blockEndNewlines = /\\n+(?!\\n|$)/g;\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(blockEndNewlines, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    // Leading | or > is added later\n    let header = (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (!literal) {\n        const foldedValue = value\n            .replace(/\\n+/g, '\\n$&')\n            .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n            //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n            .replace(/\\n+/g, `$&${indent}`);\n        let literalFallback = false;\n        const foldOptions = getFoldOptions(ctx, true);\n        if (blockQuote !== 'folded' && type !== Scalar.BLOCK_FOLDED) {\n            foldOptions.onOverflow = () => {\n                literalFallback = true;\n            };\n        }\n        const body = foldFlowLines(`${start}${foldedValue}${end}`, indent, FOLD_BLOCK, foldOptions);\n        if (!literalFallback)\n            return `>${header}\\n${indent}${body}`;\n    }\n    value = value.replace(/\\n+/g, `$&${indent}`);\n    return `|${header}\\n${indent}${start}${value}${end}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, indentStep, inFlow } = ctx;\n    if ((implicitKey && value.includes('\\n')) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (!value ||\n        /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - empty string, '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (containsDocumentMarker(value)) {\n        if (indent === '') {\n            ctx.forceBlockIndent = true;\n            return blockString(item, ctx, onComment, onChompKeep);\n        }\n        else if (implicitKey && indent === indentStep) {\n            return quotedString(value, ctx);\n        }\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.BLOCK_FOLDED:\n            case Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexport { stringifyString };\n", "import { anchorIsValid } from '../doc/anchors.js';\nimport { isPair, isAlias, isNode, isScalar, isCollection } from '../nodes/identity.js';\nimport { stringifyComment } from './stringifyComment.js';\nimport { stringifyString } from './stringifyString.js';\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        flowCollectionPadding: true,\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        flowCollectionPadding: opt.flowCollectionPadding ? ' ' : '',\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (isScalar(item)) {\n        obj = item.value;\n        let match = tags.filter(t => t.identify?.(obj));\n        if (match.length > 1) {\n            const testMatch = match.filter(t => t.test);\n            if (testMatch.length > 0)\n                match = testMatch;\n        }\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? typeof obj;\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (isScalar(node) || isCollection(node)) && node.anchor;\n    if (anchor && anchorIsValid(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    if (!tagObj)\n        tagObj = getTagObject(ctx.doc.schema.tags, node);\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : isScalar(node)\n            ? stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexport { createStringifyContext, stringify };\n", "import { isCollection, isNode, isScalar, isSeq } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection(key) || (!isNode(key) && typeof key === 'object')) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection(key) ||\n            (isScalar(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vsb, vcb, valueComment;\n    if (isNode(value)) {\n        vsb = !!value.spaceBefore;\n        vcb = value.commentBefore;\n        valueComment = value.comment;\n    }\n    else {\n        vsb = false;\n        vcb = null;\n        valueComment = null;\n        if (value && typeof value === 'object')\n            value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substring(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (keyComment || vsb || vcb) {\n        ws = vsb ? '\\n' : '';\n        if (vcb) {\n            const cs = commentString(vcb);\n            ws += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        if (valueStr === '' && !ctx.inFlow) {\n            if (ws === '\\n')\n                ws = '\\n\\n';\n        }\n        else {\n            ws += `\\n${ctx.indent}`;\n        }\n    }\n    else if (!explicitKey && isCollection(value)) {\n        const vs0 = valueStr[0];\n        const nl0 = valueStr.indexOf('\\n');\n        const hasNewline = nl0 !== -1;\n        const flow = ctx.inFlow ?? value.flow ?? value.items.length === 0;\n        if (hasNewline || !flow) {\n            let hasPropsLine = false;\n            if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n                let sp0 = valueStr.indexOf(' ');\n                if (vs0 === '&' &&\n                    sp0 !== -1 &&\n                    sp0 < nl0 &&\n                    valueStr[sp0 + 1] === '!') {\n                    sp0 = valueStr.indexOf(' ', sp0 + 1);\n                }\n                if (sp0 === -1 || nl0 < sp0)\n                    hasPropsLine = true;\n            }\n            if (!hasPropsLine)\n                ws = `\\n${ctx.indent}`;\n        }\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n') {\n        ws = '';\n    }\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexport { stringifyPair };\n", "function debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        console.warn(warning);\n    }\n}\n\nexport { debug, warn };\n", "import { isScalar, isAlias, isSeq, isMap } from '../../nodes/identity.js';\nimport { Scalar } from '../../nodes/Scalar.js';\n\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nconst MERGE_KEY = '<<';\nconst merge = {\n    identify: value => value === MERGE_KEY ||\n        (typeof value === 'symbol' && value.description === MERGE_KEY),\n    default: 'key',\n    tag: 'tag:yaml.org,2002:merge',\n    test: /^<<$/,\n    resolve: () => Object.assign(new Scalar(Symbol(MERGE_KEY)), {\n        addToJSMap: addMergeToJSMap\n    }),\n    stringify: () => MERGE_KEY\n};\nconst isMergeKey = (ctx, key) => (merge.identify(key) ||\n    (isScalar(key) &&\n        (!key.type || key.type === Scalar.PLAIN) &&\n        merge.identify(key.value))) &&\n    ctx?.doc.schema.tags.some(tag => tag.tag === merge.tag && tag.default);\nfunction addMergeToJSMap(ctx, map, value) {\n    value = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (isSeq(value))\n        for (const it of value.items)\n            mergeValue(ctx, map, it);\n    else if (Array.isArray(value))\n        for (const it of value)\n            mergeValue(ctx, map, it);\n    else\n        mergeValue(ctx, map, value);\n}\nfunction mergeValue(ctx, map, value) {\n    const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\n\nexport { addMergeToJSMap, isMergeKey, merge };\n", "import { warn } from '../log.js';\nimport { isMergeKey, addMergeToJSMap } from '../schema/yaml-1.1/merge.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isNode } from './identity.js';\nimport { toJS } from './toJS.js';\n\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (isNode(key) && key.addToJSMap)\n        key.addToJSMap(ctx, map, value);\n    // TODO: Should drop this special case for bare << handling\n    else if (isMergeKey(ctx, key))\n        addMergeToJSMap(ctx, map, value);\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx?.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexport { addPairToJSMap };\n", "import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './identity.js';\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexport { Pair, createPair };\n", "import { isNode, isPair } from '../nodes/identity.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ items }, ctx, { flowChars, itemIndent }) {\n    const { indent, indentStep, flowCollectionPadding: fcPadding, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik?.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        return start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = ctx.options.lineWidth > 0 && len > ctx.options.lineWidth;\n        }\n        if (reqNewline) {\n            let str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            return `${str}\\n${indent}${end}`;\n        }\n        else {\n            return `${start}${fcPadding}${lines.join(' ')}${fcPadding}${end}`;\n        }\n    }\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexport { stringifyCollection };\n", "import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { Collection } from './Collection.js';\nimport { isPair, isScalar, MAP } from './identity.js';\nimport { Pair, createPair } from './Pair.js';\nimport { isScalarValue } from './Scalar.js';\n\nfunction findPair(items, key) {\n    const k = isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    constructor(schema) {\n        super(MAP, schema);\n        this.items = [];\n    }\n    /**\n     * A generic collection parsing method that can be extended\n     * to other node classes that inherit from YAMLMap\n     */\n    static from(schema, obj, ctx) {\n        const { keepUndefined, replacer } = ctx;\n        const map = new this(schema);\n        const add = (key, value) => {\n            if (typeof replacer === 'function')\n                value = replacer.call(obj, key, value);\n            else if (Array.isArray(replacer) && !replacer.includes(key))\n                return;\n            if (value !== undefined || keepUndefined)\n                map.items.push(createPair(key, value, ctx));\n        };\n        if (obj instanceof Map) {\n            for (const [key, value] of obj)\n                add(key, value);\n        }\n        else if (obj && typeof obj === 'object') {\n            for (const key of Object.keys(obj))\n                add(key, obj[key]);\n        }\n        if (typeof schema.sortMapEntries === 'function') {\n            map.items.sort(schema.sortMapEntries);\n        }\n        return map;\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (isScalar(prev.value) && isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexport { YAMLMap, findPair };\n", "import { isMap } from '../../nodes/identity.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\n\nconst map = {\n    collection: 'map',\n    default: true,\n    nodeClass: YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode: (schema, obj, ctx) => YAMLMap.from(schema, obj, ctx)\n};\n\nexport { map };\n", "import { createNode } from '../doc/createNode.js';\nimport { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './identity.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nclass YAMLSeq extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n    static from(schema, obj, ctx) {\n        const { replacer } = ctx;\n        const seq = new this(schema);\n        if (obj && Symbol.iterator in Object(obj)) {\n            let i = 0;\n            for (let it of obj) {\n                if (typeof replacer === 'function') {\n                    const key = obj instanceof Set ? it : String(i++);\n                    it = replacer.call(obj, key, it);\n                }\n                seq.items.push(createNode(it, undefined, ctx));\n            }\n        }\n        return seq;\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexport { YAMLSeq };\n", "import { isSeq } from '../../nodes/identity.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nconst seq = {\n    collection: 'seq',\n    default: true,\n    nodeClass: YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    },\n    createNode: (schema, obj, ctx) => YAMLSeq.from(schema, obj, ctx)\n};\n\nexport { seq };\n", "import { stringifyString } from '../../stringify/stringifyString.js';\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { string };\n", "import { Scalar } from '../../nodes/Scalar.js';\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexport { nullTag };\n", "import { Scalar } from '../../nodes/Scalar.js';\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexport { boolTag };\n", "function stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexport { stringifyNumber };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n", "import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intHex, intOct };\n", "import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { boolTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intOct, int, intHex } from './int.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    boolTag,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float\n];\n\nexport { schema };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { map } from '../common/map.js';\nimport { seq } from '../common/seq.js';\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true$|^false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map, seq].concat(jsonScalars, jsonError);\n\nexport { schema };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyString } from '../../stringify/stringifyString.js';\n\nconst binary = {\n    identify: value => value instanceof Uint8Array, // Buffer inherits from Uint8Array\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        if (!value)\n            return '';\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        if (!type)\n            type = Scalar.BLOCK_LITERAL;\n        if (type !== Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { binary };\n", "import { isSeq, isPair, isMap } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction resolvePairs(seq, onError) {\n    if (isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (isPair(item))\n                continue;\n            else if (isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair(new Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = isPair(item) ? item : new Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else {\n                    throw new TypeError(`Expected tuple with one key, not ${keys.length} keys`);\n                }\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexport { createPairs, pairs, resolvePairs };\n", "import { isScalar, isPair } from '../../nodes/identity.js';\nimport { toJS } from '../../nodes/toJS.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { resolvePairs, createPairs } from './pairs.js';\n\nclass YAMLOMap extends YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (isPair(pair)) {\n                key = toJS(pair.key, '', ctx);\n                value = toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n    static from(schema, iterable, ctx) {\n        const pairs = createPairs(schema, iterable, ctx);\n        const omap = new this();\n        omap.items = pairs.items;\n        return omap;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if (isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode: (schema, iterable, ctx) => YAMLOMap.from(schema, iterable, ctx)\n};\n\nexport { YAMLOMap, omap };\n", "import { Scalar } from '../../nodes/Scalar.js';\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/,\n    resolve: () => new Scalar(false),\n    stringify: boolStringify\n};\n\nexport { falseTag, trueTag };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n", "import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intBin, intHex, intOct };\n", "import { isMap, isPair, isScalar } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { YAMLMap, findPair } from '../../nodes/YAMLMap.js';\n\nclass YAMLSet extends YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (isPair(key))\n            pair = key;\n        else if (key &&\n            typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair(key.key, null);\n        else\n            pair = new Pair(key, null);\n        const prev = findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = findPair(this.items, key);\n        return !keepPair && isPair(pair)\n            ? isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n    static from(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new this(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(createPair(value, null, ctx));\n            }\n        return set;\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    createNode: (schema, iterable, ctx) => YAMLSet.from(schema, iterable, ctx),\n    resolve(map, onError) {\n        if (isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexport { YAMLSet, set };\n", "import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => String(n).padStart(2, '0'))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value?.toISOString().replace(/(T00:00:00)?\\.000Z$/, '') ?? ''\n};\n\nexport { floatTime, intTime, timestamp };\n", "import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { binary } from './binary.js';\nimport { trueTag, falseTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intBin, intOct, int, intHex } from './int.js';\nimport { merge } from './merge.js';\nimport { omap } from './omap.js';\nimport { pairs } from './pairs.js';\nimport { set } from './set.js';\nimport { intTime, floatTime, timestamp } from './timestamp.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    trueTag,\n    falseTag,\n    intBin,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float,\n    binary,\n    merge,\n    omap,\n    pairs,\n    set,\n    intTime,\n    floatTime,\n    timestamp\n];\n\nexport { schema };\n", "import { map } from './common/map.js';\nimport { nullTag } from './common/null.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { boolTag } from './core/bool.js';\nimport { float, floatExp, floatNaN } from './core/float.js';\nimport { int, intHex, intOct } from './core/int.js';\nimport { schema } from './core/schema.js';\nimport { schema as schema$1 } from './json/schema.js';\nimport { binary } from './yaml-1.1/binary.js';\nimport { merge } from './yaml-1.1/merge.js';\nimport { omap } from './yaml-1.1/omap.js';\nimport { pairs } from './yaml-1.1/pairs.js';\nimport { schema as schema$2 } from './yaml-1.1/schema.js';\nimport { set } from './yaml-1.1/set.js';\nimport { timestamp, floatTime, intTime } from './yaml-1.1/timestamp.js';\n\nconst schemas = new Map([\n    ['core', schema],\n    ['failsafe', [map, seq, string]],\n    ['json', schema$1],\n    ['yaml11', schema$2],\n    ['yaml-1.1', schema$2]\n]);\nconst tagsByName = {\n    binary,\n    bool: boolTag,\n    float,\n    floatExp,\n    floatNaN,\n    floatTime,\n    int,\n    intHex,\n    intOct,\n    intTime,\n    map,\n    merge,\n    null: nullTag,\n    omap,\n    pairs,\n    seq,\n    set,\n    timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary,\n    'tag:yaml.org,2002:merge': merge,\n    'tag:yaml.org,2002:omap': omap,\n    'tag:yaml.org,2002:pairs': pairs,\n    'tag:yaml.org,2002:set': set,\n    'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName, addMergeTag) {\n    const schemaTags = schemas.get(schemaName);\n    if (schemaTags && !customTags) {\n        return addMergeTag && !schemaTags.includes(merge)\n            ? schemaTags.concat(merge)\n            : schemaTags.slice();\n    }\n    let tags = schemaTags;\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    if (addMergeTag)\n        tags = tags.concat(merge);\n    return tags.reduce((tags, tag) => {\n        const tagObj = typeof tag === 'string' ? tagsByName[tag] : tag;\n        if (!tagObj) {\n            const tagName = JSON.stringify(tag);\n            const keys = Object.keys(tagsByName)\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown custom tag ${tagName}; use one of ${keys}`);\n        }\n        if (!tags.includes(tagObj))\n            tags.push(tagObj);\n        return tags;\n    }, []);\n}\n\nexport { coreKnownTags, getTags };\n", "import { MAP, SCALAR, SEQ } from '../nodes/identity.js';\nimport { map } from './common/map.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { getTags, coreKnownTags } from './tags.js';\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? getTags(compat, 'compat')\n            : compat\n                ? getTags(null, compat)\n                : null;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? coreKnownTags : {};\n        this.tags = getTags(customTags, this.name, merge);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, MAP, { value: map });\n        Object.defineProperty(this, SCALAR, { value: string });\n        Object.defineProperty(this, SEQ, { value: seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexport { Schema };\n", "import { isNode } from '../nodes/identity.js';\nimport { createStringifyContext, stringify } from './stringify.js';\nimport { indentComment, lineComment } from './stringifyComment.js';\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexport { stringifyDocument };\n", "import { Alias } from '../nodes/Alias.js';\nimport { isEmptyPath, collectionFromPath } from '../nodes/Collection.js';\nimport { NODE_TYPE, DOC, isNode, isCollection, isScalar } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { toJS } from '../nodes/toJS.js';\nimport { Schema } from '../schema/Schema.js';\nimport { stringifyDocument } from '../stringify/stringifyDocument.js';\nimport { anchorNames, findNewAnchor, createNodeAnchors } from './anchors.js';\nimport { applyReviver } from './applyReviver.js';\nimport { createNode } from './createNode.js';\nimport { Directives } from './directives.js';\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, NODE_TYPE, { value: DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            stringKeys: false,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new Directives({ version });\n        this.setSchema(version, options);\n        // @ts-expect-error We can't really know that this matches Contents.\n        this.contents =\n            value === undefined ? null : this.createNode(value, _replacer, options);\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [NODE_TYPE]: { value: DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        // @ts-expect-error We can't really know that this matches Contents.\n        copy.contents = isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode(value, tag, ctx);\n        if (flow && isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            // @ts-expect-error Presumed impossible if Strict extends false\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (isEmptyPath(path))\n            return !keepScalar && isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (isEmptyPath(path))\n            return this.contents !== undefined;\n        return isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (isEmptyPath(path)) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = value;\n        }\n        else if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new Directives({ version: '1.1' });\n                opt = { resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new Directives({ version });\n                opt = { resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexport { Document };\n", "class YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '…' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '…';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '…\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.max(1, Math.min(end.col - col, 80 - ci));\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexport { YAMLError, YAMLParseError, YAMLWarning, prettifyError };\n", "function resolveProps(tokens, { flow, indicator, next, offset, onError, parentIndent, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let reqSpace = false;\n    let tab = null;\n    let anchor = null;\n    let tag = null;\n    let newlineAfterProp = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        if (tab) {\n            if (atNewline && token.type !== 'comment' && token.type !== 'newline') {\n                onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n            }\n            tab = null;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    (indicator !== 'doc-start' || next?.type !== 'flow-collection') &&\n                    token.source.includes('\\t')) {\n                    tab = token;\n                }\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else if (!found || indicator !== 'seq-item-ind')\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    newlineAfterProp = token;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline =\n                    indicator === 'seq-item-ind' || indicator === 'explicit-key-ind';\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== '')) {\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    }\n    if (tab &&\n        ((atNewline && tab.indent <= parentIndent) ||\n            next?.type === 'block-map' ||\n            next?.type === 'block-seq'))\n        onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        anchor,\n        tag,\n        newlineAfterProp,\n        end,\n        start: start ?? end\n    };\n}\n\nexport { resolveProps };\n", "function containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexport { containsNewline };\n", "import { containsNewline } from './util-contains-newline.js';\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexport { flowIndentCheck };\n", "import { isScalar } from '../nodes/identity.js';\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b || (isScalar(a) && isScalar(b) && a.value === b.value);\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexport { mapIncludes };\n", "import { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLMap;\n    const map = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    let commentEnd = null;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                commentEnd = keyProps.end;\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.newlineAfterProp || containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        ctx.atKey = true;\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bm.indent, key, onError);\n        ctx.atKey = false;\n        if (mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    if (commentEnd && commentEnd < offset)\n        onError(commentEnd, 'IMPOSSIBLE', 'Map comment with trailing content');\n    map.range = [bm.offset, offset, commentEnd ?? offset];\n    return map;\n}\n\nexport { resolveBlockMap };\n", "import { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveProps } from './resolve-props.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLSeq;\n    const seq = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = bs.offset;\n    let commentEnd = null;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            parentIndent: bs.indent,\n            startOnNewline: true\n        });\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(props.end, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                commentEnd = props.end;\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, props.end, start, null, props, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, commentEnd ?? offset];\n    return seq;\n}\n\nexport { resolveBlockSeq };\n", "function resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexport { resolveEnd };\n", "import { isPair } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError, tag) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const NodeClass = (tag?.nodeClass ?? (isMap ? YAMLMap : YAMLSeq));\n    const coll = new NodeClass(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: fc.indent,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // → key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            ctx.atKey = true;\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            ctx.atKey = false;\n            // value properties\n            const valueProps = resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                parentIndent: fc.indent,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                const endRange = (valueNode ?? keyNode).range;\n                map.range = [keyNode.range[0], endRange[1], endRange[2]];\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexport { resolveFlowCollection };\n", "import { isNode } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveBlockMap } from './resolve-block-map.js';\nimport { resolveBlockSeq } from './resolve-block-seq.js';\nimport { resolveFlowCollection } from './resolve-flow-collection.js';\n\nfunction resolveCollection(CN, ctx, token, onError, tagName, tag) {\n    const coll = token.type === 'block-map'\n        ? resolveBlockMap(CN, ctx, token, onError, tag)\n        : token.type === 'block-seq'\n            ? resolveBlockSeq(CN, ctx, token, onError, tag)\n            : resolveFlowCollection(CN, ctx, token, onError, tag);\n    const Coll = coll.constructor;\n    // If we got a tagName matching the class, or the tag name is '!',\n    // then use the tagName from the node class used to create it.\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    if (tagName)\n        coll.tag = tagName;\n    return coll;\n}\nfunction composeCollection(CN, ctx, token, props, onError) {\n    const tagToken = props.tag;\n    const tagName = !tagToken\n        ? null\n        : ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    if (token.type === 'block-seq') {\n        const { anchor, newlineAfterProp: nl } = props;\n        const lastProp = anchor && tagToken\n            ? anchor.offset > tagToken.offset\n                ? anchor\n                : tagToken\n            : (anchor ?? tagToken);\n        if (lastProp && (!nl || nl.offset < lastProp.offset)) {\n            const message = 'Missing newline after block sequence props';\n            onError(lastProp, 'MISSING_CHAR', message);\n        }\n    }\n    const expType = token.type === 'block-map'\n        ? 'map'\n        : token.type === 'block-seq'\n            ? 'seq'\n            : token.start.source === '{'\n                ? 'map'\n                : 'seq';\n    // shortcut: check if it's a generic YAMLMap or YAMLSeq\n    // before jumping into the custom tag logic.\n    if (!tagToken ||\n        !tagName ||\n        tagName === '!' ||\n        (tagName === YAMLMap.tagName && expType === 'map') ||\n        (tagName === YAMLSeq.tagName && expType === 'seq')) {\n        return resolveCollection(CN, ctx, token, onError, tagName);\n    }\n    let tag = ctx.schema.tags.find(t => t.tag === tagName && t.collection === expType);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            if (kt) {\n                onError(tagToken, 'BAD_COLLECTION_TYPE', `${kt.tag} used for ${expType} collection, but expects ${kt.collection ?? 'scalar'}`, true);\n            }\n            else {\n                onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            }\n            return resolveCollection(CN, ctx, token, onError, tagName);\n        }\n    }\n    const coll = resolveCollection(CN, ctx, token, onError, tagName, tag);\n    const res = tag.resolve?.(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options) ?? coll;\n    const node = isNode(res)\n        ? res\n        : new Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nexport { composeCollection };\n", "import { Scalar } from '../nodes/Scalar.js';\n\nfunction resolveBlockScalar(ctx, scalar, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, ctx.options.strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            if (trimIndent === 0 && !ctx.atRoot) {\n                const message = 'Block scalar values in collections must be indented';\n                onError(offset, 'BAD_INDENT', message);\n            }\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexport { resolveBlockScalar };\n", "import { Scalar } from '../nodes/Scalar.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0', // null character\n    a: '\\x07', // bell character\n    b: '\\b', // backspace\n    e: '\\x1b', // escape character\n    f: '\\f', // form feed\n    n: '\\n', // line feed\n    r: '\\r', // carriage return\n    t: '\\t', // horizontal tab\n    v: '\\v', // vertical tab\n    N: '\\u0085', // Unicode next line\n    _: '\\u00a0', // Unicode non-breaking space\n    L: '\\u2028', // Unicode line separator\n    P: '\\u2029', // Unicode paragraph separator\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexport { resolveFlowScalar };\n", "import { isScalar, SCALAR } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(ctx, token, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    let tag;\n    if (ctx.options.stringKeys && ctx.atKey) {\n        tag = ctx.schema[SCALAR];\n    }\n    else if (tagName)\n        tag = findScalarTagByName(ctx.schema, value, tagName, tagToken, onError);\n    else if (token.type === 'scalar')\n        tag = findScalarTagByTest(ctx, value, token, onError);\n    else\n        tag = ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ atKey, directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => (tag.default === true || (atKey && tag.default === 'key')) &&\n        tag.test?.test(value)) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n", "function emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        if (pos === null)\n            pos = before.length;\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexport { emptyScalarPosition };\n", "import { Alias } from '../nodes/Alias.js';\nimport { isScalar } from '../nodes/identity.js';\nimport { composeCollection } from './compose-collection.js';\nimport { composeScalar } from './compose-scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { emptyScalarPosition } from './util-empty-scalar-position.js';\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const atKey = ctx.atKey;\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection(CN, ctx, token, props, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (atKey &&\n        ctx.options.stringKeys &&\n        (!isScalar(node) ||\n            typeof node.value !== 'string' ||\n            (node.tag && node.tag !== 'tag:yaml.org,2002:str'))) {\n        const msg = 'With stringKeys, all keys must be strings';\n        onError(tag ?? token, 'NON_STRING_KEY', msg);\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag, end }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        node.comment = comment;\n        node.range[2] = end;\n    }\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexport { composeEmptyNode, composeNode };\n", "import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atKey: false,\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        parentIndent: 0,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    // @ts-expect-error If Contents is set, let's trust the user\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexport { composeDoc };\n", "import { Directives } from '../doc/directives.js';\nimport { Document } from '../doc/Document.js';\nimport { YAMLWarning, YAMLParseError } from '../errors.js';\nimport { isCollection, isPair } from '../nodes/identity.js';\nimport { composeDoc } from './compose-doc.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexport { Composer };\n", "const BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` – Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` – Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` – Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` – The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexport { visit };\n", "export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };\n", "import { BOM, DOCUMENT, FLOW_END, SCALAR } from './cst.js';\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = new Set('0123456789ABCDEFabcdef');\nconst tagChars = new Set(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\");\nconst flowIndicatorChars = new Set(',[]{}');\nconst invalidAnchorChars = new Set(' ,[]{}\\n\\r\\t');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.has(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            if (typeof source !== 'string')\n                throw TypeError('source is not a string');\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            let cs = line.indexOf('#');\n            while (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t') {\n                    dirEnd = cs - 1;\n                    break;\n                }\n                else {\n                    cs = line.indexOf('#', cs + 1);\n                }\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if ((s === '---' || s === '...') && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return s === '---' ? 'doc' : 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else {\n                this.indentNext =\n                    this.blockScalarIndent + (this.indentNext === 0 ? 1 : this.indentNext);\n            }\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        // Trailing insufficiently indented tabs are invalid.\n        // To catch that during parsing, we include them in the block scalar value.\n        let i = nl + 1;\n        ch = this.buffer[i];\n        while (ch === ' ')\n            ch = this.buffer[++i];\n        if (ch === '\\t') {\n            while (ch === '\\t' || ch === ' ' || ch === '\\r' || ch === '\\n')\n                ch = this.buffer[++i];\n            nl = i - 1;\n        }\n        else if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && flowIndicatorChars.has(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && flowIndicatorChars.has(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.has(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.has(this.buffer[i + 1]) &&\n                    hexDigits.has(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexport { Lexer };\n", "/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexport { LineCounter };\n", "import { tokenType } from './cst.js';\nimport { Lexer } from './lexer.js';\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !it.explicitKey;\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atMapIndent = !this.onKeyLine && this.indent === map.indent;\n            const atNextItem = atMapIndent &&\n                (it.sep || it.explicitKey) &&\n                this.type !== 'seq-item-ind';\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !it.explicitKey) {\n                        it.start.push(this.sourceToken);\n                        it.explicitKey = true;\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start, explicitKey: true });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken], explicitKey: true }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (it.explicitKey) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key;\n                            // @ts-expect-error type guard is wrong here\n                            delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (bv.type === 'block-seq') {\n                            if (!it.explicitKey &&\n                                it.sep &&\n                                !includesToken(it.sep, 'newline')) {\n                                yield* this.pop({\n                                    type: 'error',\n                                    offset: this.offset,\n                                    message: 'Unexpected block-seq-ind on same line with key',\n                                    source: this.source\n                                });\n                                return;\n                            }\n                        }\n                        else if (atMapIndent) {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, explicitKey: true }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexport { Parser };\n", "import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { isDocument } from './nodes/identity.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    if (isDocument(value) && !_replacer)\n        return value.toString(options);\n    return new Document(value, _replacer, options).toString(options);\n}\n\nexport { parse, parseAllDocuments, parseDocument, stringify };\n", "import { Hook, buildJSItem, buildCSSItem, loadJS, noop, wrapFunction, UrlBuilder } from \"markmap-common\";\nimport { buildTree } from \"markmap-html-parser\";\nimport MarkdownIt from \"markdown-it\";\nimport md_ins from \"markdown-it-ins\";\nimport md_mark from \"markdown-it-mark\";\nimport md_sub from \"markdown-it-sub\";\nimport md_sup from \"markdown-it-sup\";\nimport { parse } from \"yaml\";\nimport katexPluginModule from \"@vscode/markdown-it-katex\";\nfunction initializeMarkdownIt() {\n  const md = MarkdownIt({\n    html: true,\n    breaks: true\n  });\n  md.use(md_ins).use(md_mark).use(md_sub).use(md_sup);\n  return md;\n}\nfunction createTransformHooks(transformer) {\n  return {\n    transformer,\n    parser: new Hook(),\n    beforeParse: new Hook(),\n    afterParse: new Hook(),\n    retransform: new Hook()\n  };\n}\nfunction definePlugin(plugin2) {\n  return plugin2;\n}\nconst svgMarked = '<svg width=\"16\" height=\"16\" viewBox=\"0 -3 24 24\"><path d=\"M19 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2m-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"/></svg>\\n';\nconst svgUnmarked = '<svg width=\"16\" height=\"16\" viewBox=\"0 -3 24 24\"><path fill-rule=\"evenodd\" d=\"M6 5a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1zM3 6a3 3 0 0 1 3-3h12a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3v-5z\" clip-rule=\"evenodd\"/></svg>\\n';\nconst name$5 = \"checkbox\";\nconst images = {\n  \" \": svgUnmarked.trim(),\n  x: svgMarked.trim()\n};\nconst plugin$3 = definePlugin({\n  name: name$5,\n  transform(transformHooks) {\n    transformHooks.parser.tap((md) => {\n      md.core.ruler.before(\"inline\", \"checkbox\", (state) => {\n        for (let i = 2; i < state.tokens.length; i += 1) {\n          const token = state.tokens[i];\n          if (token.type === \"inline\" && token.content) {\n            const prevType = state.tokens[i - 1].type;\n            const prevPrevType = state.tokens[i - 2].type;\n            if (prevType === \"heading_open\" || prevType === \"paragraph_open\" && prevPrevType === \"list_item_open\") {\n              token.content = token.content.replace(\n                /^\\[(.)\\] /,\n                (m, g) => images[g] ? `${images[g]} ` : m\n              );\n            }\n          }\n        }\n        return false;\n      });\n    });\n    return {};\n  }\n});\nconst name$4 = \"frontmatter\";\nconst pluginFrontmatter = definePlugin({\n  name: name$4,\n  transform(transformHooks) {\n    transformHooks.beforeParse.tap((_md, context) => {\n      var _a;\n      const { content } = context;\n      if (!/^---\\r?\\n/.test(content)) return;\n      const match = /\\n---\\r?\\n/.exec(content);\n      if (!match) return;\n      const raw = content.slice(4, match.index).trimEnd();\n      let frontmatter;\n      try {\n        frontmatter = parse(raw.replace(/\\r?\\n|\\r/g, \"\\n\"));\n        if (frontmatter == null ? void 0 : frontmatter.markmap) {\n          frontmatter.markmap = normalizeMarkmapJsonOptions(\n            frontmatter.markmap\n          );\n        }\n      } catch {\n        return;\n      }\n      context.frontmatter = frontmatter;\n      context.parserOptions = {\n        ...context.parserOptions,\n        ...(_a = frontmatter == null ? void 0 : frontmatter.markmap) == null ? void 0 : _a.htmlParser\n      };\n      context.frontmatterInfo = {\n        lines: content.slice(0, match.index).split(\"\\n\").length + 1,\n        offset: match.index + match[0].length\n      };\n    });\n    return {};\n  }\n});\nfunction normalizeMarkmapJsonOptions(options) {\n  if (!options) return;\n  [\"color\", \"extraJs\", \"extraCss\"].forEach((key) => {\n    if (options[key] != null) options[key] = normalizeStringArray(options[key]);\n  });\n  [\"duration\", \"maxWidth\", \"initialExpandLevel\"].forEach((key) => {\n    if (options[key] != null) options[key] = normalizeNumber(options[key]);\n  });\n  return options;\n}\nfunction normalizeStringArray(value) {\n  let result;\n  if (typeof value === \"string\") result = [value];\n  else if (Array.isArray(value))\n    result = value.filter((item) => item && typeof item === \"string\");\n  return (result == null ? void 0 : result.length) ? result : void 0;\n}\nfunction normalizeNumber(value) {\n  if (isNaN(+value)) return;\n  return +value;\n}\nfunction patchJSItem(urlBuilder, item) {\n  if (item.type === \"script\" && item.data.src) {\n    return {\n      ...item,\n      data: {\n        ...item.data,\n        src: urlBuilder.getFullUrl(item.data.src)\n      }\n    };\n  }\n  return item;\n}\nfunction patchCSSItem(urlBuilder, item) {\n  if (item.type === \"stylesheet\" && item.data.href) {\n    return {\n      ...item,\n      data: {\n        ...item.data,\n        href: urlBuilder.getFullUrl(item.data.href)\n      }\n    };\n  }\n  return item;\n}\nconst name$3 = \"hljs\";\nconst preloadScripts$1 = [\n  `@highlightjs/cdn-assets@${\"11.11.1\"}/highlight.min.js`\n].map((path) => buildJSItem(path));\nconst styles$1 = [\n  `@highlightjs/cdn-assets@${\"11.11.1\"}/styles/default.min.css`\n].map((path) => buildCSSItem(path));\nconst config$1 = {\n  versions: {\n    hljs: \"11.11.1\"\n  },\n  preloadScripts: preloadScripts$1,\n  styles: styles$1\n};\nconst plugin$2 = definePlugin({\n  name: name$3,\n  config: config$1,\n  transform(transformHooks) {\n    var _a, _b, _c;\n    let loading;\n    const preloadScripts2 = ((_b = (_a = plugin$2.config) == null ? void 0 : _a.preloadScripts) == null ? void 0 : _b.map(\n      (item) => patchJSItem(transformHooks.transformer.urlBuilder, item)\n    )) || [];\n    const autoload = () => {\n      loading || (loading = loadJS(preloadScripts2));\n      return loading;\n    };\n    let enableFeature = noop;\n    transformHooks.parser.tap((md) => {\n      md.set({\n        highlight: (str, language) => {\n          enableFeature();\n          const { hljs } = window;\n          if (hljs) {\n            return hljs.highlightAuto(str, language ? [language] : void 0).value;\n          }\n          autoload().then(() => {\n            transformHooks.retransform.call();\n          });\n          return str;\n        }\n      });\n    });\n    transformHooks.beforeParse.tap((_, context) => {\n      enableFeature = () => {\n        context.features[name$3] = true;\n      };\n    });\n    return {\n      styles: (_c = plugin$2.config) == null ? void 0 : _c.styles\n    };\n  }\n});\nfunction addDefaultVersions(paths, name2, version) {\n  return paths.map((path) => {\n    if (typeof path === \"string\" && !path.includes(\"://\")) {\n      if (!path.startsWith(\"npm:\")) {\n        path = `npm:${path}`;\n      }\n      const prefixLength = 4 + name2.length;\n      if (path.startsWith(`npm:${name2}/`)) {\n        path = `${path.slice(0, prefixLength)}@${version}${path.slice(\n          prefixLength\n        )}`;\n      }\n    }\n    return path;\n  });\n}\nvar define_define_KATEX_RESOURCES_default = [\"katex@0.16.18/dist/fonts/KaTeX_AMS-Regular.woff2\", \"katex@0.16.18/dist/fonts/KaTeX_Caligraphic-Bold.woff2\", \"katex@0.16.18/dist/fonts/KaTeX_Caligraphic-Regular.woff2\", \"katex@0.16.18/dist/fonts/KaTeX_Fraktur-Bold.woff2\", \"katex@0.16.18/dist/fonts/KaTeX_Fraktur-Regular.woff2\", \"katex@0.16.18/dist/fonts/KaTeX_Main-Bold.woff2\", \"katex@0.16.18/dist/fonts/KaTeX_Main-BoldItalic.woff2\", \"katex@0.16.18/dist/fonts/KaTeX_Main-Italic.woff2\", \"katex@0.16.18/dist/fonts/KaTeX_Main-Regular.woff2\", \"katex@0.16.18/dist/fonts/KaTeX_Math-BoldItalic.woff2\", \"katex@0.16.18/dist/fonts/KaTeX_Math-Italic.woff2\", \"katex@0.16.18/dist/fonts/KaTeX_SansSerif-Bold.woff2\", \"katex@0.16.18/dist/fonts/KaTeX_SansSerif-Italic.woff2\", \"katex@0.16.18/dist/fonts/KaTeX_SansSerif-Regular.woff2\", \"katex@0.16.18/dist/fonts/KaTeX_Script-Regular.woff2\", \"katex@0.16.18/dist/fonts/KaTeX_Size1-Regular.woff2\", \"katex@0.16.18/dist/fonts/KaTeX_Size2-Regular.woff2\", \"katex@0.16.18/dist/fonts/KaTeX_Size3-Regular.woff2\", \"katex@0.16.18/dist/fonts/KaTeX_Size4-Regular.woff2\", \"katex@0.16.18/dist/fonts/KaTeX_Typewriter-Regular.woff2\"];\nconst name$2 = \"katex\";\nconst preloadScripts = [\n  `katex@${\"0.16.18\"}/dist/katex.min.js`\n].map((path) => buildJSItem(path));\nconst webfontloader = buildJSItem(\n  `webfontloader@${\"1.6.28\"}/webfontloader.js`\n);\nwebfontloader.data.defer = true;\nconst styles = [`katex@${\"0.16.18\"}/dist/katex.min.css`].map(\n  (path) => buildCSSItem(path)\n);\nconst config = {\n  versions: {\n    katex: \"0.16.18\",\n    webfontloader: \"1.6.28\"\n  },\n  preloadScripts,\n  scripts: [\n    {\n      type: \"iife\",\n      data: {\n        fn: (getMarkmap) => {\n          window.WebFontConfig = {\n            custom: {\n              families: [\n                \"KaTeX_AMS\",\n                \"KaTeX_Caligraphic:n4,n7\",\n                \"KaTeX_Fraktur:n4,n7\",\n                \"KaTeX_Main:n4,n7,i4,i7\",\n                \"KaTeX_Math:i4,i7\",\n                \"KaTeX_Script\",\n                \"KaTeX_SansSerif:n4,n7,i4\",\n                \"KaTeX_Size1\",\n                \"KaTeX_Size2\",\n                \"KaTeX_Size3\",\n                \"KaTeX_Size4\",\n                \"KaTeX_Typewriter\"\n              ]\n            },\n            active: () => {\n              getMarkmap().refreshHook.call();\n            }\n          };\n        },\n        getParams({ getMarkmap }) {\n          return [getMarkmap];\n        }\n      }\n    },\n    webfontloader\n  ],\n  styles,\n  resources: define_define_KATEX_RESOURCES_default\n};\nfunction interop(mod) {\n  return mod.default || mod;\n}\nconst katexPlugin = interop(katexPluginModule);\nconst plugin$1 = definePlugin({\n  name: name$2,\n  config,\n  transform(transformHooks) {\n    var _a, _b, _c, _d;\n    let loading;\n    const preloadScripts2 = ((_b = (_a = plugin$1.config) == null ? void 0 : _a.preloadScripts) == null ? void 0 : _b.map(\n      (item) => patchJSItem(transformHooks.transformer.urlBuilder, item)\n    )) || [];\n    const autoload = () => {\n      loading || (loading = loadJS(preloadScripts2));\n      return loading;\n    };\n    const renderKatex = (source, displayMode) => {\n      const { katex } = window;\n      if (katex) {\n        return katex.renderToString(source, {\n          displayMode,\n          throwOnError: false\n        });\n      }\n      autoload().then(() => {\n        transformHooks.retransform.call();\n      });\n      return source;\n    };\n    let enableFeature = noop;\n    transformHooks.parser.tap((md) => {\n      md.use(katexPlugin);\n      [\"math_block\", \"math_inline\"].forEach((key) => {\n        const fn = (tokens, idx) => {\n          enableFeature();\n          const result = renderKatex(tokens[idx].content, !!tokens[idx].block);\n          return result;\n        };\n        md.renderer.rules[key] = fn;\n      });\n    });\n    transformHooks.beforeParse.tap((_, context) => {\n      enableFeature = () => {\n        context.features[name$2] = true;\n      };\n    });\n    transformHooks.afterParse.tap((_, context) => {\n      var _a2;\n      const markmap = (_a2 = context.frontmatter) == null ? void 0 : _a2.markmap;\n      if (markmap) {\n        [\"extraJs\", \"extraCss\"].forEach((key) => {\n          var _a3, _b2;\n          const value = markmap[key];\n          if (value) {\n            markmap[key] = addDefaultVersions(\n              value,\n              name$2,\n              ((_b2 = (_a3 = plugin$1.config) == null ? void 0 : _a3.versions) == null ? void 0 : _b2.katex) || \"\"\n            );\n          }\n        });\n      }\n    });\n    return {\n      styles: (_c = plugin$1.config) == null ? void 0 : _c.styles,\n      scripts: (_d = plugin$1.config) == null ? void 0 : _d.scripts\n    };\n  }\n});\nconst name$1 = \"npmUrl\";\nconst pluginNpmUrl = definePlugin({\n  name: name$1,\n  transform(transformHooks) {\n    transformHooks.afterParse.tap((_, context) => {\n      const { frontmatter } = context;\n      const markmap = frontmatter == null ? void 0 : frontmatter.markmap;\n      if (markmap) {\n        [\"extraJs\", \"extraCss\"].forEach((key) => {\n          const value = markmap[key];\n          if (value) {\n            markmap[key] = value.map((path) => {\n              if (path.startsWith(\"npm:\")) {\n                return transformHooks.transformer.urlBuilder.getFullUrl(\n                  path.slice(4)\n                );\n              }\n              return path;\n            });\n          }\n        });\n      }\n    });\n    return {};\n  }\n});\nconst name = \"sourceLines\";\nconst plugin = definePlugin({\n  name,\n  transform(transformHooks) {\n    let frontmatterLines = 0;\n    transformHooks.beforeParse.tap((_md, context) => {\n      var _a;\n      frontmatterLines = ((_a = context.frontmatterInfo) == null ? void 0 : _a.lines) || 0;\n    });\n    transformHooks.parser.tap((md) => {\n      md.renderer.renderAttrs = wrapFunction(\n        md.renderer.renderAttrs,\n        (renderAttrs, token) => {\n          if (token.block && token.map) {\n            const lineRange = token.map.map((line) => line + frontmatterLines);\n            token.attrSet(\"data-lines\", lineRange.join(\",\"));\n          }\n          return renderAttrs(token);\n        }\n      );\n      if (md.renderer.rules.fence) {\n        md.renderer.rules.fence = wrapFunction(\n          md.renderer.rules.fence,\n          (fence, tokens, idx, ...rest) => {\n            let result = fence(tokens, idx, ...rest);\n            const token = tokens[idx];\n            if (result.startsWith(\"<pre>\") && token.map) {\n              const lineRange = token.map.map(\n                (line) => line + frontmatterLines\n              );\n              result = result.slice(0, 4) + ` data-lines=\"${lineRange.join(\",\")}\"` + result.slice(4);\n            }\n            return result;\n          }\n        );\n      }\n    });\n    return {};\n  }\n});\nconst plugins = [\n  pluginFrontmatter,\n  plugin$1,\n  plugin$2,\n  pluginNpmUrl,\n  plugin$3,\n  plugin\n];\nconst builtInPlugins = plugins;\nfunction cleanNode(node) {\n  while (!node.content && node.children.length === 1) {\n    node = node.children[0];\n  }\n  while (node.children.length === 1 && !node.children[0].content) {\n    node = {\n      ...node,\n      children: node.children[0].children\n    };\n  }\n  return {\n    ...node,\n    children: node.children.map(cleanNode)\n  };\n}\nclass Transformer {\n  constructor(plugins2 = builtInPlugins) {\n    this.assetsMap = {};\n    this.urlBuilder = new UrlBuilder();\n    this.hooks = createTransformHooks(this);\n    this.plugins = plugins2.map(\n      (plugin2) => typeof plugin2 === \"function\" ? plugin2() : plugin2\n    );\n    const assetsMap = {};\n    for (const { name: name2, transform } of this.plugins) {\n      assetsMap[name2] = transform(this.hooks);\n    }\n    this.assetsMap = assetsMap;\n    const md = initializeMarkdownIt();\n    this.md = md;\n    this.hooks.parser.call(md);\n  }\n  transform(content, fallbackParserOptions) {\n    var _a;\n    const context = {\n      content,\n      features: {},\n      parserOptions: fallbackParserOptions\n    };\n    this.hooks.beforeParse.call(this.md, context);\n    let { content: rawContent } = context;\n    if (context.frontmatterInfo)\n      rawContent = rawContent.slice(context.frontmatterInfo.offset);\n    const html = this.md.render(rawContent, {});\n    this.hooks.afterParse.call(this.md, context);\n    const root = cleanNode(buildTree(html, context.parserOptions));\n    root.content || (root.content = `${((_a = context.frontmatter) == null ? void 0 : _a.title) || \"\"}`);\n    return { ...context, root };\n  }\n  resolveJS(item) {\n    return patchJSItem(this.urlBuilder, item);\n  }\n  resolveCSS(item) {\n    return patchCSSItem(this.urlBuilder, item);\n  }\n  /**\n   * Get all assets from enabled plugins or filter them by plugin names as keys.\n   */\n  getAssets(keys) {\n    const styles2 = [];\n    const scripts = [];\n    keys ?? (keys = this.plugins.map((plugin2) => plugin2.name));\n    for (const assets of keys.map((key) => this.assetsMap[key])) {\n      if (assets) {\n        if (assets.styles) styles2.push(...assets.styles);\n        if (assets.scripts) scripts.push(...assets.scripts);\n      }\n    }\n    return {\n      styles: styles2.map((item) => this.resolveCSS(item)),\n      scripts: scripts.map((item) => this.resolveJS(item))\n    };\n  }\n  /**\n   * Get used assets by features object returned by `transform`.\n   */\n  getUsedAssets(features) {\n    const keys = this.plugins.map((plugin2) => plugin2.name).filter((name2) => features[name2]);\n    return this.getAssets(keys);\n  }\n}\nconst transformerVersions = {\n  \"markmap-lib\": \"0.18.11\"\n};\nexport {\n  Transformer,\n  builtInPlugins,\n  patchCSSItem,\n  patchJSItem,\n  transformerVersions\n};\n"],
  "mappings": "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G,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,GAAG;AAAA,cACpC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,QAAQ,OAAO,GAAG,GAAG,OAAO;AAAA,cACrC,QAAQ,CAAC,QAAQ,OAAO,GAAG,GAAG,OAAO;AAAA,cACrC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,GAAG,OAAO,GAAG,GAAG,OAAO;AAAA,cAChC,QAAQ,CAAC,GAAG,OAAO,GAAG,GAAG,OAAO;AAAA,cAChC,QAAQ,CAAC,GAAG,OAAO,GAAG,GAAG,OAAO;AAAA,cAChC,QAAQ,CAAC,GAAG,OAAO,GAAG,GAAG,OAAO;AAAA,cAChC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,UAAU,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,QAAQ,QAAQ,GAAG,GAAG,OAAO;AAAA,cACtC,QAAQ,CAAC,QAAQ,QAAQ,GAAG,GAAG,OAAO;AAAA,cACtC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,GAAG;AAAA,cAC9B,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,GAAG;AAAA,cAC9B,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,GAAG;AAAA,cAC9B,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,GAAG;AAAA,cAC9B,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,GAAG,OAAO,GAAG,GAAG,OAAO;AAAA,cAChC,QAAQ,CAAC,GAAG,OAAO,GAAG,GAAG,OAAO;AAAA,cAChC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cAClC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACxC,SAAS,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cACnC,SAAS,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,cACnC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,GAAG,SAAS,SAAS,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,cAC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K;AAAA,cACrC,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,cAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,cAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,cAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,cAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,cAC/B,OAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAK;AAAA,cACrC,OAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAK;AAAA,cACrC,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,cAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,cAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,cAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,cAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,cAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,cAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,cAC/B,OAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAK;AAAA,cACrC,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,cAC/B,OAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAK;AAAA,cACrC,OAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAK;AAAA,cACrC,OAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAK;AAAA,cACrC,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,cAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,cAC/B,OAAO,CAAC,GAAG,GAAG,GAAG,GAAG,KAAK;AAAA,cACzB,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,cAC/B,OAAO,CAAC,SAAS,GAAG,GAAG,GAAG,KAAK;AAAA,cAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,cAC/B,OAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAK;AA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,UAAU,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE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",
  "names": ["root", "exports", "prop", "error", "end", "self", "contains", "list", "text", "match", "schema", "Style", "styles", "i", "block", "hLinePad", "path", "name", "children", "data", "attr", "attribute", "skew", "attributes", "replace", "wideChar", "prev", "next", "depth", "htmlBuilder", "mathmlBuilder", "index", "base", "math", "buildTree", "height", "minWidth", "span", "inner", "accent", "parent", "code", "delimiters", "delimiter", "first", "Token", "table", "spacing", "textord", "args", "isCharacterBox", "replaceWith", "sub", "sup", "Lexer", "context", "delims", "Parser", "parse", "superscript", "subscript", "render", "isWhitespace", "match", "end", "next", "text", "index", "escapeHtml", "error", "options", "self", "name", "_a2", "error", "text2", "CharCodes2", "BinTrieFlags2", "code", "EntityDecoderState2", "DecodingMode2", "errors", "base", "match", "map2", "escape", "encode", "test", "set", "parse2", "styles", "isDocument2", "heading", "fromCodePoint", "has", "string", "seq", "string", "code", "regex_default", "regex_default", "regex_default", "regex_default", "regex_default", "regex_default", "decodeMap", "fromCodePoint", "_a", "replaceCodePoint", "CharCodes", "TO_LOWER_BIT", "BinTrieFlags", "isNumber", "code", "isHexadecimalCharacter", "isAsciiAlphaNumeric", "isEntityInAttributeInvalidEnd", "EntityDecoderState", "DecodingMode", "EntityDecoder", "errors", "end", "base", "_a", "replaceCodePoint", "determineBranch", "getDecoder", "fromCodePoint", "xmlCodeMap", "getCodePoint", "index", "getEscaper", "map", "escape", "data", "match", "xmlCodeMap", "escapeAttribute", "escapeText", "EntityLevel", "EncodingMode", "has", "fromCodePoint", "match", "name", "code", "entity", "regex_default", "code", "code", "name", "self", "index", "list", "name", "text", "match", "name", "index", "text", "last", "code", "end", "first", "last", "last", "nextLine", "pos", "max", "_rules", "text", "linkify", "match", "link", "escape", "postProcess", "code", "code", "isLinkOpen", "isLinkClose", "match", "match", "code", "fromCodePoint", "last", "_rules", "text", "linkify", "escape", "_rules2", "end", "regex_default", "assign", "_class", "isString", "escapeRE", "defaultOptions", "text", "self", "match", "compile", "tlds", "aliases", "name", "val", "end", "schemas", "add", "schema", "next", "list", "normalize", "map", "string", "decode", "index", "encode", "self", "name", "list", "plugin", "postProcess", "ins_plugin", "postProcess", "UNESCAPE_RE", "isDocument", "isNode", "isDocument", "isNode", "_a", "parent", "name", "error", "isNode", "root", "name", "error", "val", "data", "res", "isDocument", "res", "data", "match", "_a", "isDocument", "isNode", "map", "schema", "node", "schema", "isNode", "comment", "text", "end", "prev", "next", "i", "isBlock", "code", "comment", "end", "test", "_a", "_a", "match", "name", "stringify", "isNode", "isNode", "stringify", "merge", "map", "value", "map", "isNode", "schema", "isNode", "stringify", "comment", "isNode", "str", "end", "schema", "map", "add", "_a", "prev", "map", "schema", "schema", "prev", "seq", "seq", "schema", "format", "map", "intIdentify", "schema", "map", "comment", "seq", "schema", "pairs", "map", "schema", "pairs", "omap", "seq", "floatNaN", "floatExp", "float", "intIdentify", "intResolve", "n", "intStringify", "intOct", "int", "intHex", "schema", "prev", "set", "map", "res", "match", "schema", "map", "intOct", "int", "intHex", "floatNaN", "floatExp", "float", "merge", "set", "map", "schema", "merge", "set", "tags", "merge", "schema", "map", "_a", "isNode", "stringify", "Document", "isNode", "name", "prev", "res", "contents", "name", "code", "error", "prev", "end", "next", "comment", "last", "end", "end", "composeNode", "composeEmptyNode", "_a", "map", "composeNode", "composeEmptyNode", "seq", "end", "comment", "composeNode", "composeEmptyNode", "isMap", "prev", "map", "name", "end", "CN", "_a", "isNode", "value", "end", "error", "comment", "first", "end", "code", "first", "match", "last", "next", "comment", "error", "schema", "_a", "tag", "before", "comment", "before", "end", "end", "Document", "_a", "comment", "code", "error", "end", "Document", "BREAK", "SKIP", "REMOVE", "visit", "index", "parent", "SCALAR", "SCALAR", "isEmpty", "next", "end", "i", "ch", "SCALAR", "test", "list", "parent", "prev", "_a", "Parser", "error", "last", "map", "end", "start", "seq", "parseDocument", "Parser", "parse", "ins_plugin", "_a", "match", "parse", "config", "katexPluginModule", "_a2", "_a3", "renderAttrs", "fence", "html", "root"]
}
