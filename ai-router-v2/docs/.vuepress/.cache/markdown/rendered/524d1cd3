{"content":"<p>这两个版本做了一些 破坏性的更新，主要围绕以下两个方面：</p>\n<ul>\n<li>适配 <a href=\"https://ecosystem.vuejs.press/zh/themes/guidelines.html\" target=\"_blank\" rel=\"noopener noreferrer\">Vuepress Guidelines</a></li>\n<li>更新 vuepress-plugin-md-enhance 插件，并迁移其中的部分功能，改用 VuePress 官方插件</li>\n</ul>\n<h2 id=\"适配-vuepress-guidelines\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#适配-vuepress-guidelines\"><span>适配 VuePress Guidelines</span></a></h2>\n<p>VuePress 推出了 <a href=\"https://ecosystem.vuejs.press/zh/themes/guidelines.html\" target=\"_blank\" rel=\"noopener noreferrer\">主题开发指南</a>。</p>\n<p>这一举措旨在规范化主题开发流程，并提出了主题开发过程中需要遵守的几个约定，这包括：</p>\n<ul>\n<li>约定 CSS 变量命名规范，并约束 主要 CSS 变量的命名，如 <code v-pre>--vp-c-accent</code>，<code v-pre>--vp-c-text</code> 等。</li>\n<li>约定 主要的 HTML 元素容器应添加指定的 属性名，如 <code v-pre>vp-content</code>, <code v-pre>vp-navbar</code> 等。</li>\n<li>约定 双主题模式应使用 <code v-pre>[data-theme=&quot;light&quot;]</code> 和 <code v-pre>[data-theme=&quot;dark&quot;]</code> 来区分。</li>\n</ul>\n<p>围绕这几个约定，可以使得 VuePress 的 开发者们，可以很方便的 开发出 更具通用性的 主题和插件。</p>\n<p><code v-pre>plume</code> 主题也同样适配了这些约定：</p>\n<ul>\n<li>\n<p><strong>CSS 变量命名的变更</strong> 和 <strong>HTML 元素添加属性</strong>，对于用户是无感知的，您无需关注这方面是否会有影响。</p>\n</li>\n<li>\n<p><strong>双主题模式</strong>，对于有自定义主题需求的用户而言，如果您有重新定义深色模式下的样式，则需要做出一些调整：</p>\n<p>在 CSS 中的 <code v-pre>.dark</code> 类应替换为 <code v-pre>[data-theme=&quot;dark&quot;]</code>，请不用担心替换会带来额外的副作用，它们在 CSS 中的\n优先级是相同的，您可以安全的执行替换操作。</p>\n</li>\n</ul>\n<h2 id=\"vuepress-plugin-md-enhance-插件迁移\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#vuepress-plugin-md-enhance-插件迁移\"><span>vuepress-plugin-md-enhance 插件迁移</span></a></h2>\n<p><a href=\"https://plugin-md-enhance.vuejs.press/zh/\" target=\"_blank\" rel=\"noopener noreferrer\">vuepress-plugin-md-enhance</a> 提供了非常多的功能支持，但与之带来的困难是，\n它变得越来越臃肿，变得难以维护了。</p>\n<p>我在 <a href=\"https://github.com/vuepress-theme-hope/vuepress-theme-hope/issues/4130\" target=\"_blank\" rel=\"noopener noreferrer\">#4130</a> 中提出了拆分迁移的计划。\n因此从 <code v-pre>@2.0.0-rc.53</code> 版本开始，逐步开始拆分迁移的计划。</p>\n<p>截止到 <code v-pre>@2.0.0-rc.54</code> 版本，已经拆分出了以下插件：</p>\n<ul>\n<li><a href=\"https://ecosystem.vuejs.press/zh/plugins/markdown/markdown-hint.html\" target=\"_blank\" rel=\"noopener noreferrer\">@vuepress/plugin-markdown-hint</a></li>\n<li><a href=\"https://ecosystem.vuejs.press/zh/plugins/markdown/markdown-image.html\" target=\"_blank\" rel=\"noopener noreferrer\">@vuepress/plugin-markdown-image</a></li>\n<li><a href=\"https://ecosystem.vuejs.press/zh/plugins/markdown/markdown-math.html\" target=\"_blank\" rel=\"noopener noreferrer\">@vuepress/plugin-markdown-math</a></li>\n<li><a href=\"https://ecosystem.vuejs.press/zh/plugins/markdown/markdown-tab.html\" target=\"_blank\" rel=\"noopener noreferrer\">@vuepress/plugin-markdown-tab</a></li>\n</ul>\n<p>当前主题也将 vuepress-plugin-md-enhance 更新到 <code v-pre>@2.0.0-rc.54</code> 版本，因此，也重新接入了上述的插件。</p>\n<ul>\n<li>\n<p><code v-pre>@vuepress/plugin-markdown-hint</code> 提供了 提示容器 和 <code v-pre>github alerts</code> 支持，主题已内置了该插件，对于该插件的迁移，\n用户是无需做任何修改的，您可以继续使用这些功能。</p>\n</li>\n<li>\n<p><code v-pre>@vuepress/plugin-markdown-image</code> 提供了图片支持，主题已内置了该插件，但不启用该插件的默认功能，\n因此，如果您使用了如 <code v-pre>plugins.mdEnhance.imgSize</code> 配置项，您需要通过<code v-pre>plugins.markdownImage</code> 重新进行配置。</p>\n</li>\n<li>\n<p><code v-pre>@vuepress/plugin-markdown-math</code> 提供了数学公式支持，主题已内置了该插件，并默认启用了 <code v-pre>katex</code> 支持。</p>\n</li>\n<li>\n<p><code v-pre>@vuepress/plugin-markdown-tab</code> 提供了 Tab 容器 和 代码分组支持，主题重写了插件部分内容，对 <code v-pre>code-tabs</code> 容器\n做了一些调整，支持在 代码分组标题中显示 相关联的图标。</p>\n</li>\n</ul>\n<h2 id=\"其它更新\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#其它更新\"><span>其它更新</span></a></h2>\n<ul>\n<li>\n<p><strong>文件树</strong> 现在支持 不同的图标方案，可在 <code v-pre>:::file-tree</code> 后跟随 <code v-pre>:simple-icon</code> / <code v-pre>:colored-icon</code> 切换。</p>\n<p>默认为 colored-icon，如果切换为 simple-icon，则不再根据 文件夹名和文件扩展名匹配不同的图标，仅显示默认的\n文件夹图标和文件图标。</p>\n</li>\n<li>\n<p><strong>代码块分组</strong> 的标题现在支持显示 图标。当作为 文件名时，与 <strong>文件树</strong> 采用相同的图标解析规则，还额外支持\n不同的技术、框架、语言的名称图标。</p>\n</li>\n<li>\n<p>优化了 容器、任务列表、脚注、等的样式。</p>\n</li>\n</ul>\n","env":{"base":"/","filePath":"/Users/zhangfan/zfan2356/github/AI-Router/ai-router-v2/docs/3.更新说明/102-103.md","filePathRelative":"3.更新说明/102-103.md","frontmatter":{"title":"1.0.0-rc.102 至 rc.103 更新说明","createTime":"2024/09/24 23:45:49","permalink":"/article/6pa64b1n/"},"sfcBlocks":{"template":{"type":"template","content":"<template><p>这两个版本做了一些 破坏性的更新，主要围绕以下两个方面：</p>\n<ul>\n<li>适配 <a href=\"https://ecosystem.vuejs.press/zh/themes/guidelines.html\" target=\"_blank\" rel=\"noopener noreferrer\">Vuepress Guidelines</a></li>\n<li>更新 vuepress-plugin-md-enhance 插件，并迁移其中的部分功能，改用 VuePress 官方插件</li>\n</ul>\n<h2 id=\"适配-vuepress-guidelines\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#适配-vuepress-guidelines\"><span>适配 VuePress Guidelines</span></a></h2>\n<p>VuePress 推出了 <a href=\"https://ecosystem.vuejs.press/zh/themes/guidelines.html\" target=\"_blank\" rel=\"noopener noreferrer\">主题开发指南</a>。</p>\n<p>这一举措旨在规范化主题开发流程，并提出了主题开发过程中需要遵守的几个约定，这包括：</p>\n<ul>\n<li>约定 CSS 变量命名规范，并约束 主要 CSS 变量的命名，如 <code v-pre>--vp-c-accent</code>，<code v-pre>--vp-c-text</code> 等。</li>\n<li>约定 主要的 HTML 元素容器应添加指定的 属性名，如 <code v-pre>vp-content</code>, <code v-pre>vp-navbar</code> 等。</li>\n<li>约定 双主题模式应使用 <code v-pre>[data-theme=&quot;light&quot;]</code> 和 <code v-pre>[data-theme=&quot;dark&quot;]</code> 来区分。</li>\n</ul>\n<p>围绕这几个约定，可以使得 VuePress 的 开发者们，可以很方便的 开发出 更具通用性的 主题和插件。</p>\n<p><code v-pre>plume</code> 主题也同样适配了这些约定：</p>\n<ul>\n<li>\n<p><strong>CSS 变量命名的变更</strong> 和 <strong>HTML 元素添加属性</strong>，对于用户是无感知的，您无需关注这方面是否会有影响。</p>\n</li>\n<li>\n<p><strong>双主题模式</strong>，对于有自定义主题需求的用户而言，如果您有重新定义深色模式下的样式，则需要做出一些调整：</p>\n<p>在 CSS 中的 <code v-pre>.dark</code> 类应替换为 <code v-pre>[data-theme=&quot;dark&quot;]</code>，请不用担心替换会带来额外的副作用，它们在 CSS 中的\n优先级是相同的，您可以安全的执行替换操作。</p>\n</li>\n</ul>\n<h2 id=\"vuepress-plugin-md-enhance-插件迁移\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#vuepress-plugin-md-enhance-插件迁移\"><span>vuepress-plugin-md-enhance 插件迁移</span></a></h2>\n<p><a href=\"https://plugin-md-enhance.vuejs.press/zh/\" target=\"_blank\" rel=\"noopener noreferrer\">vuepress-plugin-md-enhance</a> 提供了非常多的功能支持，但与之带来的困难是，\n它变得越来越臃肿，变得难以维护了。</p>\n<p>我在 <a href=\"https://github.com/vuepress-theme-hope/vuepress-theme-hope/issues/4130\" target=\"_blank\" rel=\"noopener noreferrer\">#4130</a> 中提出了拆分迁移的计划。\n因此从 <code v-pre>@2.0.0-rc.53</code> 版本开始，逐步开始拆分迁移的计划。</p>\n<p>截止到 <code v-pre>@2.0.0-rc.54</code> 版本，已经拆分出了以下插件：</p>\n<ul>\n<li><a href=\"https://ecosystem.vuejs.press/zh/plugins/markdown/markdown-hint.html\" target=\"_blank\" rel=\"noopener noreferrer\">@vuepress/plugin-markdown-hint</a></li>\n<li><a href=\"https://ecosystem.vuejs.press/zh/plugins/markdown/markdown-image.html\" target=\"_blank\" rel=\"noopener noreferrer\">@vuepress/plugin-markdown-image</a></li>\n<li><a href=\"https://ecosystem.vuejs.press/zh/plugins/markdown/markdown-math.html\" target=\"_blank\" rel=\"noopener noreferrer\">@vuepress/plugin-markdown-math</a></li>\n<li><a href=\"https://ecosystem.vuejs.press/zh/plugins/markdown/markdown-tab.html\" target=\"_blank\" rel=\"noopener noreferrer\">@vuepress/plugin-markdown-tab</a></li>\n</ul>\n<p>当前主题也将 vuepress-plugin-md-enhance 更新到 <code v-pre>@2.0.0-rc.54</code> 版本，因此，也重新接入了上述的插件。</p>\n<ul>\n<li>\n<p><code v-pre>@vuepress/plugin-markdown-hint</code> 提供了 提示容器 和 <code v-pre>github alerts</code> 支持，主题已内置了该插件，对于该插件的迁移，\n用户是无需做任何修改的，您可以继续使用这些功能。</p>\n</li>\n<li>\n<p><code v-pre>@vuepress/plugin-markdown-image</code> 提供了图片支持，主题已内置了该插件，但不启用该插件的默认功能，\n因此，如果您使用了如 <code v-pre>plugins.mdEnhance.imgSize</code> 配置项，您需要通过<code v-pre>plugins.markdownImage</code> 重新进行配置。</p>\n</li>\n<li>\n<p><code v-pre>@vuepress/plugin-markdown-math</code> 提供了数学公式支持，主题已内置了该插件，并默认启用了 <code v-pre>katex</code> 支持。</p>\n</li>\n<li>\n<p><code v-pre>@vuepress/plugin-markdown-tab</code> 提供了 Tab 容器 和 代码分组支持，主题重写了插件部分内容，对 <code v-pre>code-tabs</code> 容器\n做了一些调整，支持在 代码分组标题中显示 相关联的图标。</p>\n</li>\n</ul>\n<h2 id=\"其它更新\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#其它更新\"><span>其它更新</span></a></h2>\n<ul>\n<li>\n<p><strong>文件树</strong> 现在支持 不同的图标方案，可在 <code v-pre>:::file-tree</code> 后跟随 <code v-pre>:simple-icon</code> / <code v-pre>:colored-icon</code> 切换。</p>\n<p>默认为 colored-icon，如果切换为 simple-icon，则不再根据 文件夹名和文件扩展名匹配不同的图标，仅显示默认的\n文件夹图标和文件图标。</p>\n</li>\n<li>\n<p><strong>代码块分组</strong> 的标题现在支持显示 图标。当作为 文件名时，与 <strong>文件树</strong> 采用相同的图标解析规则，还额外支持\n不同的技术、框架、语言的名称图标。</p>\n</li>\n<li>\n<p>优化了 容器、任务列表、脚注、等的样式。</p>\n</li>\n</ul>\n</template>","contentStripped":"<p>这两个版本做了一些 破坏性的更新，主要围绕以下两个方面：</p>\n<ul>\n<li>适配 <a href=\"https://ecosystem.vuejs.press/zh/themes/guidelines.html\" target=\"_blank\" rel=\"noopener noreferrer\">Vuepress Guidelines</a></li>\n<li>更新 vuepress-plugin-md-enhance 插件，并迁移其中的部分功能，改用 VuePress 官方插件</li>\n</ul>\n<h2 id=\"适配-vuepress-guidelines\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#适配-vuepress-guidelines\"><span>适配 VuePress Guidelines</span></a></h2>\n<p>VuePress 推出了 <a href=\"https://ecosystem.vuejs.press/zh/themes/guidelines.html\" target=\"_blank\" rel=\"noopener noreferrer\">主题开发指南</a>。</p>\n<p>这一举措旨在规范化主题开发流程，并提出了主题开发过程中需要遵守的几个约定，这包括：</p>\n<ul>\n<li>约定 CSS 变量命名规范，并约束 主要 CSS 变量的命名，如 <code v-pre>--vp-c-accent</code>，<code v-pre>--vp-c-text</code> 等。</li>\n<li>约定 主要的 HTML 元素容器应添加指定的 属性名，如 <code v-pre>vp-content</code>, <code v-pre>vp-navbar</code> 等。</li>\n<li>约定 双主题模式应使用 <code v-pre>[data-theme=&quot;light&quot;]</code> 和 <code v-pre>[data-theme=&quot;dark&quot;]</code> 来区分。</li>\n</ul>\n<p>围绕这几个约定，可以使得 VuePress 的 开发者们，可以很方便的 开发出 更具通用性的 主题和插件。</p>\n<p><code v-pre>plume</code> 主题也同样适配了这些约定：</p>\n<ul>\n<li>\n<p><strong>CSS 变量命名的变更</strong> 和 <strong>HTML 元素添加属性</strong>，对于用户是无感知的，您无需关注这方面是否会有影响。</p>\n</li>\n<li>\n<p><strong>双主题模式</strong>，对于有自定义主题需求的用户而言，如果您有重新定义深色模式下的样式，则需要做出一些调整：</p>\n<p>在 CSS 中的 <code v-pre>.dark</code> 类应替换为 <code v-pre>[data-theme=&quot;dark&quot;]</code>，请不用担心替换会带来额外的副作用，它们在 CSS 中的\n优先级是相同的，您可以安全的执行替换操作。</p>\n</li>\n</ul>\n<h2 id=\"vuepress-plugin-md-enhance-插件迁移\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#vuepress-plugin-md-enhance-插件迁移\"><span>vuepress-plugin-md-enhance 插件迁移</span></a></h2>\n<p><a href=\"https://plugin-md-enhance.vuejs.press/zh/\" target=\"_blank\" rel=\"noopener noreferrer\">vuepress-plugin-md-enhance</a> 提供了非常多的功能支持，但与之带来的困难是，\n它变得越来越臃肿，变得难以维护了。</p>\n<p>我在 <a href=\"https://github.com/vuepress-theme-hope/vuepress-theme-hope/issues/4130\" target=\"_blank\" rel=\"noopener noreferrer\">#4130</a> 中提出了拆分迁移的计划。\n因此从 <code v-pre>@2.0.0-rc.53</code> 版本开始，逐步开始拆分迁移的计划。</p>\n<p>截止到 <code v-pre>@2.0.0-rc.54</code> 版本，已经拆分出了以下插件：</p>\n<ul>\n<li><a href=\"https://ecosystem.vuejs.press/zh/plugins/markdown/markdown-hint.html\" target=\"_blank\" rel=\"noopener noreferrer\">@vuepress/plugin-markdown-hint</a></li>\n<li><a href=\"https://ecosystem.vuejs.press/zh/plugins/markdown/markdown-image.html\" target=\"_blank\" rel=\"noopener noreferrer\">@vuepress/plugin-markdown-image</a></li>\n<li><a href=\"https://ecosystem.vuejs.press/zh/plugins/markdown/markdown-math.html\" target=\"_blank\" rel=\"noopener noreferrer\">@vuepress/plugin-markdown-math</a></li>\n<li><a href=\"https://ecosystem.vuejs.press/zh/plugins/markdown/markdown-tab.html\" target=\"_blank\" rel=\"noopener noreferrer\">@vuepress/plugin-markdown-tab</a></li>\n</ul>\n<p>当前主题也将 vuepress-plugin-md-enhance 更新到 <code v-pre>@2.0.0-rc.54</code> 版本，因此，也重新接入了上述的插件。</p>\n<ul>\n<li>\n<p><code v-pre>@vuepress/plugin-markdown-hint</code> 提供了 提示容器 和 <code v-pre>github alerts</code> 支持，主题已内置了该插件，对于该插件的迁移，\n用户是无需做任何修改的，您可以继续使用这些功能。</p>\n</li>\n<li>\n<p><code v-pre>@vuepress/plugin-markdown-image</code> 提供了图片支持，主题已内置了该插件，但不启用该插件的默认功能，\n因此，如果您使用了如 <code v-pre>plugins.mdEnhance.imgSize</code> 配置项，您需要通过<code v-pre>plugins.markdownImage</code> 重新进行配置。</p>\n</li>\n<li>\n<p><code v-pre>@vuepress/plugin-markdown-math</code> 提供了数学公式支持，主题已内置了该插件，并默认启用了 <code v-pre>katex</code> 支持。</p>\n</li>\n<li>\n<p><code v-pre>@vuepress/plugin-markdown-tab</code> 提供了 Tab 容器 和 代码分组支持，主题重写了插件部分内容，对 <code v-pre>code-tabs</code> 容器\n做了一些调整，支持在 代码分组标题中显示 相关联的图标。</p>\n</li>\n</ul>\n<h2 id=\"其它更新\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#其它更新\"><span>其它更新</span></a></h2>\n<ul>\n<li>\n<p><strong>文件树</strong> 现在支持 不同的图标方案，可在 <code v-pre>:::file-tree</code> 后跟随 <code v-pre>:simple-icon</code> / <code v-pre>:colored-icon</code> 切换。</p>\n<p>默认为 colored-icon，如果切换为 simple-icon，则不再根据 文件夹名和文件扩展名匹配不同的图标，仅显示默认的\n文件夹图标和文件图标。</p>\n</li>\n<li>\n<p><strong>代码块分组</strong> 的标题现在支持显示 图标。当作为 文件名时，与 <strong>文件树</strong> 采用相同的图标解析规则，还额外支持\n不同的技术、框架、语言的名称图标。</p>\n</li>\n<li>\n<p>优化了 容器、任务列表、脚注、等的样式。</p>\n</li>\n</ul>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"这两个版本做了一些 破坏性的更新，主要围绕以下两个方面：\n\n- 适配 [Vuepress Guidelines](https://ecosystem.vuejs.press/zh/themes/guidelines.html)\n- 更新 vuepress-plugin-md-enhance 插件，并迁移其中的部分功能，改用 VuePress 官方插件\n\n## 适配 VuePress Guidelines\n\nVuePress 推出了 [主题开发指南](https://ecosystem.vuejs.press/zh/themes/guidelines.html)。\n\n这一举措旨在规范化主题开发流程，并提出了主题开发过程中需要遵守的几个约定，这包括：\n\n- 约定 CSS 变量命名规范，并约束 主要 CSS 变量的命名，如 `--vp-c-accent`，`--vp-c-text` 等。\n- 约定 主要的 HTML 元素容器应添加指定的 属性名，如 `vp-content`, `vp-navbar` 等。\n- 约定 双主题模式应使用 `[data-theme=\"light\"]` 和 `[data-theme=\"dark\"]` 来区分。\n\n围绕这几个约定，可以使得 VuePress 的 开发者们，可以很方便的 开发出 更具通用性的 主题和插件。\n\n`plume` 主题也同样适配了这些约定：\n\n- **CSS 变量命名的变更** 和 **HTML 元素添加属性**，对于用户是无感知的，您无需关注这方面是否会有影响。\n\n- **双主题模式**，对于有自定义主题需求的用户而言，如果您有重新定义深色模式下的样式，则需要做出一些调整：\n\n  在 CSS 中的 `.dark` 类应替换为 `[data-theme=\"dark\"]`，请不用担心替换会带来额外的副作用，它们在 CSS 中的\n  优先级是相同的，您可以安全的执行替换操作。\n\n## vuepress-plugin-md-enhance 插件迁移\n\n[vuepress-plugin-md-enhance](https://plugin-md-enhance.vuejs.press/zh/) 提供了非常多的功能支持，但与之带来的困难是，\n它变得越来越臃肿，变得难以维护了。\n\n我在 [#4130](https://github.com/vuepress-theme-hope/vuepress-theme-hope/issues/4130) 中提出了拆分迁移的计划。\n因此从 `@2.0.0-rc.53` 版本开始，逐步开始拆分迁移的计划。\n\n截止到 `@2.0.0-rc.54` 版本，已经拆分出了以下插件：\n\n- [@vuepress/plugin-markdown-hint](https://ecosystem.vuejs.press/zh/plugins/markdown/markdown-hint.html)\n- [@vuepress/plugin-markdown-image](https://ecosystem.vuejs.press/zh/plugins/markdown/markdown-image.html)\n- [@vuepress/plugin-markdown-math](https://ecosystem.vuejs.press/zh/plugins/markdown/markdown-math.html)\n- [@vuepress/plugin-markdown-tab](https://ecosystem.vuejs.press/zh/plugins/markdown/markdown-tab.html)\n\n当前主题也将 vuepress-plugin-md-enhance 更新到 `@2.0.0-rc.54` 版本，因此，也重新接入了上述的插件。\n\n- `@vuepress/plugin-markdown-hint` 提供了 提示容器 和 `github alerts` 支持，主题已内置了该插件，对于该插件的迁移，\n  用户是无需做任何修改的，您可以继续使用这些功能。\n\n- `@vuepress/plugin-markdown-image` 提供了图片支持，主题已内置了该插件，但不启用该插件的默认功能，\n  因此，如果您使用了如 `plugins.mdEnhance.imgSize` 配置项，您需要通过`plugins.markdownImage` 重新进行配置。\n\n- `@vuepress/plugin-markdown-math` 提供了数学公式支持，主题已内置了该插件，并默认启用了 `katex` 支持。\n\n- `@vuepress/plugin-markdown-tab` 提供了 Tab 容器 和 代码分组支持，主题重写了插件部分内容，对 `code-tabs` 容器\n  做了一些调整，支持在 代码分组标题中显示 相关联的图标。\n\n## 其它更新\n\n- **文件树** 现在支持 不同的图标方案，可在 `:::file-tree` 后跟随 `:simple-icon` / `:colored-icon` 切换。\n\n  默认为 colored-icon，如果切换为 simple-icon，则不再根据 文件夹名和文件扩展名匹配不同的图标，仅显示默认的\n  文件夹图标和文件图标。\n\n- **代码块分组** 的标题现在支持显示 图标。当作为 文件名时，与 **文件树** 采用相同的图标解析规则，还额外支持\n  不同的技术、框架、语言的名称图标。\n\n- 优化了 容器、任务列表、脚注、等的样式。","excerpt":"","includedFiles":[],"tasklistId":0,"title":"","headers":[{"level":2,"title":"适配 VuePress Guidelines","slug":"适配-vuepress-guidelines","link":"#适配-vuepress-guidelines","children":[]},{"level":2,"title":"vuepress-plugin-md-enhance 插件迁移","slug":"vuepress-plugin-md-enhance-插件迁移","link":"#vuepress-plugin-md-enhance-插件迁移","children":[]},{"level":2,"title":"其它更新","slug":"其它更新","link":"#其它更新","children":[]}]}}
